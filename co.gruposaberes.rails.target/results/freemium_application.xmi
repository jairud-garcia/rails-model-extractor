<?xml version="1.0" encoding="ASCII"?>
<models:Application xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:models="http://www.gruposaberes.co/rails/parser/Models" name="freemium">
  <rubyClasses name="Actividad" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":indicador" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":calificacion" relationType="has_one"/>
    <classElements xsi:type="models:Relationship" name=":asignacion" relationType="has_one"/>
    <classElements xsi:type="models:Relationship" name=":tarea" relationType="has_one"/>
    <classElements xsi:type="models:Relationship" name=":evento" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="set_score_siblings"/>
    <classElements xsi:type="models:RubyMethod" name="unlink_score"/>
    <classElements xsi:type="models:RubyMethod" name="clonar"/>
    <classElements xsi:type="models:RubyMethod" name="validar_fecha"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
  </rubyClasses>
  <rubyClasses name="Acudiente" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":estudiantes_as_padre" relationType="has_many">
      <options key=":foreign_key" value="padre_id"/>
      <options key=":class_name" value="Estudiante"/>
      <options key=":conditions" value="{:activo=>true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":estudiantes_as_madre" relationType="has_many">
      <options key=":foreign_key" value="madre_id"/>
      <options key=":class_name" value="Estudiante"/>
      <options key=":conditions" value="{:activo=>true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":estudiantes" relationType="has_many">
      <options key=":conditions" value="{:activo=>true}"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="set_profiles"/>
    <classElements xsi:type="models:RubyMethod" name="check_person"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="self.nivel_educativo"/>
    <classElements xsi:type="models:RubyMethod" name="self.parentesco"/>
    <classElements xsi:type="models:RubyMethod" name="nombre_completo"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="active"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="get_active_students"/>
    <classElements xsi:type="models:RubyMethod" name="get_all_students"/>
    <classElements xsi:type="models:RubyMethod" name="students"/>
    <classElements xsi:type="models:RubyMethod" name="get_blocks_to_guardians"/>
  </rubyClasses>
  <rubyClasses name="Administrador" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":cargo" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":director_profiles" relationType="has_many">
      <options key=":foreign_key" value="director_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":headquarters" relationType="has_many">
      <options key=":foreign_key" value="administrator_id"/>
      <options key=":class_name" value="Headquarter"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":user" relationType="has_one">
      <options key=":through" value=":persona"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="set_cargo"/>
    <classElements xsi:type="models:RubyMethod" name="set_profiles"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="nombre_completo"/>
    <classElements xsi:type="models:RubyMethod" name="validar_retirement_date_institution"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="active"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="get_rh_person"/>
    <classElements xsi:type="models:RubyMethod" name="new_profiles"/>
    <classElements xsi:type="models:RubyMethod" name="new_profiles="/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="set_admin_profiles"/>
  </rubyClasses>
  <rubyClasses name="AllocationMaterias" superType="ActiveRecord::Base">
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="Appointment" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to">
      <options key=":class_name" value="Persona"/>
      <options key=":foreign_key" value="person_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":school" relationType="belongs_to">
      <options key=":class_name" value="Colegio"/>
      <options key=":foreign_key" value="school_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":place" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="get_data_hurts"/>
    <classElements xsi:type="models:RubyMethod" name="get_data_regions"/>
    <classElements xsi:type="models:RubyMethod" name="get_regions"/>
    <classElements xsi:type="models:RubyMethod" name="get_injuries"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="self.responsible_people"/>
    <classElements xsi:type="models:RubyMethod" name="get_responsable"/>
    <classElements xsi:type="models:RubyMethod" name="set_name_person"/>
    <classElements xsi:type="models:RubyMethod" name="get_identification"/>
    <classElements xsi:type="models:RubyMethod" name="get_date_and_hour_consult"/>
    <classElements xsi:type="models:RubyMethod" name="get_dispatched_to"/>
  </rubyClasses>
  <rubyClasses name="Area" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":docentes" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":asignaturas" relationType="has_many">
      <options key=":conditions" value="{:activo => true}"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
  </rubyClasses>
  <rubyClasses name="Asignacion" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":curso" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":evaluacion" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":evento" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":resultados" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":actividad" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":calificacion" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="evaluacion_completa"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="clone_allocation"/>
    <classElements xsi:type="models:RubyMethod" name="fechas_validas"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="disponible"/>
  </rubyClasses>
  <rubyClasses name="Asignatura" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":area" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":grade" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":programa" relationType="has_one"/>
    <classElements xsi:type="models:Relationship" name=":materias" relationType="has_many">
      <options key=":conditions" value="{:activo => true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":teacher_advises" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":super_asignatura_pesos" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":super_asignaturas" relationType="has_many">
      <options key=":through" value=":super_asignatura_pesos"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="before_validation"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="self.batch_creation_csv"/>
    <classElements xsi:type="models:RubyMethod" name="self.process_field"/>
  </rubyClasses>
  <rubyClasses name="Asistencia" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":horario" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":attendances" relationType="has_many">
      <options key=":inverse_of" value=":asistencia"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="validate_date_day"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="validar_fecha"/>
    <classElements xsi:type="models:RubyMethod" name="validate_date_within_a_period"/>
    <classElements xsi:type="models:RubyMethod" name="set_caches"/>
    <classElements xsi:type="models:RubyMethod" name="create_counter_cache"/>
    <classElements xsi:type="models:RubyMethod" name="create_attendances_cache"/>
  </rubyClasses>
  <rubyClasses name="AssignmentPerson" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":quality_questionnaire" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":people" relationType="belongs_to">
      <options key=":class_name" value="Persona"/>
      <options key=":foreign_key" value="person_id"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="self.states"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="answer_sheet"/>
    <classElements xsi:type="models:RubyMethod" name="delete_answer"/>
    <classElements xsi:type="models:RubyMethod" name="delete_answer_sheet"/>
  </rubyClasses>
  <rubyClasses name="AssignmentSubject" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":quality_teacher_questionnaire" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":teacher_questionnaire_answer_sheets" relationType="has_many">
      <options key=":dependent" value=":delete_all"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":subject" relationType="belongs_to">
      <options key=":class_name" value="Materia"/>
    </classElements>
  </rubyClasses>
  <rubyClasses name="AsyncTask" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":attachment" relationType="belongs_to">
      <options key=":foreign_key" value="attachment_id"/>
      <options key=":class_name" value="Binario"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":usuario" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to">
      <options key=":foreign_key" value="school_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":responses" relationType="has_many">
      <options key=":foreign_key" value="task_id"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="self.states"/>
    <classElements xsi:type="models:RubyMethod" name="self.kinds"/>
    <classElements xsi:type="models:RubyMethod" name="self.not_read_only_kinds"/>
    <classElements xsi:type="models:RubyMethod" name="self.read_only_kinds"/>
    <classElements xsi:type="models:RubyMethod" name="params="/>
    <classElements xsi:type="models:RubyMethod" name="params"/>
    <classElements xsi:type="models:RubyMethod" name="set_metrics"/>
    <classElements xsi:type="models:RubyMethod" name="set_vars"/>
  </rubyClasses>
  <rubyClasses name="Attendance" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":student" relationType="belongs_to">
      <options key=":foreign_key" value="student_id"/>
      <options key=":class_name" value="Estudiante"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":asistencia" relationType="belongs_to">
      <options key=":inverse_of" value=":attendances"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="get_counter"/>
    <classElements xsi:type="models:RubyMethod" name="update_counter"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_save"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
  </rubyClasses>
  <rubyClasses name="AuthenticationConfig" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":school" relationType="belongs_to">
      <options key=":class_name" value="Colegio"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":authentication_config_domains" relationType="has_many"/>
  </rubyClasses>
  <rubyClasses name="AuthenticationConfigDomain" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":authentication_config" relationType="belongs_to"/>
  </rubyClasses>
  <rubyClasses name="Binario" superType="ActiveRecord::Base">
    <classElements xsi:type="models:RubyMethod" name="Binario.attachment_options"/>
  </rubyClasses>
  <rubyClasses name="Block" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona_blocks" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":personas" relationType="has_many">
      <options key=":through" value=":persona_blocks"/>
      <options key=":class_name" value="Persona"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="Boletin" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":periodo" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":docente" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":curso" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="delete_duplicated"/>
    <classElements xsi:type="models:RubyMethod" name="self.obtener_boletin"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="self.crear_boletin"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
  </rubyClasses>
  <rubyClasses name="Book" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":books_requests" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":book_marks" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":sold_books" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":areas" relationType="has_and_belongs_to_many"/>
    <classElements xsi:type="models:Relationship" name=":binary" relationType="belongs_to">
      <options key=":class_name" value="Binario"/>
      <options key=":foreign_key" value=":binary_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":copy" relationType="has_one">
      <options key=":foreign_key" value="original_id"/>
      <options key=":class_name" value="Book"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":original" relationType="belongs_to">
      <options key=":foreign_key" value="original_id"/>
      <options key=":class_name" value="Book"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="set_ipaper_id"/>
    <classElements xsi:type="models:RubyMethod" name="validate_state"/>
    <classElements xsi:type="models:RubyMethod" name="get_convert_status"/>
    <classElements xsi:type="models:RubyMethod" name="clone"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="update_to_crocodoc"/>
    <classElements xsi:type="models:RubyMethod" name="crocodoc_uuid"/>
    <classElements xsi:type="models:RubyMethod" name="crocodoc_uuid="/>
    <classElements xsi:type="models:RubyMethod" name="load_thumbnail_image"/>
    <classElements xsi:type="models:RubyMethod" name="update_to_scribd"/>
    <classElements xsi:type="models:RubyMethod" name="self.states"/>
  </rubyClasses>
  <rubyClasses name="BookMark" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":book" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":tarea" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":evaluacion" relationType="belongs_to"/>
  </rubyClasses>
  <rubyClasses name="BooksRequest" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":book" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":docente" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
  </rubyClasses>
  <rubyClasses name="BusPath" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":service" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":monitor" relationType="belongs_to">
      <options key=":foreign_key" value="person_monitor_id"/>
      <options key=":class_name" value="Persona"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":driver" relationType="belongs_to">
      <options key=":foreign_key" value="person_id"/>
      <options key=":class_name" value="Persona"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":service_schedules" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_save"/>
    <classElements xsi:type="models:RubyMethod" name="self.batch_creation_csv"/>
  </rubyClasses>
  <rubyClasses name="Calificacion" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":periodo" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":logro" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":indicador" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":actividad" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":programa" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":valores" relationType="has_many">
      <options key=":inverse_of" value=":calificacion"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":tarea" relationType="has_one">
      <options key=":conditions" value="{:activo=>true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":evaluacion" relationType="has_one">
      <options key=":conditions" value="{:active=>true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":score_statistics" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":calificacion" relationType="belongs_to">
      <options key=":inverse_of" value=":calificaciones"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":calificaciones" relationType="has_many">
      <options key=":inverse_of" value=":calificacion"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="validate_dates"/>
    <classElements xsi:type="models:RubyMethod" name="before_destroy_score"/>
    <classElements xsi:type="models:RubyMethod" name="set_weight"/>
    <classElements xsi:type="models:RubyMethod" name="recalculate_in_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="get_weight"/>
    <classElements xsi:type="models:RubyMethod" name="letra_equivalente"/>
    <classElements xsi:type="models:RubyMethod" name="letra_por_rango"/>
    <classElements xsi:type="models:RubyMethod" name="performance_person"/>
    <classElements xsi:type="models:RubyMethod" name="get_value"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_save"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="is_leaf"/>
    <classElements xsi:type="models:RubyMethod" name="get_acomplishment_name"/>
    <classElements xsi:type="models:RubyMethod" name="get_acomplishment_indicator_name"/>
    <classElements xsi:type="models:RubyMethod" name="is_eliminable"/>
    <classElements xsi:type="models:RubyMethod" name="self.crear_calificacion"/>
    <classElements xsi:type="models:RubyMethod" name="adicional="/>
    <classElements xsi:type="models:RubyMethod" name="get_descendants_and_current"/>
  </rubyClasses>
  <rubyClasses name="CardSetting" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="Cargo" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":administradores" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
  </rubyClasses>
  <rubyClasses name="Categoria" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":rangos" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":preguntas" relationType="has_many">
      <options key=":conditions" value="{:active => true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":opcion_preguntas" relationType="has_many">
      <options key=":class_name" value="Pregunta"/>
      <options key=":conditions" value="{&#xA;    :question_type_id =>[QuestionType::OPCIONES, QuestionType::RANGO, QuestionType::VERDADEROFALSO], :active => true&#xA;  }"/>
      <options key=":order" value="orden"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":survey_permisions" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":evaluacion" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="new_profiles"/>
    <classElements xsi:type="models:RubyMethod" name="new_profiles="/>
    <classElements xsi:type="models:RubyMethod" name="desactivate_questions"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_save"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="set_admin_profiles"/>
  </rubyClasses>
  <rubyClasses name="Ciudad" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegios" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":personas" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":comunas" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":departamento" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":pais" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="name_city"/>
    <classElements xsi:type="models:RubyMethod" name="divipola"/>
  </rubyClasses>
  <rubyClasses name="Cobro" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":periodo" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":conceptos" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":facturas" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="validar_fecha"/>
    <classElements xsi:type="models:RubyMethod" name="validar_anho_academico"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
  </rubyClasses>
  <rubyClasses name="Colegio" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":personas" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":estudiantes" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":acudientes" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":docentes" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":materias" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":cursos" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":administradores" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":logo" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":periodos" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":notificaciones" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":ciudad" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":pais" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":departamento" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":communication_configuration" relationType="has_one">
      <options key=":foreign_key" value=":school_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":logins" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":facturas" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":informes" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":plantillas" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":asignaturas" relationType="has_many">
      <options key=":conditions" value="{:activo => true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":sign_ups" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":headquarters" relationType="has_many">
      <options key=":foreign_key" value="school_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":sign_up_test" relationType="has_one">
      <options key=":conditions" value="{:active => true, :test_type=>'student'}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":card_setting" relationType="has_one"/>
    <classElements xsi:type="models:Relationship" name=":school_config" relationType="has_one">
      <options key=":foreign_key" value="school_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":sign_up_tests" relationType="has_many">
      <options key=":conditions" value="{:active => true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":grades" relationType="has_many">
      <options key=":foreign_key" value="school_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":smtp_servers" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":parent_on_behalf_student_permissions" relationType="has_many">
      <options key=":foreign_key" value=":school_id"/>
      <options key=":class_name" value="ParentOnbehalfStudentPermission"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":parent_on_behalf_students_grades" relationType="has_many">
      <options key=":through" value=":parent_on_behalf_student_permissions"/>
      <options key=":source" value=":grade"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":authentication_config" relationType="has_one">
      <options key=":foreign_key" value="school_id"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="validate_e_mail"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="create_grades"/>
    <classElements xsi:type="models:RubyMethod" name="initialize"/>
    <classElements xsi:type="models:RubyMethod" name="self.enable_edition_for_student_options"/>
    <classElements xsi:type="models:RubyMethod" name="self.get_enable_edition_for_student_option_name"/>
    <classElements xsi:type="models:RubyMethod" name="periodo_actual"/>
    <classElements xsi:type="models:RubyMethod" name="self.grados"/>
    <classElements xsi:type="models:RubyMethod" name="self.english_grades"/>
    <classElements xsi:type="models:RubyMethod" name="self.jornadas"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="ubicacion"/>
    <classElements xsi:type="models:RubyMethod" name="ubicacion="/>
    <classElements xsi:type="models:RubyMethod" name="report_count_by_time_and_profile"/>
    <classElements xsi:type="models:RubyMethod" name="generate_random_url"/>
    <classElements xsi:type="models:RubyMethod" name="erase_in_chain"/>
    <classElements xsi:type="models:RubyMethod" name="setup_configurations"/>
    <classElements xsi:type="models:RubyMethod" name="setup_templates"/>
  </rubyClasses>
  <rubyClasses name="Comentario" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":binario" relationType="belongs_to">
      <options key=":conditions" value="{:state => Binario::ESTADO_ACTIVO}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":user" relationType="belongs_to">
      <options key=":foreign_key" value=":created_by"/>
      <options key=":class_name" value="Usuario"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":pending_notification" relationType="has_one">
      <options key=":dependent" value=":destroy"/>
      <options key=":foreign_key" value="post_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":topic" relationType="belongs_to">
      <options key=":class_name" value="Comentario"/>
      <options key=":foreign_key" value="topic_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":topic_posts" relationType="has_many">
      <options key=":class_name" value="Comentario"/>
      <options key=":foreign_key" value="topic_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":parent" relationType="belongs_to">
      <options key=":class_name" value="Comentario"/>
      <options key=":foreign_key" value="comentario_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":comentarios" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
  </rubyClasses>
  <rubyClasses name="CommunicationConfiguration" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to">
      <options key=":foreign_key" value=":school_id"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="stmp_servers"/>
  </rubyClasses>
  <rubyClasses name="Comuna" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":ciudad" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":personas" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
  </rubyClasses>
  <rubyClasses name="Concepto" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":cobro" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":items" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":facturas" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":concepto_personas" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":grade" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="payment_validation"/>
    <classElements xsi:type="models:RubyMethod" name="states_validation"/>
    <classElements xsi:type="models:RubyMethod" name="self.states"/>
  </rubyClasses>
  <rubyClasses name="Configuration" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":configurable" relationType="belongs_to">
      <options key=":polymorphic" value="true"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="ContadorAsistencia" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":periodo" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":estudiante" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="update_counts"/>
    <classElements xsi:type="models:RubyMethod" name="self.get_nonattendances"/>
  </rubyClasses>
  <rubyClasses name="Contenido" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":binario" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":materias" relationType="has_and_belongs_to_many"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="anular"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="validate_file_selected"/>
  </rubyClasses>
  <rubyClasses name="CourseStudent" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":curso" relationType="belongs_to">
      <options key=":class_name" value="Curso"/>
      <options key=":foreign_key" value="course_id"/>
      <options key=":conditions" value="{:activo => true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":estudiante" relationType="belongs_to">
      <options key=":class_name" value="Estudiante"/>
      <options key=":foreign_key" value="student_id"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="active"/>
    <classElements xsi:type="models:RubyMethod" name="update_course"/>
    <classElements xsi:type="models:RubyMethod" name="approved="/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="validate_uniqueness_course"/>
    <classElements xsi:type="models:RubyMethod" name="get_approbation"/>
    <classElements xsi:type="models:RubyMethod" name="get_repeated"/>
    <classElements xsi:type="models:RubyMethod" name="get_pay_enrollment"/>
    <classElements xsi:type="models:RubyMethod" name="set_defaults"/>
    <classElements xsi:type="models:RubyMethod" name="set_uniq_current_sign_up"/>
    <classElements xsi:type="models:RubyMethod" name="migrate_course"/>
    <classElements xsi:type="models:RubyMethod" name="migrate_topic"/>
  </rubyClasses>
  <rubyClasses name="CrocodocApi">
    <classElements xsi:type="models:RubyMethod" name="self.get_thumbnail"/>
    <classElements xsi:type="models:RubyMethod" name="self.delete"/>
    <classElements xsi:type="models:RubyMethod" name="self.status"/>
  </rubyClasses>
  <rubyClasses name="Curso" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":docente" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":periodo" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":grade" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":allocation_director" relationType="belongs_to">
      <options key=":foreign_key" value="allocation_director_id"/>
      <options key=":class_name" value="VariableAssignment"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":allocation_institution" relationType="belongs_to">
      <options key=":foreign_key" value="allocation_institution_id"/>
      <options key=":class_name" value="VariableAssignment"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":materias" relationType="has_many">
      <options key=":conditions" value="{:activo => true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":notificaciones" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":variable_assignments" relationType="has_many">
      <options key=":foreign_key" value="course_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":super_materias" relationType="has_many">
      <options key=":order" value="super_materias.priority ASC"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":boletines" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":sold_books" relationType="has_and_belongs_to_many"/>
    <classElements xsi:type="models:Relationship" name=":headquarter" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":score_statistic" relationType="has_one">
      <options key=":foreign_key" value="course_id"/>
      <options key=":conditions" value="{:calificacion_id=>nil, :homologacion_id=>nil}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":score_statistics" relationType="has_many">
      <options key=":foreign_key" value="course_id"/>
      <options key=":conditions" value="{:calificacion_id=>nil}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":topic_score_statistics" relationType="has_many">
      <options key=":foreign_key" value="course_id"/>
      <options key=":class_name" value="ScoreStatistic.name"/>
      <options key=":conditions" value="['score_statistics.calificacion_id IS NOT NULL']"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":course_students" relationType="has_many">
      <options key=":foreign_key" value="course_id"/>
      <options key=":conditions" value="['course_students.state = ? ','active']"/>
      <options key=":class_name" value="CourseStudent"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":estudiantes" relationType="has_many">
      <options key=":through" value=":course_students"/>
      <options key=":class_name" value="Estudiante"/>
      <options key=":conditions" value="['(estudiantes.estado = ? or course_students.approved IS NOT NULL )and estudiantes.activo = ?' ,'active', true]"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":historico_estudiantes" relationType="has_many">
      <options key=":through" value=":course_students"/>
      <options key=":class_name" value="Estudiante"/>
      <options key=":source" value="estudiante"/>
      <options key=":conditions" value="['estudiantes.activo = ?', true]"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":approved_course_students" relationType="has_many">
      <options key=":foreign_key" value="course_id"/>
      <options key=":conditions" value="{:approved=>true, :state=>'active'}"/>
      <options key=":before_add" value=":set_approved"/>
      <options key=":class_name" value="CourseStudent"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":reproved_course_students" relationType="has_many">
      <options key=":foreign_key" value="course_id"/>
      <options key=":conditions" value="{:approved=>false, :state=>'active'}"/>
      <options key=":before_add" value=":set_reproved"/>
      <options key=":class_name" value="CourseStudent"/>
    </classElements>
  </rubyClasses>
  <rubyClasses name="Departamento" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegios" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":personas" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":ciudades" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":pais" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="DirectorProfile" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":director" relationType="belongs_to">
      <options key=":class_name" value="Administrador"/>
      <options key=":foreign_key" value="director_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":categorias" relationType="has_many">
      <options key=":through" value=":survey_permisions"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="Docente" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":area" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":materias" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":contenidos" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":cursos" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":boletines" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":teacher_advises" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":performancetests" relationType="has_many">
      <options key=":foreign_key" value="supervisor_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":teacher_performancetests" relationType="has_many">
      <options key=":foreign_key" value="teacher_id"/>
      <options key=":class_name" value="Performancetest"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":subjects" relationType="has_and_belongs_to_many">
      <options key=":join_table" value="supervisors_subjects"/>
      <options key=":class_name" value="Materia"/>
      <options key=":foreign_key" value="subject_id"/>
      <options key=":association_foreign_key" value="supervisor_id"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="set_area"/>
    <classElements xsi:type="models:RubyMethod" name="set_profiles"/>
    <classElements xsi:type="models:RubyMethod" name="self.batch_creation_csv"/>
  </rubyClasses>
  <rubyClasses name="DocxBuilder" superType="ActiveRecord::Base">
    <classElements xsi:type="models:RubyMethod" name="initialize"/>
    <classElements xsi:type="models:RubyMethod" name="build"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="build_docx"/>
    <classElements xsi:type="models:RubyMethod" name="in_temp_dir"/>
  </rubyClasses>
  <rubyClasses name="Escala" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":periodo" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":letras" relationType="has_many">
      <options key=":order" value="maximum desc"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":numeros" relationType="has_many">
      <options key=":order" value="homologacion_id"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="get_homologacion"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="set_numbers_minimums"/>
  </rubyClasses>
  <rubyClasses name="Estudiante" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":grade" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":service_students" relationType="has_many">
      <options key=":foreign_key" value="student_id"/>
      <options key=":class_name" value="ServiceStudent"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":padre" relationType="belongs_to">
      <options key=":class_name" value="Acudiente"/>
      <options key=":foreign_key" value="padre_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":madre" relationType="belongs_to">
      <options key=":class_name" value="Acudiente"/>
      <options key=":foreign_key" value="madre_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":acudiente" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":asistencias" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":notificaciones" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":facturas" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":contador_asistencias" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":student_logs" relationType="has_many">
      <options key=":through" value=":persona"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":sign_up" relationType="has_one"/>
    <classElements xsi:type="models:Relationship" name=":course_students" relationType="has_many">
      <options key=":foreign_key" value="student_id"/>
      <options key=":conditions" value="['course_students.state = ?','active']"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":cursos" relationType="has_many">
      <options key=":through" value=":course_students"/>
      <options key=":class_name" value="Curso"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":active_courses" relationType="has_many">
      <options key=":through" value=":course_students"/>
      <options key=":class_name" value="Curso"/>
      <options key=":source" value="curso"/>
      <options key=":conditions" value="['(estudiantes.estado = ? or course_students.approved IS NOT NULL ) and estudiantes.activo = ?' ,'active', true]"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":current_course_student" relationType="has_one">
      <options key=":foreign_key" value="student_id"/>
      <options key=":class_name" value="CourseStudent"/>
      <options key=":conditions" value="{:state=>'active',&#xA;    :current_sign_up=>true}"/>
      <options key=":validate" value="true"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":attendances" relationType="has_many">
      <options key=":foreign_key" value="student_id"/>
      <options key=":class_name" value="Attendance"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="score_report_serial_number"/>
    <classElements xsi:type="models:RubyMethod" name="nombre_completo"/>
    <classElements xsi:type="models:RubyMethod" name="set_profiles"/>
    <classElements xsi:type="models:RubyMethod" name="set_student_code"/>
    <classElements xsi:type="models:RubyMethod" name="create_graduate"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="self.hallar"/>
    <classElements xsi:type="models:RubyMethod" name="curso_actual"/>
    <classElements xsi:type="models:RubyMethod" name="get_director_curso_actual"/>
    <classElements xsi:type="models:RubyMethod" name="self.estratos"/>
    <classElements xsi:type="models:RubyMethod" name="self.tipo_rh"/>
    <classElements xsi:type="models:RubyMethod" name="self.estado_civil"/>
    <classElements xsi:type="models:RubyMethod" name="self.grupo_etnico"/>
    <classElements xsi:type="models:RubyMethod" name="self.states"/>
    <classElements xsi:type="models:RubyMethod" name="self.situacion_social"/>
    <classElements xsi:type="models:RubyMethod" name="self.discapacidad"/>
    <classElements xsi:type="models:RubyMethod" name="self.exceptional_ability"/>
    <classElements xsi:type="models:RubyMethod" name="rh"/>
    <classElements xsi:type="models:RubyMethod" name="fecha_retiro"/>
    <classElements xsi:type="models:RubyMethod" name="situacion_social"/>
    <classElements xsi:type="models:RubyMethod" name="ips"/>
    <classElements xsi:type="models:RubyMethod" name="puntaje_sisben"/>
    <classElements xsi:type="models:RubyMethod" name="carnet_sisben"/>
    <classElements xsi:type="models:RubyMethod" name="subscription_date_sisben_card"/>
    <classElements xsi:type="models:RubyMethod" name="rh="/>
    <classElements xsi:type="models:RubyMethod" name="situacion_social="/>
    <classElements xsi:type="models:RubyMethod" name="ips="/>
    <classElements xsi:type="models:RubyMethod" name="puntaje_sisben="/>
    <classElements xsi:type="models:RubyMethod" name="carnet_sisben="/>
    <classElements xsi:type="models:RubyMethod" name="performance_subject"/>
    <classElements xsi:type="models:RubyMethod" name="get_date_change_state"/>
    <classElements xsi:type="models:RubyMethod" name="get_value_from_calificacion"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_save"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_save"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="get_subject_auditory"/>
    <classElements xsi:type="models:RubyMethod" name="get_exceptional_ability"/>
    <classElements xsi:type="models:RubyMethod" name="get_courses"/>
  </rubyClasses>
  <rubyClasses name="Evaluacion" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":preguntas" relationType="has_many">
      <options key=":order" value=":orden"/>
      <options key=":conditions" value="{:active => true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":rangos" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":categorias" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":allocations" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":resultados" relationType="has_many">
      <options key=":conditions" value="{:activo => true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":presentados" relationType="has_many">
      <options key=":through" value=":resultados"/>
      <options key=":source" value=":persona"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":asignaciones" relationType="has_many">
      <options key=":conditions" value="{:activo => true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":materias" relationType="has_many">
      <options key=":through" value=":asignaciones"/>
      <options key=":conditions" value="{:activo => true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":pending_notification" relationType="has_one">
      <options key=":dependent" value=":destroy"/>
      <options key=":foreign_key" value="test_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":evaluation_event" relationType="has_one">
      <options key=":foreign_key" value="evaluation_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":event" relationType="has_one">
      <options key=":through" value=":evaluation_event"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":book_marks" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":sign_up_tests" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":resultado" relationType="has_one"/>
    <classElements xsi:type="models:Relationship" name=":calificacion" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":original" relationType="belongs_to">
      <options key=":foreign_key" value="original_id"/>
      <options key=":class_name" value="Evaluacion"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":copies" relationType="has_many">
      <options key=":foreign_key" value="original_id"/>
      <options key=":class_name" value="Evaluacion"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="validate_assigment"/>
    <classElements xsi:type="models:RubyMethod" name="get_interpretacion"/>
    <classElements xsi:type="models:RubyMethod" name="Resultados"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="corresponde_genero"/>
    <classElements xsi:type="models:RubyMethod" name="fechas_validas"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="fechas_periodos"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="presentada"/>
    <classElements xsi:type="models:RubyMethod" name="disponible"/>
    <classElements xsi:type="models:RubyMethod" name="deep_clone"/>
    <classElements xsi:type="models:RubyMethod" name="deep_clone_test_teacher"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
  </rubyClasses>
  <rubyClasses name="EvaluationEvent" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":evaluation" relationType="belongs_to">
      <options key=":class_name" value="Evaluacion"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":event" relationType="belongs_to">
      <options key=":class_name" value="Evento"/>
      <options key=":dependent" value=":destroy"/>
    </classElements>
  </rubyClasses>
  <rubyClasses name="EvaluationPlan" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":nodes" relationType="has_many">
      <options key=":dependent" value=":destroy"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":grade" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":area" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":super_asignatura" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":asignatura" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="apply_to"/>
    <classElements xsi:type="models:RubyMethod" name="self.available_evaluation_plans_for"/>
  </rubyClasses>
  <rubyClasses name="Evento" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":asignacion" relationType="has_one"/>
    <classElements xsi:type="models:Relationship" name=":tarea" relationType="has_one"/>
    <classElements xsi:type="models:Relationship" name=":evaluation_event" relationType="has_one">
      <options key=":foreign_key" value="event_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":pending_notification" relationType="has_one">
      <options key=":dependent" value=":destroy"/>
      <options key=":foreign_key" value="event_id"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="validar_fecha"/>
    <classElements xsi:type="models:RubyMethod" name="before_validation"/>
    <classElements xsi:type="models:RubyMethod" name="get_enunciados"/>
  </rubyClasses>
  <rubyClasses name="Factura" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":cobro" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":estudiante" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="self.estados"/>
    <classElements xsi:type="models:Relationship" name=":items" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="calcular_total"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="periodo_cobro"/>
  </rubyClasses>
  <rubyClasses name="GestorUsuario">
    <classElements xsi:type="models:RubyMethod" name="self.obtener_usuario"/>
    <classElements xsi:type="models:RubyMethod" name="self.get_user_id"/>
    <classElements xsi:type="models:RubyMethod" name="self.get_school_id"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="self.obtener_colegio"/>
    <classElements xsi:type="models:RubyMethod" name="self.get_person_id"/>
    <classElements xsi:type="models:RubyMethod" name="self.obtener_offset"/>
    <classElements xsi:type="models:RubyMethod" name="self.disponible"/>
  </rubyClasses>
  <rubyClasses name="Grade" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":school" relationType="belongs_to">
      <options key=":class_name" value="Colegio"/>
      <options key=":foreign_key" value="school_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":section" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":estudiantes" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":conceptos" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":informes" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":notificaciones" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":asignaturas" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":cursos" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":allocations" relationType="has_many">
      <options key=":class_name" value="VariableAssigment"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":translation" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":super_asignaturas" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
  </rubyClasses>
  <rubyClasses name="Graduate" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":person" relationType="belongs_to">
      <options key=":class_name" value="Persona"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":school" relationType="belongs_to">
      <options key=":class_name" value="Colegio"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":resultado" relationType="belongs_to">
      <options key=":foreign_key" value="answer_id"/>
      <options key=":class_name" value="Resultado"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":binaries" relationType="has_and_belongs_to_many">
      <options key=":class_name" value="Binario"/>
      <options key=":join_table" value="binaries_graduates"/>
      <options key=":association_foreign_key" value="binary_id"/>
      <options key=":conditions" value="{:state => Binario::ESTADO_ACTIVO}"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="persona"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="set_survey"/>
    <classElements xsi:type="models:RubyMethod" name="get_answer"/>
    <classElements xsi:type="models:RubyMethod" name="self.mail_address_options"/>
    <classElements xsi:type="models:RubyMethod" name="mail_address"/>
    <classElements xsi:type="models:RubyMethod" name="get_donor"/>
    <classElements xsi:type="models:RubyMethod" name="get_education_level"/>
    <classElements xsi:type="models:RubyMethod" name="get_mail_address"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="self.batch_creation_csv"/>
  </rubyClasses>
  <rubyClasses name="Headquarter" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to">
      <options key=":foreign_key" value="school_id"/>
      <options key=":class_name" value="Colegio"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":cursos" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":administrador" relationType="belongs_to">
      <options key=":class_name" value="Administrador"/>
      <options key=":foreign_key" value="administrator_id"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
  </rubyClasses>
  <rubyClasses name="HealthHistory" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to">
      <options key=":foreign_key" value="person_id"/>
      <options key=":class_name" value="Persona"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":sick_illness" relationType="belongs_to">
      <options key=":foreign_key" value="sick_illness_id"/>
      <options key=":class_name" value="SickIllness"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="Homologacion" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":letras" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":numero" relationType="has_one"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="Horario" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":asistencias" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="validate_self_time_overlapping"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="self.hallar_por_curso"/>
    <classElements xsi:type="models:RubyMethod" name="self.dias"/>
    <classElements xsi:type="models:RubyMethod" name="self.dias_rotativos"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="to_s_rotating"/>
    <classElements xsi:type="models:RubyMethod" name="horas"/>
    <classElements xsi:type="models:RubyMethod" name="duracion_pixeles"/>
    <classElements xsi:type="models:RubyMethod" name="inicio_pixeles"/>
    <classElements xsi:type="models:RubyMethod" name="day_name"/>
  </rubyClasses>
  <rubyClasses name="Indicador" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":logro" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":actividades" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":calificacion" relationType="has_one"/>
    <classElements xsi:type="models:RubyMethod" name="set_score_siblings"/>
    <classElements xsi:type="models:RubyMethod" name="unlink_score"/>
    <classElements xsi:type="models:RubyMethod" name="clonar"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="count_activities"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
  </rubyClasses>
  <rubyClasses name="Informe" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":periodo" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":plantilla" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":grade" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="self.buscar_informe_a_usar"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
  </rubyClasses>
  <rubyClasses name="InspectionPoint" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":student_log" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="InstitutionalDocument" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":area" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":grade" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":binario" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="self.kinds"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_save"/>
    <classElements xsi:type="models:RubyMethod" name="check_binario"/>
  </rubyClasses>
  <rubyClasses name="Item" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":concepto" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":factura" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="before_validation"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="calcular_valor_total"/>
  </rubyClasses>
  <rubyClasses name="Letra" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":escala" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":homologacion" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":teacher_advises" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="maximum_higher_than_minimum"/>
    <classElements xsi:type="models:RubyMethod" name="check_overlapping"/>
    <classElements xsi:type="models:RubyMethod" name="scale_numbers"/>
  </rubyClasses>
  <rubyClasses name="Log" superType="ActiveRecord::Base"/>
  <rubyClasses name="LogAnalizer">
    <classElements xsi:type="models:RubyMethod" name="initialize"/>
    <classElements xsi:type="models:RubyMethod" name="self.generate_log"/>
  </rubyClasses>
  <rubyClasses name="Login" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":usuario" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":session" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="finish_login"/>
    <classElements xsi:type="models:RubyMethod" name="generate_token"/>
    <classElements xsi:type="models:RubyMethod" name="initialize_token"/>
    <classElements xsi:type="models:RubyMethod" name="initialize_create"/>
  </rubyClasses>
  <rubyClasses name="Logo" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="public_filename"/>
  </rubyClasses>
  <rubyClasses name="Logro" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":programa" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":periodo" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":indicadores" relationType="has_many">
      <options key=":order" value="indicadores.id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":actividades" relationType="has_many">
      <options key=":through" value=":indicadores"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":calificacion" relationType="has_one"/>
    <classElements xsi:type="models:RubyMethod" name="set_score_siblings"/>
    <classElements xsi:type="models:RubyMethod" name="unlink_score"/>
    <classElements xsi:type="models:RubyMethod" name="validar_periodo"/>
    <classElements xsi:type="models:RubyMethod" name="maximo_lineas"/>
    <classElements xsi:type="models:RubyMethod" name="maximo_lineas_calificaciones"/>
    <classElements xsi:type="models:RubyMethod" name="maximo_lineas_estudiante"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="definir_periodos"/>
    <classElements xsi:type="models:RubyMethod" name="clonar"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="count_activities"/>
  </rubyClasses>
  <rubyClasses name="Mail" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":notificacion" relationType="belongs_to">
      <options key=":foreign_key" value="notification_id"/>
      <options key=":class_name" value="Notificacion"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="Mail.send_pending_mails"/>
    <classElements xsi:type="models:RubyMethod" name="Mail.generate_mail_body"/>
  </rubyClasses>
  <rubyClasses name="MailGestor" superType="ActionMailer::Base">
    <classElements xsi:type="models:RubyMethod" name="mail"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="Materia" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":materia_supermaterias" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":super_materia_pesos" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":super_materias" relationType="has_many">
      <options key=":through" value=":materia_supermaterias"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":evaluaciones" relationType="has_many">
      <options key=":conditions" value="{:active =>true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":calificaciones" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":performancetests" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":main_forum" relationType="belongs_to">
      <options key=":class_name" value="Comentario"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":docente" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":curso" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":periodo" relationType="belongs_to">
      <options key=":foreign_key" value="period_id"/>
      <options key=":class_name" value="Periodo"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":allocation" relationType="belongs_to">
      <options key=":foreign_key" value="allocation_id"/>
      <options key=":class_name" value="VariableAssignment"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":tareas" relationType="has_many">
      <options key=":conditions" value="{:activo =>true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":horarios" relationType="has_many">
      <options key=":conditions" value="{:activo => true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":contenidos" relationType="has_and_belongs_to_many"/>
    <classElements xsi:type="models:Relationship" name=":supervisors" relationType="has_and_belongs_to_many">
      <options key=":join_table" value="supervisors_subjects"/>
      <options key=":class_name" value="Docente"/>
      <options key=":foreign_key" value="supervisor_id"/>
      <options key=":association_foreign_key" value="subject_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":asignaciones" relationType="has_many">
      <options key=":conditions" value="['asignaciones.activo = :activo', {:activo => true}]"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":programa" relationType="has_one"/>
    <classElements xsi:type="models:Relationship" name=":evento" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":comentarios" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":forums" relationType="has_many">
      <options key=":class_name" value="Comentario"/>
      <options key=":conditions" value="{:comentario_id=>nil}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":notificaciones" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":student_subject_revisions" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":asignatura" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":asistencias" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":teacher_advises" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="setup_forum"/>
    <classElements xsi:type="models:RubyMethod" name="validate_asignatura_with_period_closed"/>
    <classElements xsi:type="models:RubyMethod" name="validate_period_closed"/>
    <classElements xsi:type="models:RubyMethod" name="has_evaluation_plan"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="schedule_overlapping"/>
    <classElements xsi:type="models:RubyMethod" name="validate_numero_materias"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="nombre"/>
    <classElements xsi:type="models:RubyMethod" name="area"/>
    <classElements xsi:type="models:RubyMethod" name="get_descriptores"/>
  </rubyClasses>
  <rubyClasses name="MateriaSupermateria" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":super_materia" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
  </rubyClasses>
  <rubyClasses name="MedicalBackground" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to">
      <options key=":foreign_key" value="person_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":binarios" relationType="has_and_belongs_to_many">
      <options key=":conditions" value="{:state => Binario::ESTADO_ACTIVO}"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="self.get_file_csv"/>
    <classElements xsi:type="models:RubyMethod" name="self.get_file_of_pharmacological_medications_csv"/>
    <classElements xsi:type="models:RubyMethod" name="filter_text"/>
    <classElements xsi:type="models:RubyMethod" name="self.states"/>
  </rubyClasses>
  <rubyClasses name="MedicalTest" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to">
      <options key=":class_name" value="Persona"/>
      <options key=":foreign_key" value="person_id"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="curso"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="edad"/>
    <classElements xsi:type="models:RubyMethod" name="edad_by_csv"/>
    <classElements xsi:type="models:RubyMethod" name="self.batch_creation_csv_for_medical_tests"/>
  </rubyClasses>
  <rubyClasses name="Node" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":evaluation_plan" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":children" relationType="has_many">
      <options key=":foreign_key" value="parent_node_id"/>
      <options key=":class_name" value="Node"/>
      <options key=":dependent" value=":destroy"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":parent" relationType="belongs_to">
      <options key=":foreign_key" value="parent_node_id"/>
      <options key=":class_name" value="Node"/>
    </classElements>
  </rubyClasses>
  <rubyClasses name="Notificacion" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":mails" relationType="has_many">
      <options key=":foreign_key" value="notification_id"/>
      <options key=":class_name" value="Mail"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":perfil" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":curso" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":sender" relationType="belongs_to">
      <options key=":foreign_key" value="created_by"/>
      <options key=":class_name" value="Usuario"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":grade" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="grado_curso"/>
    <classElements xsi:type="models:RubyMethod" name="persona_perfil"/>
    <classElements xsi:type="models:RubyMethod" name="persona_nombre"/>
    <classElements xsi:type="models:RubyMethod" name="persona_nombre="/>
    <classElements xsi:type="models:RubyMethod" name="curso_nombre"/>
    <classElements xsi:type="models:RubyMethod" name="curso_nombre="/>
    <classElements xsi:type="models:RubyMethod" name="self.states"/>
  </rubyClasses>
  <rubyClasses name="Numero" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":escala" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":homologacion" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":teacher_advises" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="validar_minimo_maximo"/>
    <classElements xsi:type="models:RubyMethod" name="maximo="/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_save"/>
    <classElements xsi:type="models:RubyMethod" name="self.crear"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="get_full_name"/>
  </rubyClasses>
  <rubyClasses name="Opcion" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":pregunta" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":respuestas" relationType="has_many">
      <options key=":conditions" value="{:active => true}"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="get_url_image"/>
  </rubyClasses>
  <rubyClasses name="Pais" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegios" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":personas" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":departamentos" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":ciudades" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
  </rubyClasses>
  <rubyClasses name="ParentOnbehalfStudentPermission" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":school" relationType="belongs_to">
      <options key=":class_name" value="Colegio"/>
      <options key=":foreign_key" value="school_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":grade" relationType="belongs_to"/>
  </rubyClasses>
  <rubyClasses name="PendingNotification" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":school" relationType="belongs_to">
      <options key=":class_name" value="Colegio"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":event" relationType="belongs_to">
      <options key=":class_name" value="Evento"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":homework" relationType="belongs_to">
      <options key=":class_name" value="Tarea"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":topic" relationType="belongs_to">
      <options key=":class_name" value="Materia"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":post" relationType="belongs_to">
      <options key=":class_name" value="Comentario"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":test" relationType="belongs_to">
      <options key=":class_name" value="Evaluacion"/>
      <options key=":conditions" value="{:active=>true}"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="self.kinds"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="Perfil" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":usuarios" relationType="has_and_belongs_to_many"/>
    <classElements xsi:type="models:Relationship" name=":permisos" relationType="has_and_belongs_to_many"/>
    <classElements xsi:type="models:Relationship" name=":notificaciones" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="self.get_relationships_profiles"/>
    <classElements xsi:type="models:RubyMethod" name="get_profile_object"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="nombre_perfil"/>
    <classElements xsi:type="models:RubyMethod" name="take_off_printing"/>
    <classElements xsi:type="models:RubyMethod" name="make_ipaper_secure_digest"/>
  </rubyClasses>
  <rubyClasses name="PerfilPermiso" superType="ActiveRecord::Base">
    <classElements xsi:type="models:TableName" name="perfiles_permisos"/>
    <classElements xsi:type="models:RubyMethod" name="id"/>
  </rubyClasses>
  <rubyClasses name="PerfilUsuario" superType="ActiveRecord::Base">
    <classElements xsi:type="models:TableName" name="perfiles_usuarios"/>
    <classElements xsi:type="models:RubyMethod" name="id"/>
  </rubyClasses>
  <rubyClasses name="PerformanceResult" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":performancetest" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":resultado" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
  </rubyClasses>
  <rubyClasses name="Performancetest" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":performance_results" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":allocation" relationType="belongs_to">
      <options key=":foreign_key" value="variable_assignment_id"/>
      <options key=":class_name" value="VariableAssignment"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":supervisor" relationType="belongs_to">
      <options key=":foreign_key" value="supervisor_id"/>
      <options key=":class_name" value="Docente"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":parent" relationType="belongs_to">
      <options key=":class_name" value="Acudiente"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":student" relationType="belongs_to">
      <options key=":class_name" value="Estudiante"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":periodo" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":curso" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":teacher" relationType="belongs_to">
      <options key=":class_name" value="Docente"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="self.get_or_generate_performancetest"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="change_performance_test"/>
    <classElements xsi:type="models:RubyMethod" name="self.get_generate_results"/>
    <classElements xsi:type="models:RubyMethod" name="self.get_generate_all_results"/>
    <classElements xsi:type="models:RubyMethod" name="self.find_parents_tests"/>
    <classElements xsi:type="models:RubyMethod" name="self.get_order_for_find_parents_tests"/>
    <classElements xsi:type="models:RubyMethod" name="get_or_create_performance_result"/>
  </rubyClasses>
  <rubyClasses name="Periodo" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":periodo" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":periodos" relationType="has_many">
      <options key=":conditions" value="{:activo => true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":cursos" relationType="has_many">
      <options key=":conditions" value="{:activo => true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":logros" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":escala" relationType="has_one"/>
    <classElements xsi:type="models:Relationship" name=":calificaciones" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":cobros" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":boletines" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":contador_asistencias" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":super_materia_pesos" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":allocations" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":informes" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="available?"/>
    <classElements xsi:type="models:RubyMethod" name="validate_scale"/>
    <classElements xsi:type="models:RubyMethod" name="set_times"/>
    <classElements xsi:type="models:RubyMethod" name="self.process_field"/>
    <classElements xsi:type="models:RubyMethod" name="self.batch_creation_csv"/>
    <classElements xsi:type="models:RubyMethod" name="validate_dates_test_teacher_academic_year"/>
    <classElements xsi:type="models:RubyMethod" name="validate_suscription_time"/>
    <classElements xsi:type="models:RubyMethod" name="get_accumulated_score"/>
  </rubyClasses>
  <rubyClasses name="Permiso" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":perfiles" relationType="has_and_belongs_to_many"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="PersonConfiguration" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":person" relationType="belongs_to">
      <options key=":class_name" value="Persona"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="compare_validation_token"/>
    <classElements xsi:type="models:RubyMethod" name="set_email_validation"/>
    <classElements xsi:type="models:RubyMethod" name="self.set_email_validation"/>
    <classElements xsi:type="models:RubyMethod" name="check_email_validation"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
  </rubyClasses>
  <rubyClasses name="Persona" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":administrador" relationType="has_one">
      <options key=":conditions" value="['administradores.colegio_id = #{Persona.get_school || self.colegio_id} and administradores.activo=1']"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":docente" relationType="has_one">
      <options key=":conditions" value="['docentes.colegio_id = #{Persona.get_school || self.colegio_id} and docentes.activo=1']"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":estudiante" relationType="has_one">
      <options key=":conditions" value="['estudiantes.colegio_id = #{Persona.get_school || self.colegio_id} and estudiantes.activo=1']"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":graduate" relationType="has_one">
      <options key=":conditions" value="['graduates.school_id = #{Persona.get_school || self.colegio_id} and graduates.active=1']"/>
      <options key=":foreign_key" value="person_id"/>
      <options key=":class_name" value="Graduate"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":transporter" relationType="has_one">
      <options key=":conditions" value="['transporters.colegio_id = #{Persona.get_school || self.colegio_id} and transporters.active=1']"/>
      <options key=":foreign_key" value="person_id"/>
      <options key=":class_name" value="Transporter"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":usuario" relationType="has_one">
      <options key=":conditions" value="['usuarios.colegio_id = #{Persona.get_school || self.colegio_id}']"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":user_for_support" relationType="has_one">
      <options key=":class_name" value="Usuario"/>
      <options key=":foreign_key" value="persona_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":user" relationType="has_one">
      <options key=":class_name" value="Usuario"/>
      <options key=":foreign_key" value="persona_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":person_configuration" relationType="has_one">
      <options key=":foreign_key" value="person_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":acudiente" relationType="has_one">
      <options key=":conditions" value="['acudientes.colegio_id = #{Persona.get_school || self.colegio_id} and acudientes.activo=1']"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":medical_background" relationType="has_one">
      <options key=":foreign_key" value="person_id"/>
      <options key=":class_name" value="MedicalBackground"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":medical_test" relationType="has_one">
      <options key=":foreign_key" value="person_id"/>
      <options key=":class_name" value="MedicalTest"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":boletines" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":resultados" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":health_histories" relationType="has_many">
      <options key=":foreign_key" value="person_id"/>
      <options key=":class_name" value="HealthHistory"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":studies" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":work_experiences" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":valores" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":notificaciones" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":ciudad" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":comuna" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":birth_city" relationType="belongs_to">
      <options key=":class_name" value="Ciudad"/>
      <options key=":foreign_key" value="ciudad_nac_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":expedition_place_city" relationType="belongs_to">
      <options key=":class_name" value="Ciudad"/>
      <options key=":foreign_key" value="expedition_place_city_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":pais" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":departamento" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":tipo_documento" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":student_subject_revisions" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":bus_paths" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":transporter" relationType="has_one">
      <options key=":foreign_key" value="person_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":appointments" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":persona_blocks" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":blocks" relationType="has_many">
      <options key=":through" value=":persona_blocks"/>
      <options key=":class_name" value="Block"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":binarios" relationType="has_and_belongs_to_many">
      <options key=":conditions" value="{:state => Binario::ESTADO_ACTIVO}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":student_logs" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":cambio_estado" relationType="has_one">
      <options key=":foreign_key" value="persona_id"/>
      <options key=":class_name" value="StudentLog"/>
      <options key=":order" value="id DESC"/>
      <options key=":conditions" value="state IS NOT NULL"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="strip_identification"/>
    <classElements xsi:type="models:RubyMethod" name="school_id"/>
    <classElements xsi:type="models:RubyMethod" name="edad"/>
    <classElements xsi:type="models:RubyMethod" name="antiguedad"/>
    <classElements xsi:type="models:RubyMethod" name="full_name_capital"/>
    <classElements xsi:type="models:RubyMethod" name="set_full_name"/>
    <classElements xsi:type="models:RubyMethod" name="assigment_new_user"/>
    <classElements xsi:type="models:RubyMethod" name="validar_fecha"/>
    <classElements xsi:type="models:RubyMethod" name="validar_genero"/>
    <classElements xsi:type="models:RubyMethod" name="before_validation"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="ciudad_fecha_na"/>
    <classElements xsi:type="models:RubyMethod" name="ubicacion"/>
    <classElements xsi:type="models:RubyMethod" name="ubicacion_nacimiento"/>
    <classElements xsi:type="models:RubyMethod" name="nombre_completo"/>
    <classElements xsi:type="models:RubyMethod" name="nombre_ordenado"/>
    <classElements xsi:type="models:RubyMethod" name="apellidos"/>
    <classElements xsi:type="models:RubyMethod" name="nombres"/>
    <classElements xsi:type="models:RubyMethod" name="get_disability"/>
    <classElements xsi:type="models:RubyMethod" name="self.discapacidad"/>
    <classElements xsi:type="models:RubyMethod" name="autocomplete_name"/>
    <classElements xsi:type="models:RubyMethod" name="before_save"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="boletin"/>
    <classElements xsi:type="models:RubyMethod" name="crear_usuario"/>
    <classElements xsi:type="models:RubyMethod" name="get_and_generate_sick_illness"/>
    <classElements xsi:type="models:RubyMethod" name="nueva_creacion_usuario"/>
    <classElements xsi:type="models:RubyMethod" name="get_sisben_date"/>
    <classElements xsi:type="models:RubyMethod" name="self.find_by_autocomplete_name"/>
    <classElements xsi:type="models:RubyMethod" name="print_birthday"/>
    <classElements xsi:type="models:RubyMethod" name="gender"/>
    <classElements xsi:type="models:RubyMethod" name="deceased"/>
    <classElements xsi:type="models:RubyMethod" name="city_live"/>
    <classElements xsi:type="models:RubyMethod" name="city_expedition"/>
    <classElements xsi:type="models:RubyMethod" name="ciudad_nacimiento"/>
    <classElements xsi:type="models:RubyMethod" name="ciudad_residencia"/>
    <classElements xsi:type="models:RubyMethod" name="get_expedition_place"/>
    <classElements xsi:type="models:RubyMethod" name="define_profiles"/>
    <classElements xsi:type="models:RubyMethod" name="self.situacion_social"/>
    <classElements xsi:type="models:RubyMethod" name="living_city"/>
    <classElements xsi:type="models:RubyMethod" name="get_rh_person"/>
    <classElements xsi:type="models:RubyMethod" name="get_illnesess"/>
    <classElements xsi:type="models:RubyMethod" name="fill_default_data"/>
    <classElements xsi:type="models:RubyMethod" name="set_email_validation"/>
    <classElements xsi:type="models:RubyMethod" name="get_config"/>
    <classElements xsi:type="models:RubyMethod" name="self.migrate_photos"/>
  </rubyClasses>
  <rubyClasses name="PersonaBlock" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":block" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="Place" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":headquarter" relationType="belongs_to">
      <options key=":class_name" value="Headquarter"/>
      <options key=":foreign_key" value="headquarter_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":place" relationType="has_one"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
  </rubyClasses>
  <rubyClasses name="Plantilla" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
  </rubyClasses>
  <rubyClasses name="Pregunta" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":binario" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":evaluacion" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":categoria" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":allocation" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":question_type" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":opciones" relationType="has_many">
      <options key=":conditions" value="{:active => true}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":respuestas" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="question_type_name"/>
    <classElements xsi:type="models:RubyMethod" name="categoria_name"/>
    <classElements xsi:type="models:RubyMethod" name="maximum_value"/>
    <classElements xsi:type="models:RubyMethod" name="clonar"/>
    <classElements xsi:type="models:RubyMethod" name="showable"/>
    <classElements xsi:type="models:RubyMethod" name="self.get_config_files"/>
    <classElements xsi:type="models:RubyMethod" name="get_url_image"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="deep_clone"/>
  </rubyClasses>
  <rubyClasses name="ProfilePermission" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":user_profile" relationType="belongs_to">
      <options key=":class_name" value="Perfil"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":permission_profile" relationType="belongs_to">
      <options key=":class_name" value="Perfil"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="self.get_or_generate_profile_permissions"/>
  </rubyClasses>
  <rubyClasses name="Programa" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":logros" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":indicadores" relationType="has_many">
      <options key=":through" value=":logros"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":calificaciones" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":asignatura" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":study_plans" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="calificacion"/>
    <classElements xsi:type="models:RubyMethod" name="define_study_plans"/>
    <classElements xsi:type="models:RubyMethod" name="actividades"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="setup_scores"/>
    <classElements xsi:type="models:RubyMethod" name="clonar"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
  </rubyClasses>
  <rubyClasses name="QualityQuestionnaire" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":school" relationType="belongs_to">
      <options key=":class_name" value="Colegio"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":assignment_people" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":people" relationType="has_many">
      <options key=":through" value=":assignment_people"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="lock_record"/>
    <classElements xsi:type="models:RubyMethod" name="validate_dates"/>
    <classElements xsi:type="models:RubyMethod" name="delete_questionnaire"/>
    <classElements xsi:type="models:RubyMethod" name="setup_questionnaire"/>
    <classElements xsi:type="models:RubyMethod" name="get_questionnaire_access"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="questionnaire"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="clone"/>
    <classElements xsi:type="models:RubyMethod" name="clone_questionnaire"/>
    <classElements xsi:type="models:RubyMethod" name="applicable?"/>
  </rubyClasses>
  <rubyClasses name="QualityStudentQuestionnaire" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":school" relationType="belongs_to">
      <options key=":class_name" value="Colegio"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":student_questionnaire_subjects" relationType="has_many">
      <options key=":dependent" value=":delete_all"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":subjects" relationType="has_many">
      <options key=":through" value=":student_questionnaire_subjects"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":student_questionnaire_answer_sheets" relationType="has_many">
      <options key=":through" value=":student_questionnaire_subjects"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="lock_record"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="setup_questionnaire"/>
    <classElements xsi:type="models:RubyMethod" name="questionnaire"/>
    <classElements xsi:type="models:RubyMethod" name="delete_questionnaire"/>
    <classElements xsi:type="models:RubyMethod" name="get_questionnaire_access"/>
    <classElements xsi:type="models:RubyMethod" name="clone"/>
    <classElements xsi:type="models:RubyMethod" name="clone_questionnaire"/>
    <classElements xsi:type="models:RubyMethod" name="applicable?"/>
  </rubyClasses>
  <rubyClasses name="QualityTeacherQuestionnaire" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":school" relationType="belongs_to">
      <options key=":class_name" value="Colegio"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":assignment_subjects" relationType="has_many">
      <options key=":dependent" value=":delete_all"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":subjects" relationType="has_many">
      <options key=":through" value=":assignment_subjects"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":teacher_questionnaire_answer_sheets" relationType="has_many">
      <options key=":through" value=":assignment_subjects"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="self.profiles"/>
    <classElements xsi:type="models:RubyMethod" name="lock_record"/>
    <classElements xsi:type="models:RubyMethod" name="validate_dates"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="setup_questionnaire"/>
    <classElements xsi:type="models:RubyMethod" name="get_questionnaire_access"/>
    <classElements xsi:type="models:RubyMethod" name="delete_questionnaire"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="questionnaire"/>
    <classElements xsi:type="models:RubyMethod" name="clone"/>
    <classElements xsi:type="models:RubyMethod" name="clone_questionnaire"/>
    <classElements xsi:type="models:RubyMethod" name="applicable?"/>
  </rubyClasses>
  <rubyClasses name="QuestionType" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":preguntas" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="self.has_options"/>
    <classElements xsi:type="models:RubyMethod" name="self.has_options_unique_answer"/>
  </rubyClasses>
  <rubyClasses name="Rango" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":categoria" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":evaluacion" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
  </rubyClasses>
  <rubyClasses name="RenderTemplate" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":school" relationType="belongs_to">
      <options key=":class_name" value="Colegio"/>
      <options key=":foreign_key" value="school_id"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="self.get_types"/>
  </rubyClasses>
  <rubyClasses name="ResetPasswordInformation" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":user" relationType="belongs_to">
      <options key=":class_name" value="Usuario"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="token_valid?"/>
  </rubyClasses>
  <rubyClasses name="Response" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":task" relationType="belongs_to">
      <options key=":foreign_key" value="task_id"/>
      <options key=":class_name" value="AsyncTask"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":binary" relationType="belongs_to">
      <options key=":class_name" value="Binario.name end"/>
    </classElements>
  </rubyClasses>
  <rubyClasses name="Respuesta" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":resultado" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":pregunta" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":opcion" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="get_text"/>
  </rubyClasses>
  <rubyClasses name="Resultado" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":asignacion" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":allocation" relationType="belongs_to">
      <options key=":class_name" value="VariableAssignment"/>
      <options key=":foreign_key" value="variable_assignment_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to">
      <options key=":class_name" value="Materia"/>
      <options key=":foreign_key" value="materia_survey_teacher_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":evaluacion" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":respuestas" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":performance_result" relationType="has_one"/>
    <classElements xsi:type="models:Relationship" name=":graduate" relationType="has_one">
      <options key=":foreign_key" value="answer_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":sign_up" relationType="has_one"/>
    <classElements xsi:type="models:Relationship" name=":valor" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":variable_assignment" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":periodo" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":course_institution_survey" relationType="belongs_to">
      <options key=":class_name" value="Curso"/>
      <options key=":foreign_key" value="course_school_survey_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":course_survey" relationType="belongs_to">
      <options key=":class_name" value="Curso"/>
      <options key=":foreign_key" value="course_director_survey_course_id"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="validate_score_date"/>
    <classElements xsi:type="models:RubyMethod" name="validate_calificacion"/>
    <classElements xsi:type="models:RubyMethod" name="validate_score_range"/>
    <classElements xsi:type="models:RubyMethod" name="create_answers"/>
    <classElements xsi:type="models:RubyMethod" name="validate_varible_assignment_same_period"/>
    <classElements xsi:type="models:RubyMethod" name="get_asignatura"/>
    <classElements xsi:type="models:RubyMethod" name="get_curso"/>
    <classElements xsi:type="models:RubyMethod" name="get_area"/>
    <classElements xsi:type="models:RubyMethod" name="get_teacher"/>
    <classElements xsi:type="models:RubyMethod" name="add_period"/>
    <classElements xsi:type="models:RubyMethod" name="before_validation"/>
    <classElements xsi:type="models:RubyMethod" name="get_answer"/>
  </rubyClasses>
  <rubyClasses name="SchoolConfig" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":school" relationType="belongs_to">
      <options key=":class_name" value="Colegio"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="self.advertisements"/>
    <classElements xsi:type="models:RubyMethod" name="self.allow_migrations"/>
  </rubyClasses>
  <rubyClasses name="SchoolKey" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":school" relationType="belongs_to">
      <options key=":class_name" value="Colegio"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="self.key_types"/>
    <classElements xsi:type="models:RubyMethod" name="generate_keys"/>
  </rubyClasses>
  <rubyClasses name="ScoreStatistic" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":calificacion" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":homologacion" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":school" relationType="belongs_to">
      <options key=":class_name" value="Colegio"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":course" relationType="belongs_to">
      <options key=":class_name" value="Curso"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":period" relationType="belongs_to">
      <options key=":class_name" value="Periodo"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="set_homologacion_score"/>
    <classElements xsi:type="models:RubyMethod" name="set_average"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
  </rubyClasses>
  <rubyClasses name="Section" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":grades" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":school" relationType="belongs_to">
      <options key=":class_name" value="Colegio"/>
      <options key=":foreign_key" value="school_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":administrador" relationType="belongs_to">
      <options key=":foreign_key" value="admin_id"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="self.by_current_school"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
  </rubyClasses>
  <rubyClasses name="Service" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":service_days" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":bus_paths" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":service_students" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="self.batch_creation_csv"/>
  </rubyClasses>
  <rubyClasses name="ServiceDay" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":service" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":service_schedules" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
  </rubyClasses>
  <rubyClasses name="ServiceSchedule" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":service_student" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":service_day" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":bus_path" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="clean="/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="clean"/>
    <classElements xsi:type="models:RubyMethod" name="requested"/>
    <classElements xsi:type="models:RubyMethod" name="cleanup_addresses"/>
    <classElements xsi:type="models:RubyMethod" name="set_service_student_state"/>
  </rubyClasses>
  <rubyClasses name="ServiceStudent" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":service" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":student" relationType="belongs_to">
      <options key=":foreign_key" value="student_id"/>
      <options key=":class_name" value="Estudiante"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":service_schedules" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="self.batch_creation_csv"/>
  </rubyClasses>
  <rubyClasses name="SickIllness" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":health_histories" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="SignUp" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":estudiante" relationType="belongs_to">
      <options key=":dependent" value=":destroy"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":resultado" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":grade" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="old_new"/>
    <classElements xsi:type="models:RubyMethod" name="self.states"/>
    <classElements xsi:type="models:RubyMethod" name="is_preregistration?"/>
    <classElements xsi:type="models:RubyMethod" name="self.states_two"/>
    <classElements xsi:type="models:RubyMethod" name="self.states_parents"/>
    <classElements xsi:type="models:RubyMethod" name="self.batch_update"/>
    <classElements xsi:type="models:RubyMethod" name="persona"/>
    <classElements xsi:type="models:RubyMethod" name="parent_ids"/>
    <classElements xsi:type="models:RubyMethod" name="current_course_student"/>
    <classElements xsi:type="models:RubyMethod" name="estado"/>
    <classElements xsi:type="models:RubyMethod" name="grado_a_matricular"/>
    <classElements xsi:type="models:RubyMethod" name="self.process_field"/>
  </rubyClasses>
  <rubyClasses name="SignUpTest" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":evaluacion" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="initialize"/>
    <classElements xsi:type="models:RubyMethod" name="before_validation"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="self.types"/>
  </rubyClasses>
  <rubyClasses name="SliceTemplate" superType="ActiveRecord::Base">
    <classElements xsi:type="models:RubyMethod" name="initialize"/>
    <classElements xsi:type="models:RubyMethod" name="initialize_copy"/>
    <classElements xsi:type="models:RubyMethod"/>
  </rubyClasses>
  <rubyClasses name="SmtpConfigValidatorMailer" superType="ActionMailer::Base">
    <classElements xsi:type="models:RubyMethod" name="mail"/>
  </rubyClasses>
  <rubyClasses name="SmtpServer" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="has_one"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="correct_configuration"/>
  </rubyClasses>
  <rubyClasses name="SoldBook" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":book" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":school" relationType="belongs_to">
      <options key=":class_name" value="Colegio"/>
      <options key=":foreign_key" value="school_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":cursos" relationType="has_and_belongs_to_many"/>
    <classElements xsi:type="models:RubyMethod" name="size_cuantity_and_students"/>
    <classElements xsi:type="models:RubyMethod" name="self.states"/>
  </rubyClasses>
  <rubyClasses name="StudentLog" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":usuario" relationType="belongs_to">
      <options key=":foreign_key" value="created_by"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":cargo" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":inspection_points" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="estudiante"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="validate_date"/>
    <classElements xsi:type="models:RubyMethod" name="get_date"/>
  </rubyClasses>
  <rubyClasses name="StudentQuestionnaireAnswerSheet" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":student_questionnaire_subject" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":person" relationType="belongs_to">
      <options key=":class_name" value="Persona"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":subject" relationType="has_one">
      <options key=":through" value=":student_questionnaire_subject"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":quality_student_questionnaire" relationType="has_one">
      <options key=":through" value=":student_questionnaire_subject"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":student" relationType="belongs_to">
      <options key=":class_name" value="Estudiante"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="self.states"/>
    <classElements xsi:type="models:RubyMethod" name="before_validation_on_create"/>
    <classElements xsi:type="models:RubyMethod" name="answer_sheet"/>
    <classElements xsi:type="models:RubyMethod" name="destroy_answer_sheet"/>
  </rubyClasses>
  <rubyClasses name="StudentQuestionnaireSubject" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":quality_student_questionnaire" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":subject" relationType="belongs_to">
      <options key=":class_name" value="Materia"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":student_questionnaire_answer_sheets" relationType="has_many"/>
  </rubyClasses>
  <rubyClasses name="StudentSubjectRevision" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="setup_time"/>
    <classElements xsi:type="models:RubyMethod" name="before_save"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="self.initialize_topic_for_students"/>
  </rubyClasses>
  <rubyClasses name="Study" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
  </rubyClasses>
  <rubyClasses name="StudyPlan" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":programa" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="self.process_field"/>
    <classElements xsi:type="models:RubyMethod" name="clean_text_plan_study"/>
  </rubyClasses>
  <rubyClasses name="SuperAdmin" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":super_admin_administrators" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":administrators" relationType="has_many">
      <options key=":through" value=":super_admin_administrators"/>
      <options key=":source" value=":administrator"/>
      <options key=":class_name" value="Administrador"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":main_administrator" relationType="belongs_to">
      <options key=":class_name" value="Administrador"/>
      <options key=":foreign_key" value="main_administrator_id"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="schools"/>
    <classElements xsi:type="models:RubyMethod" name="delete_related_objects"/>
  </rubyClasses>
  <rubyClasses name="SuperAdminAdministrator" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":super_admin" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":administrator" relationType="belongs_to">
      <options key=":class_name" value="Administrador"/>
      <options key=":foreign_key" value="administrator_id"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="self.remove_non_alphanumeric"/>
    <classElements xsi:type="models:RubyMethod" name="institucion_must_be_differente_of_main_one"/>
  </rubyClasses>
  <rubyClasses name="SuperAsignatura" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":grade" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":super_asignatura_pesos" relationType="has_many">
      <options key=":dependent" value=":destroy"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":asignaturas" relationType="has_many">
      <options key=":through" value=":super_asignatura_pesos"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":evaluation_plans" relationType="has_many">
      <options key=":dependent" value=":nullify"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_save"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
  </rubyClasses>
  <rubyClasses name="SuperAsignaturaPeso" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":asignatura" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":super_asignatura" relationType="belongs_to"/>
  </rubyClasses>
  <rubyClasses name="SuperMateria" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":super_materia_pesos" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":materia_supermaterias" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":materias" relationType="has_many">
      <options key=":through" value=":materia_supermaterias"/>
      <options key=":conditions" value="{ :activo => true }"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":curso" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":translation" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="get_descriptores"/>
  </rubyClasses>
  <rubyClasses name="SuperMateriaPeso" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":super_materia" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":periodo" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
  </rubyClasses>
  <rubyClasses name="SurveyPermision" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":categoria" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
  </rubyClasses>
  <rubyClasses name="Tarea" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":tarea_resueltas" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":evento" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":binarios" relationType="has_and_belongs_to_many">
      <options key=":conditions" value="{:state => Binario::ESTADO_ACTIVO}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":calificacion" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":original" relationType="belongs_to">
      <options key=":foreign_key" value="original_id"/>
      <options key=":class_name" value="Tarea"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":copies" relationType="has_many">
      <options key=":foreign_key" value="original_id"/>
      <options key=":class_name" value="Tarea"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":book_marks" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="validate_assigment"/>
    <classElements xsi:type="models:RubyMethod" name="validate_dates"/>
    <classElements xsi:type="models:RubyMethod" name="clone_homework"/>
    <classElements xsi:type="models:RubyMethod" name="disponible"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="destroy"/>
    <classElements xsi:type="models:RubyMethod" name="presentada"/>
  </rubyClasses>
  <rubyClasses name="TareaResuelta" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":tarea" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":binarios" relationType="has_and_belongs_to_many">
      <options key=":conditions" value="{:state => Binario::ESTADO_ACTIVO}"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":valor" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="escala"/>
    <classElements xsi:type="models:RubyMethod" name="validate_max"/>
    <classElements xsi:type="models:RubyMethod" name="validate_min"/>
    <classElements xsi:type="models:RubyMethod" name="maximun_limit"/>
    <classElements xsi:type="models:RubyMethod" name="minimum_limit"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="TeacherAdvise" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":letra" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":numero" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":asignatura" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":docente" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":periodo" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":materia" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":valores" relationType="has_and_belongs_to_many"/>
  </rubyClasses>
  <rubyClasses name="TeacherAdviseValor" superType="ActiveRecord::Base">
    <classElements xsi:type="models:TableName" name="teacher_advises_valores"/>
    <classElements xsi:type="models:RubyMethod" name="id"/>
  </rubyClasses>
  <rubyClasses name="TeacherQuestionnaireAnswerSheet" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":assignment_subject" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":subject" relationType="has_one">
      <options key=":through" value=":assignment_subject"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":quality_teacher_questionnaire" relationType="has_one">
      <options key=":through" value=":assignment_subject"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":person" relationType="belongs_to">
      <options key=":class_name" value="Persona"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":student" relationType="belongs_to">
      <options key=":class_name" value="Estudiante"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="self.states"/>
    <classElements xsi:type="models:RubyMethod" name="before_validation_on_create"/>
    <classElements xsi:type="models:RubyMethod" name="answer_sheet"/>
    <classElements xsi:type="models:RubyMethod" name="delete_answer"/>
    <classElements xsi:type="models:RubyMethod" name="delete_answer_sheet"/>
  </rubyClasses>
  <rubyClasses name="TeacherQuestionnaireParentFinder">
    <classElements xsi:type="models:RubyMethod" name="initialize"/>
    <classElements xsi:type="models:RubyMethod" name="inner_hash"/>
    <classElements xsi:type="models:RubyMethod" name="method_missing"/>
    <classElements xsi:type="models:RubyMethod" name="self.smart_length_constraints"/>
  </rubyClasses>
  <rubyClasses name="TinyPrint" superType="ActiveRecord::Base">
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="TinyVideo" superType="ActiveRecord::Base">
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="TipoDocumento" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":personas" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="self.dane_tipo_documento"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="Translation" superType="ActiveRecord::Base">
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
  </rubyClasses>
  <rubyClasses name="Transporter" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to">
      <options key=":foreign_key" value="person_id"/>
      <options key=":class_name" value="Persona"/>
    </classElements>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="get_monitora"/>
    <classElements xsi:type="models:RubyMethod" name="get_driver"/>
  </rubyClasses>
  <rubyClasses name="Usuario" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":perfiles" relationType="has_and_belongs_to_many"/>
    <classElements xsi:type="models:Relationship" name=":logins" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":reset_password_informations" relationType="has_many">
      <options key=":foreign_key" value="user_id"/>
    </classElements>
  </rubyClasses>
  <rubyClasses name="Valor" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":calificacion" relationType="belongs_to">
      <options key=":inverse_of" value=":valores"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":resultado" relationType="has_one"/>
    <classElements xsi:type="models:Relationship" name=":tarea_resuelta" relationType="has_one"/>
    <classElements xsi:type="models:Relationship" name=":teacher_advises" relationType="has_and_belongs_to_many"/>
    <classElements xsi:type="models:RubyMethod" name="valor_real"/>
    <classElements xsi:type="models:RubyMethod" name="numerical_value"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_save"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_save"/>
    <classElements xsi:type="models:RubyMethod" name="buscar_hermanos_old"/>
    <classElements xsi:type="models:RubyMethod" name="buscar_hermanos"/>
  </rubyClasses>
  <rubyClasses name="Variable" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":preguntas" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":rangos" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
  </rubyClasses>
  <rubyClasses name="VariableAssignment" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":evaluacion" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":colegio" relationType="belongs_to">
      <options key=":foreign_key" value="school_id"/>
      <options key=":class_name" value="Colegio"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":course" relationType="belongs_to">
      <options key=":class_name" value="Curso"/>
      <options key=":foreign_key" value="course_id"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":questions" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":periodo" relationType="belongs_to">
      <options key=":foreign_key" value="period_id"/>
      <options key=":class_name" value="Periodo"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":area" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":grade" relationType="belongs_to"/>
    <classElements xsi:type="models:Relationship" name=":resultados" relationType="has_many"/>
    <classElements xsi:type="models:Relationship" name=":courses" relationType="has_many">
      <options key=":class_name" value="Curso"/>
    </classElements>
    <classElements xsi:type="models:Relationship" name=":performancetests" relationType="has_many"/>
    <classElements xsi:type="models:RubyMethod" name="set_school"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="before_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="to_s"/>
    <classElements xsi:type="models:RubyMethod" name="clone_allocation"/>
    <classElements xsi:type="models:RubyMethod" name="before_save"/>
    <classElements xsi:type="models:RubyMethod" name="get_materias"/>
    <classElements xsi:type="models:RubyMethod" name="get_name_evaluacion"/>
  </rubyClasses>
  <rubyClasses name="WorkExperience" superType="ActiveRecord::Base">
    <classElements xsi:type="models:Relationship" name=":persona" relationType="belongs_to"/>
    <classElements xsi:type="models:RubyMethod" name="before_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_create"/>
    <classElements xsi:type="models:RubyMethod" name="after_destroy"/>
    <classElements xsi:type="models:RubyMethod" name="after_update"/>
    <classElements xsi:type="models:RubyMethod" name="before_update"/>
    <classElements xsi:type="models:RubyMethod" name="validar_start_date"/>
  </rubyClasses>
  <rubyClasses name="Migrations::Base">
    <classElements xsi:type="models:RubyMethod" name="self.logger"/>
    <classElements xsi:type="models:RubyMethod" name="self.process_field"/>
  </rubyClasses>
  <rubyClasses name="Migrations::ParentMigration" superType="Migrations::Base">
    <classElements xsi:type="models:RubyMethod" name="self.batch_creation_csv"/>
  </rubyClasses>
  <rubyClasses name="Migrations::ScoreMigration" superType="Migrations::Base">
    <classElements xsi:type="models:RubyMethod" name="self.batch_creation_csv"/>
  </rubyClasses>
  <rubyClasses name="Migrations::StudentMigration" superType="Migrations::Base">
    <classElements xsi:type="models:RubyMethod" name="self.get_grades_by_name"/>
    <classElements xsi:type="models:RubyMethod" name="self.get_grades_by_level"/>
    <classElements xsi:type="models:RubyMethod" name="self.batch_creation_csv"/>
  </rubyClasses>
  <rubyClasses name="AnswerSheet" superType="ActiveResource::Base">
    <classElements xsi:type="models:RubyMethod" name="get_take_url"/>
    <classElements xsi:type="models:RubyMethod" name="questionnaire"/>
    <classElements xsi:type="models:RubyMethod" name="questionnaire="/>
    <classElements xsi:type="models:RubyMethod" name="update_token"/>
  </rubyClasses>
  <rubyClasses name="Questionnaire" superType="ActiveResource::Base">
    <classElements xsi:type="models:RubyMethod" name="get_edit_url"/>
    <classElements xsi:type="models:RubyMethod" name="answer_sheets"/>
    <classElements xsi:type="models:RubyMethod" name="answer_sheet"/>
    <classElements xsi:type="models:RubyMethod" name="create_answer_sheet"/>
  </rubyClasses>
  <rubyClasses name="Portfolio::UserToken" superType="ActiveResource::Base">
    <classElements xsi:type="models:RubyMethod" name="self.find_by_person_id"/>
    <classElements xsi:type="models:RubyMethod" name="get_invoices_url"/>
  </rubyClasses>
</models:Application>
