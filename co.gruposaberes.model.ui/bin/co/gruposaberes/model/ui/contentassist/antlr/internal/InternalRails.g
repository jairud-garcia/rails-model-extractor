/*
 * generated by Xtext
 */
grammar InternalRails;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package co.gruposaberes.model.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package co.gruposaberes.model.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import co.gruposaberes.model.services.RailsGrammarAccess;

}

@parser::members {
 
 	private RailsGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(RailsGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getGroup()); }
(rule__Class__Group__0)
{ after(grammarAccess.getClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassElement
entryRuleClassElement 
:
{ before(grammarAccess.getClassElementRule()); }
	 ruleClassElement
{ after(grammarAccess.getClassElementRule()); } 
	 EOF 
;

// Rule ClassElement
ruleClassElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassElementAccess().getAlternatives()); }
(rule__ClassElement__Alternatives)
{ after(grammarAccess.getClassElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespacedModuleName
entryRuleNamespacedModuleName 
:
{ before(grammarAccess.getNamespacedModuleNameRule()); }
	 ruleNamespacedModuleName
{ after(grammarAccess.getNamespacedModuleNameRule()); } 
	 EOF 
;

// Rule NamespacedModuleName
ruleNamespacedModuleName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespacedModuleNameAccess().getGroup()); }
(rule__NamespacedModuleName__Group__0)
{ after(grammarAccess.getNamespacedModuleNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodChainCall
entryRuleMethodChainCall 
:
{ before(grammarAccess.getMethodChainCallRule()); }
	 ruleMethodChainCall
{ after(grammarAccess.getMethodChainCallRule()); } 
	 EOF 
;

// Rule MethodChainCall
ruleMethodChainCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodChainCallAccess().getGroup()); }
(rule__MethodChainCall__Group__0)
{ after(grammarAccess.getMethodChainCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodCallParameters
entryRuleMethodCallParameters 
:
{ before(grammarAccess.getMethodCallParametersRule()); }
	 ruleMethodCallParameters
{ after(grammarAccess.getMethodCallParametersRule()); } 
	 EOF 
;

// Rule MethodCallParameters
ruleMethodCallParameters
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodCallParametersAccess().getAlternatives()); }
(rule__MethodCallParameters__Alternatives)
{ after(grammarAccess.getMethodCallParametersAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionsSeparatedByCommas
entryRuleExpressionsSeparatedByCommas 
:
{ before(grammarAccess.getExpressionsSeparatedByCommasRule()); }
	 ruleExpressionsSeparatedByCommas
{ after(grammarAccess.getExpressionsSeparatedByCommasRule()); } 
	 EOF 
;

// Rule ExpressionsSeparatedByCommas
ruleExpressionsSeparatedByCommas
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionsSeparatedByCommasAccess().getGroup()); }
(rule__ExpressionsSeparatedByCommas__Group__0)
{ after(grammarAccess.getExpressionsSeparatedByCommasAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionWithOutBracket
entryRuleExpressionWithOutBracket 
:
{ before(grammarAccess.getExpressionWithOutBracketRule()); }
	 ruleExpressionWithOutBracket
{ after(grammarAccess.getExpressionWithOutBracketRule()); } 
	 EOF 
;

// Rule ExpressionWithOutBracket
ruleExpressionWithOutBracket
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionWithOutBracketAccess().getAlternatives()); }
(rule__ExpressionWithOutBracket__Alternatives)
{ after(grammarAccess.getExpressionWithOutBracketAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationsChain
entryRuleOperationsChain 
:
{ before(grammarAccess.getOperationsChainRule()); }
	 ruleOperationsChain
{ after(grammarAccess.getOperationsChainRule()); } 
	 EOF 
;

// Rule OperationsChain
ruleOperationsChain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationsChainAccess().getGroup()); }
(rule__OperationsChain__Group__0)
{ after(grammarAccess.getOperationsChainAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorRule
entryRuleOperatorRule 
:
{ before(grammarAccess.getOperatorRuleRule()); }
	 ruleOperatorRule
{ after(grammarAccess.getOperatorRuleRule()); } 
	 EOF 
;

// Rule OperatorRule
ruleOperatorRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorRuleAccess().getGroup()); }
(rule__OperatorRule__Group__0)
{ after(grammarAccess.getOperatorRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationship
entryRuleRelationship 
:
{ before(grammarAccess.getRelationshipRule()); }
	 ruleRelationship
{ after(grammarAccess.getRelationshipRule()); } 
	 EOF 
;

// Rule Relationship
ruleRelationship
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationshipAccess().getAlternatives()); }
(rule__Relationship__Alternatives)
{ after(grammarAccess.getRelationshipAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHasMany
entryRuleHasMany 
:
{ before(grammarAccess.getHasManyRule()); }
	 ruleHasMany
{ after(grammarAccess.getHasManyRule()); } 
	 EOF 
;

// Rule HasMany
ruleHasMany
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHasManyAccess().getGroup()); }
(rule__HasMany__Group__0)
{ after(grammarAccess.getHasManyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHasOne
entryRuleHasOne 
:
{ before(grammarAccess.getHasOneRule()); }
	 ruleHasOne
{ after(grammarAccess.getHasOneRule()); } 
	 EOF 
;

// Rule HasOne
ruleHasOne
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHasOneAccess().getGroup()); }
(rule__HasOne__Group__0)
{ after(grammarAccess.getHasOneAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHasAndBelongsToMany
entryRuleHasAndBelongsToMany 
:
{ before(grammarAccess.getHasAndBelongsToManyRule()); }
	 ruleHasAndBelongsToMany
{ after(grammarAccess.getHasAndBelongsToManyRule()); } 
	 EOF 
;

// Rule HasAndBelongsToMany
ruleHasAndBelongsToMany
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHasAndBelongsToManyAccess().getGroup()); }
(rule__HasAndBelongsToMany__Group__0)
{ after(grammarAccess.getHasAndBelongsToManyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBelongsTo
entryRuleBelongsTo 
:
{ before(grammarAccess.getBelongsToRule()); }
	 ruleBelongsTo
{ after(grammarAccess.getBelongsToRule()); } 
	 EOF 
;

// Rule BelongsTo
ruleBelongsTo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBelongsToAccess().getGroup()); }
(rule__BelongsTo__Group__0)
{ after(grammarAccess.getBelongsToAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHashKeyValue
entryRuleHashKeyValue 
:
{ before(grammarAccess.getHashKeyValueRule()); }
	 ruleHashKeyValue
{ after(grammarAccess.getHashKeyValueRule()); } 
	 EOF 
;

// Rule HashKeyValue
ruleHashKeyValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHashKeyValueAccess().getGroup()); }
(rule__HashKeyValue__Group__0)
{ after(grammarAccess.getHashKeyValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIgnoredHashKeyValue
entryRuleIgnoredHashKeyValue 
:
{ before(grammarAccess.getIgnoredHashKeyValueRule()); }
	 ruleIgnoredHashKeyValue
{ after(grammarAccess.getIgnoredHashKeyValueRule()); } 
	 EOF 
;

// Rule IgnoredHashKeyValue
ruleIgnoredHashKeyValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getGroup()); }
(rule__IgnoredHashKeyValue__Group__0)
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod
entryRuleMethod 
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodAccess().getGroup()); }
(rule__Method__Group__0)
{ after(grammarAccess.getMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodName
entryRuleMethodName 
:
{ before(grammarAccess.getMethodNameRule()); }
	 ruleMethodName
{ after(grammarAccess.getMethodNameRule()); } 
	 EOF 
;

// Rule MethodName
ruleMethodName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodNameAccess().getGroup()); }
(rule__MethodName__Group__0)
{ after(grammarAccess.getMethodNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ClassElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassElementAccess().getMethodParserRuleCall_0()); }
	ruleMethod
{ after(grammarAccess.getClassElementAccess().getMethodParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassElementAccess().getRelationshipParserRuleCall_1()); }
	ruleRelationship
{ after(grammarAccess.getClassElementAccess().getRelationshipParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getClassElementAccess().getOperationsChainParserRuleCall_2()); }
	ruleOperationsChain
{ after(grammarAccess.getClassElementAccess().getOperationsChainParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChainCall__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainCallAccess().getSYMBOLTerminalRuleCall_0_0()); }
	RULE_SYMBOL
{ after(grammarAccess.getMethodChainCallAccess().getSYMBOLTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getMethodChainCallAccess().getSTRINGTerminalRuleCall_0_1()); }
	RULE_STRING
{ after(grammarAccess.getMethodChainCallAccess().getSTRINGTerminalRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getMethodChainCallAccess().getINTTerminalRuleCall_0_2()); }
	RULE_INT
{ after(grammarAccess.getMethodChainCallAccess().getINTTerminalRuleCall_0_2()); }
)

    |(
{ before(grammarAccess.getMethodChainCallAccess().getINT_METHODTerminalRuleCall_0_3()); }
	RULE_INT_METHOD
{ after(grammarAccess.getMethodChainCallAccess().getINT_METHODTerminalRuleCall_0_3()); }
)

    |(
{ before(grammarAccess.getMethodChainCallAccess().getPARENTHESIS_BLOCKTerminalRuleCall_0_4()); }
	RULE_PARENTHESIS_BLOCK
{ after(grammarAccess.getMethodChainCallAccess().getPARENTHESIS_BLOCKTerminalRuleCall_0_4()); }
)

    |(
{ before(grammarAccess.getMethodChainCallAccess().getARRAY_BLOCKTerminalRuleCall_0_5()); }
	RULE_ARRAY_BLOCK
{ after(grammarAccess.getMethodChainCallAccess().getARRAY_BLOCKTerminalRuleCall_0_5()); }
)

    |(
{ before(grammarAccess.getMethodChainCallAccess().getNamespacedModuleNameParserRuleCall_0_6()); }
	ruleNamespacedModuleName
{ after(grammarAccess.getMethodChainCallAccess().getNamespacedModuleNameParserRuleCall_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCallParameters__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallParametersAccess().getPARENTHESIS_BLOCKTerminalRuleCall_0()); }
	RULE_PARENTHESIS_BLOCK
{ after(grammarAccess.getMethodCallParametersAccess().getPARENTHESIS_BLOCKTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMethodCallParametersAccess().getExpressionsSeparatedByCommasParserRuleCall_1()); }
	ruleExpressionsSeparatedByCommas
{ after(grammarAccess.getMethodCallParametersAccess().getExpressionsSeparatedByCommasParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionWithOutBracket__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionWithOutBracketAccess().getSYMBOLTerminalRuleCall_0()); }
	RULE_SYMBOL
{ after(grammarAccess.getExpressionWithOutBracketAccess().getSYMBOLTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionWithOutBracketAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getExpressionWithOutBracketAccess().getSTRINGTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpressionWithOutBracketAccess().getARRAY_BLOCKTerminalRuleCall_2()); }
	RULE_ARRAY_BLOCK
{ after(grammarAccess.getExpressionWithOutBracketAccess().getARRAY_BLOCKTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getExpressionWithOutBracketAccess().getPARENTHESIS_BLOCKTerminalRuleCall_3()); }
	RULE_PARENTHESIS_BLOCK
{ after(grammarAccess.getExpressionWithOutBracketAccess().getPARENTHESIS_BLOCKTerminalRuleCall_3()); }
)

    |(
{ before(grammarAccess.getExpressionWithOutBracketAccess().getDECIMALTerminalRuleCall_4()); }
	RULE_DECIMAL
{ after(grammarAccess.getExpressionWithOutBracketAccess().getDECIMALTerminalRuleCall_4()); }
)

    |(
{ before(grammarAccess.getExpressionWithOutBracketAccess().getINTTerminalRuleCall_5()); }
	RULE_INT
{ after(grammarAccess.getExpressionWithOutBracketAccess().getINTTerminalRuleCall_5()); }
)

    |(
{ before(grammarAccess.getExpressionWithOutBracketAccess().getREGEXPTerminalRuleCall_6()); }
	RULE_REGEXP
{ after(grammarAccess.getExpressionWithOutBracketAccess().getREGEXPTerminalRuleCall_6()); }
)

    |(
{ before(grammarAccess.getExpressionWithOutBracketAccess().getMethodChainCallParserRuleCall_7()); }
	ruleMethodChainCall
{ after(grammarAccess.getExpressionWithOutBracketAccess().getMethodChainCallParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getExpressionWithOutBracketAccess().getIgnoredHashKeyValueParserRuleCall_8()); }
	ruleIgnoredHashKeyValue
{ after(grammarAccess.getExpressionWithOutBracketAccess().getIgnoredHashKeyValueParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionWithOutBracketParserRuleCall_0()); }
	ruleExpressionWithOutBracket
{ after(grammarAccess.getExpressionAccess().getExpressionWithOutBracketParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getBRACKET_BLOCKTerminalRuleCall_1()); }
	RULE_BRACKET_BLOCK
{ after(grammarAccess.getExpressionAccess().getBRACKET_BLOCKTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsChain__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationsChainAccess().getBRACKET_BLOCKTerminalRuleCall_1_1_0()); }
	RULE_BRACKET_BLOCK
{ after(grammarAccess.getOperationsChainAccess().getBRACKET_BLOCKTerminalRuleCall_1_1_0()); }
)

    |(
{ before(grammarAccess.getOperationsChainAccess().getDECIMALTerminalRuleCall_1_1_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getOperationsChainAccess().getDECIMALTerminalRuleCall_1_1_1()); }
)

    |(
{ before(grammarAccess.getOperationsChainAccess().getMethodChainCallParserRuleCall_1_1_2()); }
	ruleMethodChainCall
{ after(grammarAccess.getOperationsChainAccess().getMethodChainCallParserRuleCall_1_1_2()); }
)

    |(
{ before(grammarAccess.getOperationsChainAccess().getREGEXPTerminalRuleCall_1_1_3()); }
	RULE_REGEXP
{ after(grammarAccess.getOperationsChainAccess().getREGEXPTerminalRuleCall_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorRule__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorRuleAccess().getColonSpaceKeyword_0_0()); }

	': ' 

{ after(grammarAccess.getOperatorRuleAccess().getColonSpaceKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getQuestionMarkKeyword_0_1()); }

	'?' 

{ after(grammarAccess.getOperatorRuleAccess().getQuestionMarkKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getLessThanSignKeyword_0_2()); }

	'<' 

{ after(grammarAccess.getOperatorRuleAccess().getLessThanSignKeyword_0_2()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getPlusSignKeyword_0_3()); }

	'+' 

{ after(grammarAccess.getOperatorRuleAccess().getPlusSignKeyword_0_3()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getHyphenMinusKeyword_0_4()); }

	'-' 

{ after(grammarAccess.getOperatorRuleAccess().getHyphenMinusKeyword_0_4()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getAsteriskKeyword_0_5()); }

	'*' 

{ after(grammarAccess.getOperatorRuleAccess().getAsteriskKeyword_0_5()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getSolidusKeyword_0_6()); }

	'/' 

{ after(grammarAccess.getOperatorRuleAccess().getSolidusKeyword_0_6()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getPercentSignKeyword_0_7()); }

	'%' 

{ after(grammarAccess.getOperatorRuleAccess().getPercentSignKeyword_0_7()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getAsteriskAsteriskKeyword_0_8()); }

	'**' 

{ after(grammarAccess.getOperatorRuleAccess().getAsteriskAsteriskKeyword_0_8()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getEqualsSignKeyword_0_9()); }

	'=' 

{ after(grammarAccess.getOperatorRuleAccess().getEqualsSignKeyword_0_9()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getTildeKeyword_0_10()); }

	'~' 

{ after(grammarAccess.getOperatorRuleAccess().getTildeKeyword_0_10()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getVerticalLineKeyword_0_11()); }

	'|' 

{ after(grammarAccess.getOperatorRuleAccess().getVerticalLineKeyword_0_11()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getVerticalLineVerticalLineKeyword_0_12()); }

	'||' 

{ after(grammarAccess.getOperatorRuleAccess().getVerticalLineVerticalLineKeyword_0_12()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getAmpersandKeyword_0_13()); }

	'&' 

{ after(grammarAccess.getOperatorRuleAccess().getAmpersandKeyword_0_13()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getAmpersandAmpersandKeyword_0_14()); }

	'&&' 

{ after(grammarAccess.getOperatorRuleAccess().getAmpersandAmpersandKeyword_0_14()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getEqualsSignEqualsSignKeyword_0_15()); }

	'==' 

{ after(grammarAccess.getOperatorRuleAccess().getEqualsSignEqualsSignKeyword_0_15()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getExclamationMarkKeyword_0_16()); }

	'!' 

{ after(grammarAccess.getOperatorRuleAccess().getExclamationMarkKeyword_0_16()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getLessThanSignLessThanSignKeyword_0_17()); }

	'<<' 

{ after(grammarAccess.getOperatorRuleAccess().getLessThanSignLessThanSignKeyword_0_17()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_0_18()); }

	'<=>' 

{ after(grammarAccess.getOperatorRuleAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_0_18()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getGreaterThanSignKeyword_0_19()); }

	'>' 

{ after(grammarAccess.getOperatorRuleAccess().getGreaterThanSignKeyword_0_19()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getFullStopFullStopKeyword_0_20()); }

	'..' 

{ after(grammarAccess.getOperatorRuleAccess().getFullStopFullStopKeyword_0_20()); }
)

    |(
{ before(grammarAccess.getOperatorRuleAccess().getFullStopFullStopFullStopKeyword_0_21()); }

	'...' 

{ after(grammarAccess.getOperatorRuleAccess().getFullStopFullStopFullStopKeyword_0_21()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relationship__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationshipAccess().getHasManyParserRuleCall_0()); }
	ruleHasMany
{ after(grammarAccess.getRelationshipAccess().getHasManyParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRelationshipAccess().getHasOneParserRuleCall_1()); }
	ruleHasOne
{ after(grammarAccess.getRelationshipAccess().getHasOneParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRelationshipAccess().getHasAndBelongsToManyParserRuleCall_2()); }
	ruleHasAndBelongsToMany
{ after(grammarAccess.getRelationshipAccess().getHasAndBelongsToManyParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getRelationshipAccess().getBelongsToParserRuleCall_3()); }
	ruleBelongsTo
{ after(grammarAccess.getRelationshipAccess().getBelongsToParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasMany__NameAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasManyAccess().getNameSYMBOLTerminalRuleCall_2_0_0()); }
	RULE_SYMBOL
{ after(grammarAccess.getHasManyAccess().getNameSYMBOLTerminalRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getHasManyAccess().getNameSTRINGTerminalRuleCall_2_0_1()); }
	RULE_STRING
{ after(grammarAccess.getHasManyAccess().getNameSTRINGTerminalRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasOne__NameAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasOneAccess().getNameSYMBOLTerminalRuleCall_2_0_0()); }
	RULE_SYMBOL
{ after(grammarAccess.getHasOneAccess().getNameSYMBOLTerminalRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getHasOneAccess().getNameSTRINGTerminalRuleCall_2_0_1()); }
	RULE_STRING
{ after(grammarAccess.getHasOneAccess().getNameSTRINGTerminalRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasAndBelongsToMany__NameAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasAndBelongsToManyAccess().getNameSYMBOLTerminalRuleCall_2_0_0()); }
	RULE_SYMBOL
{ after(grammarAccess.getHasAndBelongsToManyAccess().getNameSYMBOLTerminalRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getHasAndBelongsToManyAccess().getNameSTRINGTerminalRuleCall_2_0_1()); }
	RULE_STRING
{ after(grammarAccess.getHasAndBelongsToManyAccess().getNameSTRINGTerminalRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsTo__NameAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToAccess().getNameSYMBOLTerminalRuleCall_2_0_0()); }
	RULE_SYMBOL
{ after(grammarAccess.getBelongsToAccess().getNameSYMBOLTerminalRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getBelongsToAccess().getNameSTRINGTerminalRuleCall_2_0_1()); }
	RULE_STRING
{ after(grammarAccess.getBelongsToAccess().getNameSTRINGTerminalRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getGroup_2_0()); }
(rule__HashKeyValue__Group_2_0__0)
{ after(grammarAccess.getHashKeyValueAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getHashKeyValueAccess().getGroup_2_1()); }
(rule__HashKeyValue__Group_2_1__0)
{ after(grammarAccess.getHashKeyValueAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__KeyAlternatives_2_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getKeySYMBOLTerminalRuleCall_2_1_0_0_0()); }
	RULE_SYMBOL
{ after(grammarAccess.getHashKeyValueAccess().getKeySYMBOLTerminalRuleCall_2_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getHashKeyValueAccess().getKeySTRINGTerminalRuleCall_2_1_0_0_1()); }
	RULE_STRING
{ after(grammarAccess.getHashKeyValueAccess().getKeySTRINGTerminalRuleCall_2_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__ValueAlternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getValueSYMBOLTerminalRuleCall_4_0_0()); }
	RULE_SYMBOL
{ after(grammarAccess.getHashKeyValueAccess().getValueSYMBOLTerminalRuleCall_4_0_0()); }
)

    |(
{ before(grammarAccess.getHashKeyValueAccess().getValueSTRINGTerminalRuleCall_4_0_1()); }
	RULE_STRING
{ after(grammarAccess.getHashKeyValueAccess().getValueSTRINGTerminalRuleCall_4_0_1()); }
)

    |(
{ before(grammarAccess.getHashKeyValueAccess().getValueBRACKET_BLOCKTerminalRuleCall_4_0_2()); }
	RULE_BRACKET_BLOCK
{ after(grammarAccess.getHashKeyValueAccess().getValueBRACKET_BLOCKTerminalRuleCall_4_0_2()); }
)

    |(
{ before(grammarAccess.getHashKeyValueAccess().getValueARRAY_BLOCKTerminalRuleCall_4_0_3()); }
	RULE_ARRAY_BLOCK
{ after(grammarAccess.getHashKeyValueAccess().getValueARRAY_BLOCKTerminalRuleCall_4_0_3()); }
)

    |(
{ before(grammarAccess.getHashKeyValueAccess().getValueDECIMALTerminalRuleCall_4_0_4()); }
	RULE_DECIMAL
{ after(grammarAccess.getHashKeyValueAccess().getValueDECIMALTerminalRuleCall_4_0_4()); }
)

    |(
{ before(grammarAccess.getHashKeyValueAccess().getValueINTTerminalRuleCall_4_0_5()); }
	RULE_INT
{ after(grammarAccess.getHashKeyValueAccess().getValueINTTerminalRuleCall_4_0_5()); }
)

    |(
{ before(grammarAccess.getHashKeyValueAccess().getValueINT_METHODTerminalRuleCall_4_0_6()); }
	RULE_INT_METHOD
{ after(grammarAccess.getHashKeyValueAccess().getValueINT_METHODTerminalRuleCall_4_0_6()); }
)

    |(
{ before(grammarAccess.getHashKeyValueAccess().getValueMethodChainCallParserRuleCall_4_0_7()); }
	ruleMethodChainCall
{ after(grammarAccess.getHashKeyValueAccess().getValueMethodChainCallParserRuleCall_4_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IgnoredHashKeyValue__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getGroup_1_0()); }
(rule__IgnoredHashKeyValue__Group_1_0__0)
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getGroup_1_1()); }
(rule__IgnoredHashKeyValue__Group_1_1__0)
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IgnoredHashKeyValue__Alternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getSYMBOLTerminalRuleCall_1_1_0_0()); }
	RULE_SYMBOL
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getSYMBOLTerminalRuleCall_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getSTRINGTerminalRuleCall_1_1_0_1()); }
	RULE_STRING
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getSTRINGTerminalRuleCall_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IgnoredHashKeyValue__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getSYMBOLTerminalRuleCall_3_0()); }
	RULE_SYMBOL
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getSYMBOLTerminalRuleCall_3_0()); }
)

    |(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getSTRINGTerminalRuleCall_3_1()); }
	RULE_STRING
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getSTRINGTerminalRuleCall_3_1()); }
)

    |(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getBRACKET_BLOCKTerminalRuleCall_3_2()); }
	RULE_BRACKET_BLOCK
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getBRACKET_BLOCKTerminalRuleCall_3_2()); }
)

    |(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getARRAY_BLOCKTerminalRuleCall_3_3()); }
	RULE_ARRAY_BLOCK
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getARRAY_BLOCKTerminalRuleCall_3_3()); }
)

    |(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getDECIMALTerminalRuleCall_3_4()); }
	RULE_DECIMAL
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getDECIMALTerminalRuleCall_3_4()); }
)

    |(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getINTTerminalRuleCall_3_5()); }
	RULE_INT
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getINTTerminalRuleCall_3_5()); }
)

    |(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getINT_METHODTerminalRuleCall_3_6()); }
	RULE_INT_METHOD
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getINT_METHODTerminalRuleCall_3_6()); }
)

    |(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getMethodChainCallParserRuleCall_3_7()); }
	ruleMethodChainCall
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getMethodChainCallParserRuleCall_3_7()); }
)

    |(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getREGEXPTerminalRuleCall_3_8()); }
	RULE_REGEXP
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getREGEXPTerminalRuleCall_3_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodNameAccess().getQuestionMarkKeyword_2_0()); }

	'?' 

{ after(grammarAccess.getMethodNameAccess().getQuestionMarkKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getMethodNameAccess().getEqualsSignKeyword_2_1()); }

	'=' 

{ after(grammarAccess.getMethodNameAccess().getEqualsSignKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Class__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getCLASS_WORDTerminalRuleCall_0()); }
	RULE_CLASS_WORD
{ after(grammarAccess.getClassAccess().getCLASS_WORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getSPACETerminalRuleCall_1()); }
(	RULE_SPACE)*
{ after(grammarAccess.getClassAccess().getSPACETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__2__Impl
	rule__Class__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameAssignment_2()); }
(rule__Class__NameAssignment_2)
{ after(grammarAccess.getClassAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__3__Impl
	rule__Class__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_3()); }
(rule__Class__Group_3__0)?
{ after(grammarAccess.getClassAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__4__Impl
	rule__Class__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getSPACETerminalRuleCall_4()); }
(	RULE_SPACE)*
{ after(grammarAccess.getClassAccess().getSPACETerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassElementsAssignment_5()); }
(rule__Class__ClassElementsAssignment_5)*
{ after(grammarAccess.getClassAccess().getClassElementsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Class__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_3__0__Impl
	rule__Class__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getSPACETerminalRuleCall_3_0()); }
(	RULE_SPACE)*
{ after(grammarAccess.getClassAccess().getSPACETerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_3__1__Impl
	rule__Class__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getLessThanSignKeyword_3_1()); }

	'<' 

{ after(grammarAccess.getClassAccess().getLessThanSignKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_3__2__Impl
	rule__Class__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getSPACETerminalRuleCall_3_2()); }
(	RULE_SPACE)*
{ after(grammarAccess.getClassAccess().getSPACETerminalRuleCall_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getSuperTypeAssignment_3_3()); }
(rule__Class__SuperTypeAssignment_3_3)
{ after(grammarAccess.getClassAccess().getSuperTypeAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NamespacedModuleName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespacedModuleName__Group__0__Impl
	rule__NamespacedModuleName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespacedModuleName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespacedModuleNameAccess().getGroup_0()); }
(rule__NamespacedModuleName__Group_0__0)*
{ after(grammarAccess.getNamespacedModuleNameAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespacedModuleName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespacedModuleName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespacedModuleName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespacedModuleNameAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getNamespacedModuleNameAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamespacedModuleName__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespacedModuleName__Group_0__0__Impl
	rule__NamespacedModuleName__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespacedModuleName__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespacedModuleNameAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
{ after(grammarAccess.getNamespacedModuleNameAccess().getIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespacedModuleName__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespacedModuleName__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespacedModuleName__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespacedModuleNameAccess().getColonColonKeyword_0_1()); }

	'::' 

{ after(grammarAccess.getNamespacedModuleNameAccess().getColonColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodChainCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChainCall__Group__0__Impl
	rule__MethodChainCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChainCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainCallAccess().getAlternatives_0()); }
(rule__MethodChainCall__Alternatives_0)
{ after(grammarAccess.getMethodChainCallAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodChainCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChainCall__Group__1__Impl
	rule__MethodChainCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChainCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainCallAccess().getGroup_1()); }
(rule__MethodChainCall__Group_1__0)*
{ after(grammarAccess.getMethodChainCallAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodChainCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChainCall__Group__2__Impl
	rule__MethodChainCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChainCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainCallAccess().getSPACETerminalRuleCall_2()); }
(	RULE_SPACE)*
{ after(grammarAccess.getMethodChainCallAccess().getSPACETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodChainCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChainCall__Group__3__Impl
	rule__MethodChainCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChainCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainCallAccess().getMethodCallParametersParserRuleCall_3()); }
(	ruleMethodCallParameters)?
{ after(grammarAccess.getMethodChainCallAccess().getMethodCallParametersParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodChainCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChainCall__Group__4__Impl
	rule__MethodChainCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChainCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainCallAccess().getSPACETerminalRuleCall_4()); }
(	RULE_SPACE)*
{ after(grammarAccess.getMethodChainCallAccess().getSPACETerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodChainCall__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChainCall__Group__5__Impl
	rule__MethodChainCall__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChainCall__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainCallAccess().getBRACKET_BLOCKTerminalRuleCall_5()); }
(	RULE_BRACKET_BLOCK)?
{ after(grammarAccess.getMethodChainCallAccess().getBRACKET_BLOCKTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodChainCall__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChainCall__Group__6__Impl
	rule__MethodChainCall__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChainCall__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainCallAccess().getSPACETerminalRuleCall_6()); }
(	RULE_SPACE)*
{ after(grammarAccess.getMethodChainCallAccess().getSPACETerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodChainCall__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChainCall__Group__7__Impl
	rule__MethodChainCall__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChainCall__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainCallAccess().getDO_BLOCK_PARAMETERSTerminalRuleCall_7()); }
(	RULE_DO_BLOCK_PARAMETERS)?
{ after(grammarAccess.getMethodChainCallAccess().getDO_BLOCK_PARAMETERSTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodChainCall__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChainCall__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChainCall__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainCallAccess().getSPACETerminalRuleCall_8()); }
(	RULE_SPACE)*
{ after(grammarAccess.getMethodChainCallAccess().getSPACETerminalRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__MethodChainCall__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChainCall__Group_1__0__Impl
	rule__MethodChainCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChainCall__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainCallAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getMethodChainCallAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodChainCall__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChainCall__Group_1__1__Impl
	rule__MethodChainCall__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChainCall__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainCallAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getMethodChainCallAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodChainCall__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChainCall__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChainCall__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainCallAccess().getPARENTHESIS_BLOCKTerminalRuleCall_1_2()); }
(	RULE_PARENTHESIS_BLOCK)?
{ after(grammarAccess.getMethodChainCallAccess().getPARENTHESIS_BLOCKTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExpressionsSeparatedByCommas__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionsSeparatedByCommas__Group__0__Impl
	rule__ExpressionsSeparatedByCommas__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsSeparatedByCommas__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionsSeparatedByCommasAccess().getExpressionWithOutBracketParserRuleCall_0()); }
	ruleExpressionWithOutBracket
{ after(grammarAccess.getExpressionsSeparatedByCommasAccess().getExpressionWithOutBracketParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionsSeparatedByCommas__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionsSeparatedByCommas__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsSeparatedByCommas__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionsSeparatedByCommasAccess().getGroup_1()); }
(rule__ExpressionsSeparatedByCommas__Group_1__0)*
{ after(grammarAccess.getExpressionsSeparatedByCommasAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionsSeparatedByCommas__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionsSeparatedByCommas__Group_1__0__Impl
	rule__ExpressionsSeparatedByCommas__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsSeparatedByCommas__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionsSeparatedByCommasAccess().getSPACETerminalRuleCall_1_0()); }
(	RULE_SPACE)*
{ after(grammarAccess.getExpressionsSeparatedByCommasAccess().getSPACETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionsSeparatedByCommas__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionsSeparatedByCommas__Group_1__1__Impl
	rule__ExpressionsSeparatedByCommas__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsSeparatedByCommas__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionsSeparatedByCommasAccess().getCOMMATerminalRuleCall_1_1()); }
	RULE_COMMA
{ after(grammarAccess.getExpressionsSeparatedByCommasAccess().getCOMMATerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionsSeparatedByCommas__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionsSeparatedByCommas__Group_1__2__Impl
	rule__ExpressionsSeparatedByCommas__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsSeparatedByCommas__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionsSeparatedByCommasAccess().getSPACETerminalRuleCall_1_2()); }
(	RULE_SPACE)*
{ after(grammarAccess.getExpressionsSeparatedByCommasAccess().getSPACETerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionsSeparatedByCommas__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionsSeparatedByCommas__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionsSeparatedByCommas__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionsSeparatedByCommasAccess().getExpressionParserRuleCall_1_3()); }
	ruleExpression
{ after(grammarAccess.getExpressionsSeparatedByCommasAccess().getExpressionParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OperationsChain__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationsChain__Group__0__Impl
	rule__OperationsChain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsChain__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationsChainAccess().getMethodChainCallParserRuleCall_0()); }
	ruleMethodChainCall
{ after(grammarAccess.getOperationsChainAccess().getMethodChainCallParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationsChain__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationsChain__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsChain__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationsChainAccess().getGroup_1()); }
(rule__OperationsChain__Group_1__0)*
{ after(grammarAccess.getOperationsChainAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationsChain__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationsChain__Group_1__0__Impl
	rule__OperationsChain__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsChain__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationsChainAccess().getOperatorRuleParserRuleCall_1_0()); }
	ruleOperatorRule
{ after(grammarAccess.getOperationsChainAccess().getOperatorRuleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationsChain__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationsChain__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsChain__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationsChainAccess().getAlternatives_1_1()); }
(rule__OperationsChain__Alternatives_1_1)
{ after(grammarAccess.getOperationsChainAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperatorRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorRule__Group__0__Impl
	rule__OperatorRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorRuleAccess().getAlternatives_0()); }
(rule__OperatorRule__Alternatives_0)
{ after(grammarAccess.getOperatorRuleAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorRule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorRuleAccess().getEqualsSignKeyword_1()); }
(
	'=' 
)?
{ after(grammarAccess.getOperatorRuleAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HasMany__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasMany__Group__0__Impl
	rule__HasMany__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HasMany__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasManyAccess().getHAS_MANY_WORDTerminalRuleCall_0()); }
	RULE_HAS_MANY_WORD
{ after(grammarAccess.getHasManyAccess().getHAS_MANY_WORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasMany__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasMany__Group__1__Impl
	rule__HasMany__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HasMany__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasManyAccess().getSPACETerminalRuleCall_1()); }
(	RULE_SPACE)*
{ after(grammarAccess.getHasManyAccess().getSPACETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasMany__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasMany__Group__2__Impl
	rule__HasMany__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HasMany__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasManyAccess().getNameAssignment_2()); }
(rule__HasMany__NameAssignment_2)
{ after(grammarAccess.getHasManyAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasMany__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasMany__Group__3__Impl
	rule__HasMany__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HasMany__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasManyAccess().getSPACETerminalRuleCall_3()); }
(	RULE_SPACE)*
{ after(grammarAccess.getHasManyAccess().getSPACETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasMany__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasMany__Group__4__Impl
	rule__HasMany__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HasMany__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasManyAccess().getOptionsAssignment_4()); }
(rule__HasMany__OptionsAssignment_4)*
{ after(grammarAccess.getHasManyAccess().getOptionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasMany__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasMany__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HasMany__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasManyAccess().getSL_COMMENTTerminalRuleCall_5()); }
(	RULE_SL_COMMENT)?
{ after(grammarAccess.getHasManyAccess().getSL_COMMENTTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__HasOne__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasOne__Group__0__Impl
	rule__HasOne__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HasOne__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasOneAccess().getHAS_ONE_WORDTerminalRuleCall_0()); }
	RULE_HAS_ONE_WORD
{ after(grammarAccess.getHasOneAccess().getHAS_ONE_WORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasOne__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasOne__Group__1__Impl
	rule__HasOne__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HasOne__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasOneAccess().getSPACETerminalRuleCall_1()); }
(	RULE_SPACE)*
{ after(grammarAccess.getHasOneAccess().getSPACETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasOne__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasOne__Group__2__Impl
	rule__HasOne__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HasOne__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasOneAccess().getNameAssignment_2()); }
(rule__HasOne__NameAssignment_2)
{ after(grammarAccess.getHasOneAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasOne__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasOne__Group__3__Impl
	rule__HasOne__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HasOne__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasOneAccess().getSPACETerminalRuleCall_3()); }
(	RULE_SPACE)*
{ after(grammarAccess.getHasOneAccess().getSPACETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasOne__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasOne__Group__4__Impl
	rule__HasOne__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HasOne__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasOneAccess().getOptionsAssignment_4()); }
(rule__HasOne__OptionsAssignment_4)*
{ after(grammarAccess.getHasOneAccess().getOptionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasOne__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasOne__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HasOne__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasOneAccess().getSL_COMMENTTerminalRuleCall_5()); }
(	RULE_SL_COMMENT)?
{ after(grammarAccess.getHasOneAccess().getSL_COMMENTTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__HasAndBelongsToMany__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasAndBelongsToMany__Group__0__Impl
	rule__HasAndBelongsToMany__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HasAndBelongsToMany__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasAndBelongsToManyAccess().getHAS_AND_BELONGS_TO_MANY_WORDTerminalRuleCall_0()); }
	RULE_HAS_AND_BELONGS_TO_MANY_WORD
{ after(grammarAccess.getHasAndBelongsToManyAccess().getHAS_AND_BELONGS_TO_MANY_WORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasAndBelongsToMany__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasAndBelongsToMany__Group__1__Impl
	rule__HasAndBelongsToMany__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HasAndBelongsToMany__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasAndBelongsToManyAccess().getSPACETerminalRuleCall_1()); }
(	RULE_SPACE)*
{ after(grammarAccess.getHasAndBelongsToManyAccess().getSPACETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasAndBelongsToMany__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasAndBelongsToMany__Group__2__Impl
	rule__HasAndBelongsToMany__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HasAndBelongsToMany__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasAndBelongsToManyAccess().getNameAssignment_2()); }
(rule__HasAndBelongsToMany__NameAssignment_2)
{ after(grammarAccess.getHasAndBelongsToManyAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasAndBelongsToMany__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasAndBelongsToMany__Group__3__Impl
	rule__HasAndBelongsToMany__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HasAndBelongsToMany__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasAndBelongsToManyAccess().getSPACETerminalRuleCall_3()); }
(	RULE_SPACE)*
{ after(grammarAccess.getHasAndBelongsToManyAccess().getSPACETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HasAndBelongsToMany__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HasAndBelongsToMany__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HasAndBelongsToMany__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasAndBelongsToManyAccess().getOptionsAssignment_4()); }
(rule__HasAndBelongsToMany__OptionsAssignment_4)*
{ after(grammarAccess.getHasAndBelongsToManyAccess().getOptionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__BelongsTo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BelongsTo__Group__0__Impl
	rule__BelongsTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsTo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToAccess().getBELONGS_TO_WORDTerminalRuleCall_0()); }
	RULE_BELONGS_TO_WORD
{ after(grammarAccess.getBelongsToAccess().getBELONGS_TO_WORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BelongsTo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BelongsTo__Group__1__Impl
	rule__BelongsTo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsTo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToAccess().getSPACETerminalRuleCall_1()); }
(	RULE_SPACE)*
{ after(grammarAccess.getBelongsToAccess().getSPACETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BelongsTo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BelongsTo__Group__2__Impl
	rule__BelongsTo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsTo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToAccess().getNameAssignment_2()); }
(rule__BelongsTo__NameAssignment_2)
{ after(grammarAccess.getBelongsToAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BelongsTo__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BelongsTo__Group__3__Impl
	rule__BelongsTo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsTo__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToAccess().getSPACETerminalRuleCall_3()); }
(	RULE_SPACE)*
{ after(grammarAccess.getBelongsToAccess().getSPACETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BelongsTo__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BelongsTo__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsTo__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToAccess().getOptionsAssignment_4()); }
(rule__BelongsTo__OptionsAssignment_4)*
{ after(grammarAccess.getBelongsToAccess().getOptionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__HashKeyValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HashKeyValue__Group__0__Impl
	rule__HashKeyValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getCOMMATerminalRuleCall_0()); }
	RULE_COMMA
{ after(grammarAccess.getHashKeyValueAccess().getCOMMATerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HashKeyValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HashKeyValue__Group__1__Impl
	rule__HashKeyValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_1()); }
(	RULE_SPACE)*
{ after(grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HashKeyValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HashKeyValue__Group__2__Impl
	rule__HashKeyValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getAlternatives_2()); }
(rule__HashKeyValue__Alternatives_2)
{ after(grammarAccess.getHashKeyValueAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HashKeyValue__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HashKeyValue__Group__3__Impl
	rule__HashKeyValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_3()); }
(	RULE_SPACE)*
{ after(grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HashKeyValue__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HashKeyValue__Group__4__Impl
	rule__HashKeyValue__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getValueAssignment_4()); }
(rule__HashKeyValue__ValueAssignment_4)
{ after(grammarAccess.getHashKeyValueAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HashKeyValue__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HashKeyValue__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_5()); }
(	RULE_SPACE)*
{ after(grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__HashKeyValue__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HashKeyValue__Group_2_0__0__Impl
	rule__HashKeyValue__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getKeyAssignment_2_0_0()); }
(rule__HashKeyValue__KeyAssignment_2_0_0)
{ after(grammarAccess.getHashKeyValueAccess().getKeyAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HashKeyValue__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HashKeyValue__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getColonKeyword_2_0_1()); }

	':' 

{ after(grammarAccess.getHashKeyValueAccess().getColonKeyword_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HashKeyValue__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HashKeyValue__Group_2_1__0__Impl
	rule__HashKeyValue__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getKeyAssignment_2_1_0()); }
(rule__HashKeyValue__KeyAssignment_2_1_0)
{ after(grammarAccess.getHashKeyValueAccess().getKeyAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HashKeyValue__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HashKeyValue__Group_2_1__1__Impl
	rule__HashKeyValue__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_2_1_1()); }
(	RULE_SPACE)*
{ after(grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HashKeyValue__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HashKeyValue__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getEqualsSignGreaterThanSignKeyword_2_1_2()); }

	'=>' 

{ after(grammarAccess.getHashKeyValueAccess().getEqualsSignGreaterThanSignKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IgnoredHashKeyValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IgnoredHashKeyValue__Group__0__Impl
	rule__IgnoredHashKeyValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IgnoredHashKeyValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_0()); }
(	RULE_SPACE)*
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IgnoredHashKeyValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IgnoredHashKeyValue__Group__1__Impl
	rule__IgnoredHashKeyValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IgnoredHashKeyValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getAlternatives_1()); }
(rule__IgnoredHashKeyValue__Alternatives_1)
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IgnoredHashKeyValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IgnoredHashKeyValue__Group__2__Impl
	rule__IgnoredHashKeyValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IgnoredHashKeyValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_2()); }
(	RULE_SPACE)*
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IgnoredHashKeyValue__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IgnoredHashKeyValue__Group__3__Impl
	rule__IgnoredHashKeyValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IgnoredHashKeyValue__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getAlternatives_3()); }
(rule__IgnoredHashKeyValue__Alternatives_3)
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IgnoredHashKeyValue__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IgnoredHashKeyValue__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IgnoredHashKeyValue__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_4()); }
(	RULE_SPACE)*
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IgnoredHashKeyValue__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IgnoredHashKeyValue__Group_1_0__0__Impl
	rule__IgnoredHashKeyValue__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IgnoredHashKeyValue__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getIDTerminalRuleCall_1_0_0()); }
	RULE_ID
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IgnoredHashKeyValue__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IgnoredHashKeyValue__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IgnoredHashKeyValue__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getColonKeyword_1_0_1()); }

	':' 

{ after(grammarAccess.getIgnoredHashKeyValueAccess().getColonKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IgnoredHashKeyValue__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IgnoredHashKeyValue__Group_1_1__0__Impl
	rule__IgnoredHashKeyValue__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IgnoredHashKeyValue__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getAlternatives_1_1_0()); }
(rule__IgnoredHashKeyValue__Alternatives_1_1_0)
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IgnoredHashKeyValue__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IgnoredHashKeyValue__Group_1_1__1__Impl
	rule__IgnoredHashKeyValue__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IgnoredHashKeyValue__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_1_1_1()); }
(	RULE_SPACE)*
{ after(grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IgnoredHashKeyValue__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IgnoredHashKeyValue__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IgnoredHashKeyValue__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIgnoredHashKeyValueAccess().getEqualsSignGreaterThanSignKeyword_1_1_2()); }

	'=>' 

{ after(grammarAccess.getIgnoredHashKeyValueAccess().getEqualsSignGreaterThanSignKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Method__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getDEF_WORDTerminalRuleCall_0()); }
	RULE_DEF_WORD
{ after(grammarAccess.getMethodAccess().getDEF_WORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getSPACETerminalRuleCall_1()); }
(	RULE_SPACE)*
{ after(grammarAccess.getMethodAccess().getSPACETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameAssignment_2()); }
(rule__Method__NameAssignment_2)
{ after(grammarAccess.getMethodAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getSPACETerminalRuleCall_3()); }
(	RULE_SPACE)*
{ after(grammarAccess.getMethodAccess().getSPACETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getPARENTHESIS_BLOCKTerminalRuleCall_4()); }
(	RULE_PARENTHESIS_BLOCK)?
{ after(grammarAccess.getMethodAccess().getPARENTHESIS_BLOCKTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodName__Group__0__Impl
	rule__MethodName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodNameAccess().getGroup_0()); }
(rule__MethodName__Group_0__0)?
{ after(grammarAccess.getMethodNameAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodName__Group__1__Impl
	rule__MethodName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodNameAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getMethodNameAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodNameAccess().getAlternatives_2()); }
(rule__MethodName__Alternatives_2)?
{ after(grammarAccess.getMethodNameAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MethodName__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodName__Group_0__0__Impl
	rule__MethodName__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodNameAccess().getNamespacedModuleNameParserRuleCall_0_0()); }
	ruleNamespacedModuleName
{ after(grammarAccess.getMethodNameAccess().getNamespacedModuleNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodName__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodName__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodNameAccess().getFullStopKeyword_0_1()); }

	'.' 

{ after(grammarAccess.getMethodNameAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Class__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameNamespacedModuleNameParserRuleCall_2_0()); }
	ruleNamespacedModuleName{ after(grammarAccess.getClassAccess().getNameNamespacedModuleNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__SuperTypeAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getSuperTypeNamespacedModuleNameParserRuleCall_3_3_0()); }
	ruleNamespacedModuleName{ after(grammarAccess.getClassAccess().getSuperTypeNamespacedModuleNameParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ClassElementsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassElementsClassElementParserRuleCall_5_0()); }
	ruleClassElement{ after(grammarAccess.getClassAccess().getClassElementsClassElementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasMany__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasManyAccess().getNameAlternatives_2_0()); }
(rule__HasMany__NameAlternatives_2_0)
{ after(grammarAccess.getHasManyAccess().getNameAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasMany__OptionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasManyAccess().getOptionsHashKeyValueParserRuleCall_4_0()); }
	ruleHashKeyValue{ after(grammarAccess.getHasManyAccess().getOptionsHashKeyValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasOne__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasOneAccess().getNameAlternatives_2_0()); }
(rule__HasOne__NameAlternatives_2_0)
{ after(grammarAccess.getHasOneAccess().getNameAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasOne__OptionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasOneAccess().getOptionsHashKeyValueParserRuleCall_4_0()); }
	ruleHashKeyValue{ after(grammarAccess.getHasOneAccess().getOptionsHashKeyValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasAndBelongsToMany__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasAndBelongsToManyAccess().getNameAlternatives_2_0()); }
(rule__HasAndBelongsToMany__NameAlternatives_2_0)
{ after(grammarAccess.getHasAndBelongsToManyAccess().getNameAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HasAndBelongsToMany__OptionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHasAndBelongsToManyAccess().getOptionsHashKeyValueParserRuleCall_4_0()); }
	ruleHashKeyValue{ after(grammarAccess.getHasAndBelongsToManyAccess().getOptionsHashKeyValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsTo__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToAccess().getNameAlternatives_2_0()); }
(rule__BelongsTo__NameAlternatives_2_0)
{ after(grammarAccess.getBelongsToAccess().getNameAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsTo__OptionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBelongsToAccess().getOptionsHashKeyValueParserRuleCall_4_0()); }
	ruleHashKeyValue{ after(grammarAccess.getBelongsToAccess().getOptionsHashKeyValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__KeyAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getKeyIDTerminalRuleCall_2_0_0_0()); }
	RULE_ID{ after(grammarAccess.getHashKeyValueAccess().getKeyIDTerminalRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__KeyAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getKeyAlternatives_2_1_0_0()); }
(rule__HashKeyValue__KeyAlternatives_2_1_0_0)
{ after(grammarAccess.getHashKeyValueAccess().getKeyAlternatives_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HashKeyValue__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHashKeyValueAccess().getValueAlternatives_4_0()); }
(rule__HashKeyValue__ValueAlternatives_4_0)
{ after(grammarAccess.getHashKeyValueAccess().getValueAlternatives_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameMethodNameParserRuleCall_2_0()); }
	ruleMethodName{ after(grammarAccess.getMethodAccess().getNameMethodNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_COMMA : ',';

RULE_SPACE : (' '|'\f');

RULE_BRACKET_BLOCK : '{' ~(('{'|'}'))* ('{' ~(('{'|'}'))* ('{' ~(('{'|'}'))* '}' ~(('{'|'}'))*)* '}' ~(('{'|'}'))*)* '}';

RULE_ARRAY_BLOCK : '[' ~(('['|']'))* ('[' ~(('['|']'))* ('[' ~(('['|']'))* ']' ~(('['|']'))*)* ']' ~(('['|']'))*)* ']';

RULE_PARENTHESIS_BLOCK : '(' ~(('('|')'))* ('(' ~(('('|')'))* ('(' ~(('('|')'))* ')' ~(('('|')'))*)* ')' ~(('('|')'))*)* ')';

RULE_DO_BLOCK_PARAMETERS : 'do' RULE_SPACE* '|' RULE_ID RULE_SPACE* (RULE_COMMA RULE_SPACE* RULE_ID)* '|';

RULE_BELONGS_TO_WORD : 'belongs_to';

RULE_HAS_MANY_WORD : 'has_many';

RULE_HAS_ONE_WORD : 'has_one';

RULE_HAS_AND_BELONGS_TO_MANY_WORD : 'has_and_belongs_to_many';

RULE_MODULE_WORD : 'module';

RULE_CLASS_WORD : 'class ';

RULE_DEF_WORD : 'def';

RULE_SYMBOL : ':' RULE_ID;

RULE_ID : (RULE_CLASS_WORD|('a'..'z'|'A'..'Z'|'_'|'$'|'@') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'!'|'@'|'?')*);

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|'#' RULE_BRACKET_BLOCK|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '=begin' ( options {greedy=false;} : . )*'=end';

RULE_SL_COMMENT : '#' ( options {greedy=false;} : . )*'\n';

RULE_INT : ('0'..'9')+;

RULE_INT_METHOD : ('0'..'9')+ '.' RULE_ID;

RULE_DECIMAL : ('0'..'9')+ '.' ('0'..'9')+;

RULE_REGEXP : '/' ('\\/'|~(('\\/'|RULE_BS)))* '/' ('i'|'o'|'p')?;

RULE_BS : ('\t'|'\n');

RULE_ANY_OTHER : .;


