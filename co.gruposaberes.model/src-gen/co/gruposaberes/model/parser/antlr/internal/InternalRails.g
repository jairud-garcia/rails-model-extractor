/*
 * generated by Xtext
 */
grammar InternalRails;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package co.gruposaberes.model.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package co.gruposaberes.model.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import co.gruposaberes.model.services.RailsGrammarAccess;

}

@parser::members {

 	private RailsGrammarAccess grammarAccess;
 	
    public InternalRailsParser(TokenStream input, RailsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Class";	
   	}
   	
   	@Override
   	protected RailsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleClass
entryRuleClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassRule()); }
	 iv_ruleClass=ruleClass 
	 { $current=$iv_ruleClass.current; } 
	 EOF 
;

// Rule Class
ruleClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_CLASS_WORD_0=RULE_CLASS_WORD
    { 
    newLeafNode(this_CLASS_WORD_0, grammarAccess.getClassAccess().getCLASS_WORDTerminalRuleCall_0()); 
    }
(this_SPACE_1=RULE_SPACE
    { 
    newLeafNode(this_SPACE_1, grammarAccess.getClassAccess().getSPACETerminalRuleCall_1()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getNameNamespacedModuleNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleNamespacedModuleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"co.gruposaberes.model.Rails.NamespacedModuleName");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_SPACE_3=RULE_SPACE
    { 
    newLeafNode(this_SPACE_3, grammarAccess.getClassAccess().getSPACETerminalRuleCall_3_0()); 
    }
)*	otherlv_4='<' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getClassAccess().getLessThanSignKeyword_3_1());
    }
(this_SPACE_5=RULE_SPACE
    { 
    newLeafNode(this_SPACE_5, grammarAccess.getClassAccess().getSPACETerminalRuleCall_3_2()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getSuperTypeNamespacedModuleNameParserRuleCall_3_3_0()); 
	    }
		lv_superType_6_0=ruleNamespacedModuleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		set(
       			$current, 
       			"superType",
        		lv_superType_6_0, 
        		"co.gruposaberes.model.Rails.NamespacedModuleName");
	        afterParserOrEnumRuleCall();
	    }

)
))?(this_SPACE_7=RULE_SPACE
    { 
    newLeafNode(this_SPACE_7, grammarAccess.getClassAccess().getSPACETerminalRuleCall_4()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getClassElementsClassElementParserRuleCall_5_0()); 
	    }
		lv_classElements_8_0=ruleClassElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		add(
       			$current, 
       			"classElements",
        		lv_classElements_8_0, 
        		"co.gruposaberes.model.Rails.ClassElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleClassElement
entryRuleClassElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassElementRule()); }
	 iv_ruleClassElement=ruleClassElement 
	 { $current=$iv_ruleClassElement.current; } 
	 EOF 
;

// Rule ClassElement
ruleClassElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	RULE_DEF_WORD | 	RULE_HAS_MANY_WORD | 	RULE_HAS_ONE_WORD | 	RULE_HAS_AND_BELONGS_TO_MANY_WORD | 	RULE_BELONGS_TO_WORD | 	RULE_SET_TABLE_NAME)=>(
    { 
        newCompositeNode(grammarAccess.getClassElementAccess().getMethodParserRuleCall_0_0_0()); 
    }
    this_Method_0=ruleMethod
    { 
        $current = $this_Method_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((	RULE_HAS_MANY_WORD | 	RULE_HAS_ONE_WORD | 	RULE_HAS_AND_BELONGS_TO_MANY_WORD | 	RULE_BELONGS_TO_WORD)=>
    { 
        newCompositeNode(grammarAccess.getClassElementAccess().getRelationshipParserRuleCall_0_0_1()); 
    }
    this_Relationship_1=ruleRelationship
    { 
        $current = $this_Relationship_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getClassElementAccess().getTableNameParserRuleCall_0_0_2()); 
    }
    this_TableName_2=ruleTableName
    { 
        $current = $this_TableName_2.current; 
        afterParserOrEnumRuleCall();
    }
))
    |
    { 
        newCompositeNode(grammarAccess.getClassElementAccess().getOperationsChainParserRuleCall_1()); 
    }
    this_OperationsChain_3=ruleOperationsChain
    { 
        $current = $this_OperationsChain_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTableName
entryRuleTableName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableNameRule()); }
	 iv_ruleTableName=ruleTableName 
	 { $current=$iv_ruleTableName.current; } 
	 EOF 
;

// Rule TableName
ruleTableName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_SET_TABLE_NAME_0=RULE_SET_TABLE_NAME
    { 
    newLeafNode(this_SET_TABLE_NAME_0, grammarAccess.getTableNameAccess().getSET_TABLE_NAMETerminalRuleCall_0()); 
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTableNameAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"co.gruposaberes.model.Rails.STRING");
	    }

)
))
;







// Entry rule entryRuleNamespacedModuleName
entryRuleNamespacedModuleName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamespacedModuleNameRule()); } 
	 iv_ruleNamespacedModuleName=ruleNamespacedModuleName 
	 { $current=$iv_ruleNamespacedModuleName.current.getText(); }  
	 EOF 
;

// Rule NamespacedModuleName
ruleNamespacedModuleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getNamespacedModuleNameAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw='::' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamespacedModuleNameAccess().getColonColonKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getNamespacedModuleNameAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleMethodChainCall
entryRuleMethodChainCall returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodChainCallRule()); } 
	 iv_ruleMethodChainCall=ruleMethodChainCall 
	 { $current=$iv_ruleMethodChainCall.current.getText(); }  
	 EOF 
;

// Rule MethodChainCall
ruleMethodChainCall returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_SYMBOL_0=RULE_SYMBOL    {
		$current.merge(this_SYMBOL_0);
    }

    { 
    newLeafNode(this_SYMBOL_0, grammarAccess.getMethodChainCallAccess().getSYMBOLTerminalRuleCall_0_0()); 
    }

    |    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    newLeafNode(this_STRING_1, grammarAccess.getMethodChainCallAccess().getSTRINGTerminalRuleCall_0_1()); 
    }

    |    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getMethodChainCallAccess().getINTTerminalRuleCall_0_2()); 
    }

    |    this_INT_METHOD_3=RULE_INT_METHOD    {
		$current.merge(this_INT_METHOD_3);
    }

    { 
    newLeafNode(this_INT_METHOD_3, grammarAccess.getMethodChainCallAccess().getINT_METHODTerminalRuleCall_0_3()); 
    }

    |    this_PARENTHESIS_BLOCK_4=RULE_PARENTHESIS_BLOCK    {
		$current.merge(this_PARENTHESIS_BLOCK_4);
    }

    { 
    newLeafNode(this_PARENTHESIS_BLOCK_4, grammarAccess.getMethodChainCallAccess().getPARENTHESIS_BLOCKTerminalRuleCall_0_4()); 
    }

    |    this_ARRAY_BLOCK_5=RULE_ARRAY_BLOCK    {
		$current.merge(this_ARRAY_BLOCK_5);
    }

    { 
    newLeafNode(this_ARRAY_BLOCK_5, grammarAccess.getMethodChainCallAccess().getARRAY_BLOCKTerminalRuleCall_0_5()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getMethodChainCallAccess().getNamespacedModuleNameParserRuleCall_0_6()); 
    }
    this_NamespacedModuleName_6=ruleNamespacedModuleName    {
		$current.merge(this_NamespacedModuleName_6);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodChainCallAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_8=RULE_ID    {
		$current.merge(this_ID_8);
    }

    { 
    newLeafNode(this_ID_8, grammarAccess.getMethodChainCallAccess().getIDTerminalRuleCall_1_1()); 
    }
(    this_PARENTHESIS_BLOCK_9=RULE_PARENTHESIS_BLOCK    {
		$current.merge(this_PARENTHESIS_BLOCK_9);
    }

    { 
    newLeafNode(this_PARENTHESIS_BLOCK_9, grammarAccess.getMethodChainCallAccess().getPARENTHESIS_BLOCKTerminalRuleCall_1_2()); 
    }
)?)*(    this_SPACE_10=RULE_SPACE    {
		$current.merge(this_SPACE_10);
    }

    { 
    newLeafNode(this_SPACE_10, grammarAccess.getMethodChainCallAccess().getSPACETerminalRuleCall_2()); 
    }
)*(
    { 
        newCompositeNode(grammarAccess.getMethodChainCallAccess().getMethodCallParametersParserRuleCall_3()); 
    }
    this_MethodCallParameters_11=ruleMethodCallParameters    {
		$current.merge(this_MethodCallParameters_11);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?(( RULE_SPACE)=>    this_SPACE_12=RULE_SPACE    {
		$current.merge(this_SPACE_12);
    }

    { 
    newLeafNode(this_SPACE_12, grammarAccess.getMethodChainCallAccess().getSPACETerminalRuleCall_4()); 
    }
)*(    this_BRACKET_BLOCK_13=RULE_BRACKET_BLOCK    {
		$current.merge(this_BRACKET_BLOCK_13);
    }

    { 
    newLeafNode(this_BRACKET_BLOCK_13, grammarAccess.getMethodChainCallAccess().getBRACKET_BLOCKTerminalRuleCall_5()); 
    }
)?(( RULE_SPACE)=>    this_SPACE_14=RULE_SPACE    {
		$current.merge(this_SPACE_14);
    }

    { 
    newLeafNode(this_SPACE_14, grammarAccess.getMethodChainCallAccess().getSPACETerminalRuleCall_6()); 
    }
)*(    this_DO_BLOCK_PARAMETERS_15=RULE_DO_BLOCK_PARAMETERS    {
		$current.merge(this_DO_BLOCK_PARAMETERS_15);
    }

    { 
    newLeafNode(this_DO_BLOCK_PARAMETERS_15, grammarAccess.getMethodChainCallAccess().getDO_BLOCK_PARAMETERSTerminalRuleCall_7()); 
    }
)?(( RULE_SPACE)=>    this_SPACE_16=RULE_SPACE    {
		$current.merge(this_SPACE_16);
    }

    { 
    newLeafNode(this_SPACE_16, grammarAccess.getMethodChainCallAccess().getSPACETerminalRuleCall_8()); 
    }
)*(( RULE_LF)=>    this_LF_17=RULE_LF    {
		$current.merge(this_LF_17);
    }

    { 
    newLeafNode(this_LF_17, grammarAccess.getMethodChainCallAccess().getLFTerminalRuleCall_9()); 
    }
)?)
    ;





// Entry rule entryRuleMethodCallParameters
entryRuleMethodCallParameters returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodCallParametersRule()); } 
	 iv_ruleMethodCallParameters=ruleMethodCallParameters 
	 { $current=$iv_ruleMethodCallParameters.current.getText(); }  
	 EOF 
;

// Rule MethodCallParameters
ruleMethodCallParameters returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_PARENTHESIS_BLOCK_0=RULE_PARENTHESIS_BLOCK    {
		$current.merge(this_PARENTHESIS_BLOCK_0);
    }

    { 
    newLeafNode(this_PARENTHESIS_BLOCK_0, grammarAccess.getMethodCallParametersAccess().getPARENTHESIS_BLOCKTerminalRuleCall_0()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getMethodCallParametersAccess().getExpressionsSeparatedByCommasParserRuleCall_1()); 
    }
    this_ExpressionsSeparatedByCommas_1=ruleExpressionsSeparatedByCommas    {
		$current.merge(this_ExpressionsSeparatedByCommas_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleExpressionsSeparatedByCommas
entryRuleExpressionsSeparatedByCommas returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionsSeparatedByCommasRule()); } 
	 iv_ruleExpressionsSeparatedByCommas=ruleExpressionsSeparatedByCommas 
	 { $current=$iv_ruleExpressionsSeparatedByCommas.current.getText(); }  
	 EOF 
;

// Rule ExpressionsSeparatedByCommas
ruleExpressionsSeparatedByCommas returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionsSeparatedByCommasAccess().getExpressionWithOutBracketParserRuleCall_0()); 
    }
    this_ExpressionWithOutBracket_0=ruleExpressionWithOutBracket    {
		$current.merge(this_ExpressionWithOutBracket_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
((    this_SPACE_1=RULE_SPACE    {
		$current.merge(this_SPACE_1);
    }

    { 
    newLeafNode(this_SPACE_1, grammarAccess.getExpressionsSeparatedByCommasAccess().getSPACETerminalRuleCall_1_0()); 
    }
)*    this_COMMA_2=RULE_COMMA    {
		$current.merge(this_COMMA_2);
    }

    { 
    newLeafNode(this_COMMA_2, grammarAccess.getExpressionsSeparatedByCommasAccess().getCOMMATerminalRuleCall_1_1()); 
    }
((    this_SPACE_3=RULE_SPACE    {
		$current.merge(this_SPACE_3);
    }

    { 
    newLeafNode(this_SPACE_3, grammarAccess.getExpressionsSeparatedByCommasAccess().getSPACETerminalRuleCall_1_2_0()); 
    }
)*    this_LF_4=RULE_LF    {
		$current.merge(this_LF_4);
    }

    { 
    newLeafNode(this_LF_4, grammarAccess.getExpressionsSeparatedByCommasAccess().getLFTerminalRuleCall_1_2_1()); 
    }
)?(    this_SPACE_5=RULE_SPACE    {
		$current.merge(this_SPACE_5);
    }

    { 
    newLeafNode(this_SPACE_5, grammarAccess.getExpressionsSeparatedByCommasAccess().getSPACETerminalRuleCall_1_3()); 
    }
)*
    { 
        newCompositeNode(grammarAccess.getExpressionsSeparatedByCommasAccess().getExpressionParserRuleCall_1_4()); 
    }
    this_Expression_6=ruleExpression    {
		$current.merge(this_Expression_6);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleExpressionWithOutBracket
entryRuleExpressionWithOutBracket returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionWithOutBracketRule()); } 
	 iv_ruleExpressionWithOutBracket=ruleExpressionWithOutBracket 
	 { $current=$iv_ruleExpressionWithOutBracket.current.getText(); }  
	 EOF 
;

// Rule ExpressionWithOutBracket
ruleExpressionWithOutBracket returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_SYMBOL_0=RULE_SYMBOL    {
		$current.merge(this_SYMBOL_0);
    }

    { 
    newLeafNode(this_SYMBOL_0, grammarAccess.getExpressionWithOutBracketAccess().getSYMBOLTerminalRuleCall_0()); 
    }

    |    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    newLeafNode(this_STRING_1, grammarAccess.getExpressionWithOutBracketAccess().getSTRINGTerminalRuleCall_1()); 
    }

    |    this_ARRAY_BLOCK_2=RULE_ARRAY_BLOCK    {
		$current.merge(this_ARRAY_BLOCK_2);
    }

    { 
    newLeafNode(this_ARRAY_BLOCK_2, grammarAccess.getExpressionWithOutBracketAccess().getARRAY_BLOCKTerminalRuleCall_2()); 
    }

    |    this_PARENTHESIS_BLOCK_3=RULE_PARENTHESIS_BLOCK    {
		$current.merge(this_PARENTHESIS_BLOCK_3);
    }

    { 
    newLeafNode(this_PARENTHESIS_BLOCK_3, grammarAccess.getExpressionWithOutBracketAccess().getPARENTHESIS_BLOCKTerminalRuleCall_3()); 
    }

    |    this_DECIMAL_4=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_4);
    }

    { 
    newLeafNode(this_DECIMAL_4, grammarAccess.getExpressionWithOutBracketAccess().getDECIMALTerminalRuleCall_4()); 
    }

    |    this_INT_5=RULE_INT    {
		$current.merge(this_INT_5);
    }

    { 
    newLeafNode(this_INT_5, grammarAccess.getExpressionWithOutBracketAccess().getINTTerminalRuleCall_5()); 
    }

    |    this_REGEXP_6=RULE_REGEXP    {
		$current.merge(this_REGEXP_6);
    }

    { 
    newLeafNode(this_REGEXP_6, grammarAccess.getExpressionWithOutBracketAccess().getREGEXPTerminalRuleCall_6()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionWithOutBracketAccess().getMethodChainCallParserRuleCall_7()); 
    }
    this_MethodChainCall_7=ruleMethodChainCall    {
		$current.merge(this_MethodChainCall_7);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionWithOutBracketAccess().getIgnoredHashKeyValueParserRuleCall_8()); 
    }
    this_IgnoredHashKeyValue_8=ruleIgnoredHashKeyValue    {
		$current.merge(this_IgnoredHashKeyValue_8);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleExpression
entryRuleExpression returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); } 
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current.getText(); }  
	 EOF 
;

// Rule Expression
ruleExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getExpressionWithOutBracketParserRuleCall_0()); 
    }
    this_ExpressionWithOutBracket_0=ruleExpressionWithOutBracket    {
		$current.merge(this_ExpressionWithOutBracket_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_BRACKET_BLOCK_1=RULE_BRACKET_BLOCK    {
		$current.merge(this_BRACKET_BLOCK_1);
    }

    { 
    newLeafNode(this_BRACKET_BLOCK_1, grammarAccess.getExpressionAccess().getBRACKET_BLOCKTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleRelationship
entryRuleRelationship returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationshipRule()); }
	 iv_ruleRelationship=ruleRelationship 
	 { $current=$iv_ruleRelationship.current; } 
	 EOF 
;

// Rule Relationship
ruleRelationship returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_relationType_0_1=RULE_HAS_MANY_WORD
		{
			newLeafNode(lv_relationType_0_1, grammarAccess.getRelationshipAccess().getRelationTypeHAS_MANY_WORDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationshipRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"relationType",
        		lv_relationType_0_1, 
        		"co.gruposaberes.model.Rails.HAS_MANY_WORD");
	    }

    |		lv_relationType_0_2=RULE_HAS_ONE_WORD
		{
			newLeafNode(lv_relationType_0_2, grammarAccess.getRelationshipAccess().getRelationTypeHAS_ONE_WORDTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationshipRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"relationType",
        		lv_relationType_0_2, 
        		"co.gruposaberes.model.Rails.HAS_ONE_WORD");
	    }

    |		lv_relationType_0_3=RULE_HAS_AND_BELONGS_TO_MANY_WORD
		{
			newLeafNode(lv_relationType_0_3, grammarAccess.getRelationshipAccess().getRelationTypeHAS_AND_BELONGS_TO_MANY_WORDTerminalRuleCall_0_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationshipRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"relationType",
        		lv_relationType_0_3, 
        		"co.gruposaberes.model.Rails.HAS_AND_BELONGS_TO_MANY_WORD");
	    }

    |		lv_relationType_0_4=RULE_BELONGS_TO_WORD
		{
			newLeafNode(lv_relationType_0_4, grammarAccess.getRelationshipAccess().getRelationTypeBELONGS_TO_WORDTerminalRuleCall_0_0_3()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationshipRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"relationType",
        		lv_relationType_0_4, 
        		"co.gruposaberes.model.Rails.BELONGS_TO_WORD");
	    }

)

)
)(this_SPACE_1=RULE_SPACE
    { 
    newLeafNode(this_SPACE_1, grammarAccess.getRelationshipAccess().getSPACETerminalRuleCall_1()); 
    }
)*(
(
(
		lv_name_2_1=RULE_SYMBOL
		{
			newLeafNode(lv_name_2_1, grammarAccess.getRelationshipAccess().getNameSYMBOLTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationshipRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_1, 
        		"co.gruposaberes.model.Rails.SYMBOL");
	    }

    |		lv_name_2_2=RULE_STRING
		{
			newLeafNode(lv_name_2_2, grammarAccess.getRelationshipAccess().getNameSTRINGTerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationshipRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_2, 
        		"co.gruposaberes.model.Rails.STRING");
	    }

)

)
)(this_SPACE_3=RULE_SPACE
    { 
    newLeafNode(this_SPACE_3, grammarAccess.getRelationshipAccess().getSPACETerminalRuleCall_3()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationshipAccess().getOptionsHashKeyValueParserRuleCall_4_0()); 
	    }
		lv_options_4_0=ruleHashKeyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationshipRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_4_0, 
        		"co.gruposaberes.model.Rails.HashKeyValue");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;













// Entry rule entryRuleHashKeyValue
entryRuleHashKeyValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHashKeyValueRule()); }
	 iv_ruleHashKeyValue=ruleHashKeyValue 
	 { $current=$iv_ruleHashKeyValue.current; } 
	 EOF 
;

// Rule HashKeyValue
ruleHashKeyValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_COMMA_0=RULE_COMMA
    { 
    newLeafNode(this_COMMA_0, grammarAccess.getHashKeyValueAccess().getCOMMATerminalRuleCall_0()); 
    }
(this_SPACE_1=RULE_SPACE
    { 
    newLeafNode(this_SPACE_1, grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_1()); 
    }
)*(this_LF_2=RULE_LF
    { 
    newLeafNode(this_LF_2, grammarAccess.getHashKeyValueAccess().getLFTerminalRuleCall_2_0()); 
    }
(this_SPACE_3=RULE_SPACE
    { 
    newLeafNode(this_SPACE_3, grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_2_1()); 
    }
)*)?(((
(
		lv_key_4_0=RULE_ID
		{
			newLeafNode(lv_key_4_0, grammarAccess.getHashKeyValueAccess().getKeyIDTerminalRuleCall_3_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_4_0, 
        		"co.gruposaberes.model.Rails.ID");
	    }

)
)	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getHashKeyValueAccess().getColonKeyword_3_0_1());
    }
)
    |((
(
(
		lv_key_6_1=RULE_SYMBOL
		{
			newLeafNode(lv_key_6_1, grammarAccess.getHashKeyValueAccess().getKeySYMBOLTerminalRuleCall_3_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_6_1, 
        		"co.gruposaberes.model.Rails.SYMBOL");
	    }

    |		lv_key_6_2=RULE_STRING
		{
			newLeafNode(lv_key_6_2, grammarAccess.getHashKeyValueAccess().getKeySTRINGTerminalRuleCall_3_1_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_6_2, 
        		"co.gruposaberes.model.Rails.STRING");
	    }

)

)
)(this_SPACE_7=RULE_SPACE
    { 
    newLeafNode(this_SPACE_7, grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_3_1_1()); 
    }
)*	otherlv_8='=>' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getHashKeyValueAccess().getEqualsSignGreaterThanSignKeyword_3_1_2());
    }
))(this_SPACE_9=RULE_SPACE
    { 
    newLeafNode(this_SPACE_9, grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_4()); 
    }
)*(
(
(
		lv_value_10_1=RULE_SYMBOL
		{
			newLeafNode(lv_value_10_1, grammarAccess.getHashKeyValueAccess().getValueSYMBOLTerminalRuleCall_5_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_10_1, 
        		"co.gruposaberes.model.Rails.SYMBOL");
	    }

    |		lv_value_10_2=RULE_STRING
		{
			newLeafNode(lv_value_10_2, grammarAccess.getHashKeyValueAccess().getValueSTRINGTerminalRuleCall_5_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_10_2, 
        		"co.gruposaberes.model.Rails.STRING");
	    }

    |		lv_value_10_3=RULE_BRACKET_BLOCK
		{
			newLeafNode(lv_value_10_3, grammarAccess.getHashKeyValueAccess().getValueBRACKET_BLOCKTerminalRuleCall_5_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_10_3, 
        		"co.gruposaberes.model.Rails.BRACKET_BLOCK");
	    }

    |		lv_value_10_4=RULE_ARRAY_BLOCK
		{
			newLeafNode(lv_value_10_4, grammarAccess.getHashKeyValueAccess().getValueARRAY_BLOCKTerminalRuleCall_5_0_3()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_10_4, 
        		"co.gruposaberes.model.Rails.ARRAY_BLOCK");
	    }

    |		lv_value_10_5=RULE_DECIMAL
		{
			newLeafNode(lv_value_10_5, grammarAccess.getHashKeyValueAccess().getValueDECIMALTerminalRuleCall_5_0_4()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_10_5, 
        		"co.gruposaberes.model.Rails.DECIMAL");
	    }

    |		lv_value_10_6=RULE_INT
		{
			newLeafNode(lv_value_10_6, grammarAccess.getHashKeyValueAccess().getValueINTTerminalRuleCall_5_0_5()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_10_6, 
        		"co.gruposaberes.model.Rails.INT");
	    }

    |		lv_value_10_7=RULE_INT_METHOD
		{
			newLeafNode(lv_value_10_7, grammarAccess.getHashKeyValueAccess().getValueINT_METHODTerminalRuleCall_5_0_6()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_10_7, 
        		"co.gruposaberes.model.Rails.INT_METHOD");
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getHashKeyValueAccess().getValueMethodChainCallParserRuleCall_5_0_7()); 
	    }
		lv_value_10_8=ruleMethodChainCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHashKeyValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_10_8, 
        		"co.gruposaberes.model.Rails.MethodChainCall");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(this_SPACE_11=RULE_SPACE
    { 
    newLeafNode(this_SPACE_11, grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_6()); 
    }
)*)
;





// Entry rule entryRuleIgnoredHashKeyValue
entryRuleIgnoredHashKeyValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIgnoredHashKeyValueRule()); } 
	 iv_ruleIgnoredHashKeyValue=ruleIgnoredHashKeyValue 
	 { $current=$iv_ruleIgnoredHashKeyValue.current.getText(); }  
	 EOF 
;

// Rule IgnoredHashKeyValue
ruleIgnoredHashKeyValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_SPACE_0=RULE_SPACE    {
		$current.merge(this_SPACE_0);
    }

    { 
    newLeafNode(this_SPACE_0, grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_0()); 
    }
)*((    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getIgnoredHashKeyValueAccess().getIDTerminalRuleCall_1_0_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIgnoredHashKeyValueAccess().getColonKeyword_1_0_1()); 
    }
)
    |((    this_SYMBOL_3=RULE_SYMBOL    {
		$current.merge(this_SYMBOL_3);
    }

    { 
    newLeafNode(this_SYMBOL_3, grammarAccess.getIgnoredHashKeyValueAccess().getSYMBOLTerminalRuleCall_1_1_0_0()); 
    }

    |    this_STRING_4=RULE_STRING    {
		$current.merge(this_STRING_4);
    }

    { 
    newLeafNode(this_STRING_4, grammarAccess.getIgnoredHashKeyValueAccess().getSTRINGTerminalRuleCall_1_1_0_1()); 
    }
)(    this_SPACE_5=RULE_SPACE    {
		$current.merge(this_SPACE_5);
    }

    { 
    newLeafNode(this_SPACE_5, grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_1_1_1()); 
    }
)*
	kw='=>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIgnoredHashKeyValueAccess().getEqualsSignGreaterThanSignKeyword_1_1_2()); 
    }
))(    this_SPACE_7=RULE_SPACE    {
		$current.merge(this_SPACE_7);
    }

    { 
    newLeafNode(this_SPACE_7, grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_2()); 
    }
)*(    this_SYMBOL_8=RULE_SYMBOL    {
		$current.merge(this_SYMBOL_8);
    }

    { 
    newLeafNode(this_SYMBOL_8, grammarAccess.getIgnoredHashKeyValueAccess().getSYMBOLTerminalRuleCall_3_0()); 
    }

    |    this_STRING_9=RULE_STRING    {
		$current.merge(this_STRING_9);
    }

    { 
    newLeafNode(this_STRING_9, grammarAccess.getIgnoredHashKeyValueAccess().getSTRINGTerminalRuleCall_3_1()); 
    }

    |    this_BRACKET_BLOCK_10=RULE_BRACKET_BLOCK    {
		$current.merge(this_BRACKET_BLOCK_10);
    }

    { 
    newLeafNode(this_BRACKET_BLOCK_10, grammarAccess.getIgnoredHashKeyValueAccess().getBRACKET_BLOCKTerminalRuleCall_3_2()); 
    }

    |    this_ARRAY_BLOCK_11=RULE_ARRAY_BLOCK    {
		$current.merge(this_ARRAY_BLOCK_11);
    }

    { 
    newLeafNode(this_ARRAY_BLOCK_11, grammarAccess.getIgnoredHashKeyValueAccess().getARRAY_BLOCKTerminalRuleCall_3_3()); 
    }

    |    this_DECIMAL_12=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_12);
    }

    { 
    newLeafNode(this_DECIMAL_12, grammarAccess.getIgnoredHashKeyValueAccess().getDECIMALTerminalRuleCall_3_4()); 
    }

    |    this_INT_13=RULE_INT    {
		$current.merge(this_INT_13);
    }

    { 
    newLeafNode(this_INT_13, grammarAccess.getIgnoredHashKeyValueAccess().getINTTerminalRuleCall_3_5()); 
    }

    |    this_INT_METHOD_14=RULE_INT_METHOD    {
		$current.merge(this_INT_METHOD_14);
    }

    { 
    newLeafNode(this_INT_METHOD_14, grammarAccess.getIgnoredHashKeyValueAccess().getINT_METHODTerminalRuleCall_3_6()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getIgnoredHashKeyValueAccess().getMethodChainCallParserRuleCall_3_7()); 
    }
    this_MethodChainCall_15=ruleMethodChainCall    {
		$current.merge(this_MethodChainCall_15);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_REGEXP_16=RULE_REGEXP    {
		$current.merge(this_REGEXP_16);
    }

    { 
    newLeafNode(this_REGEXP_16, grammarAccess.getIgnoredHashKeyValueAccess().getREGEXPTerminalRuleCall_3_8()); 
    }
)(    this_SPACE_17=RULE_SPACE    {
		$current.merge(this_SPACE_17);
    }

    { 
    newLeafNode(this_SPACE_17, grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_4()); 
    }
)*)
    ;





// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	 iv_ruleMethod=ruleMethod 
	 { $current=$iv_ruleMethod.current; } 
	 EOF 
;

// Rule Method
ruleMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_DEF_WORD_0=RULE_DEF_WORD
    { 
    newLeafNode(this_DEF_WORD_0, grammarAccess.getMethodAccess().getDEF_WORDTerminalRuleCall_0()); 
    }
(this_SPACE_1=RULE_SPACE
    { 
    newLeafNode(this_SPACE_1, grammarAccess.getMethodAccess().getSPACETerminalRuleCall_1()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getNameMethodNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleMethodName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"co.gruposaberes.model.Rails.MethodName");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_SPACE_3=RULE_SPACE
    { 
    newLeafNode(this_SPACE_3, grammarAccess.getMethodAccess().getSPACETerminalRuleCall_3()); 
    }
)*(this_PARENTHESIS_BLOCK_4=RULE_PARENTHESIS_BLOCK
    { 
    newLeafNode(this_PARENTHESIS_BLOCK_4, grammarAccess.getMethodAccess().getPARENTHESIS_BLOCKTerminalRuleCall_4()); 
    }
)?(this_SPACE_5=RULE_SPACE
    { 
    newLeafNode(this_SPACE_5, grammarAccess.getMethodAccess().getSPACETerminalRuleCall_5()); 
    }
)*(this_LF_6=RULE_LF
    { 
    newLeafNode(this_LF_6, grammarAccess.getMethodAccess().getLFTerminalRuleCall_6()); 
    }
)?)
;





// Entry rule entryRuleMethodName
entryRuleMethodName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodNameRule()); } 
	 iv_ruleMethodName=ruleMethodName 
	 { $current=$iv_ruleMethodName.current.getText(); }  
	 EOF 
;

// Rule MethodName
ruleMethodName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getMethodNameAccess().getNamespacedModuleNameParserRuleCall_0_0()); 
    }
    this_NamespacedModuleName_0=ruleNamespacedModuleName    {
		$current.merge(this_NamespacedModuleName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodNameAccess().getFullStopKeyword_0_1()); 
    }
)?    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getMethodNameAccess().getIDTerminalRuleCall_1()); 
    }
(
	kw='?' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodNameAccess().getQuestionMarkKeyword_2_0()); 
    }

    |
	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodNameAccess().getEqualsSignKeyword_2_1()); 
    }
)?)
    ;





// Entry rule entryRuleOperationsChain
entryRuleOperationsChain returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationsChainRule()); }
	 iv_ruleOperationsChain=ruleOperationsChain 
	 { $current=$iv_ruleOperationsChain.current; } 
	 EOF 
;

// Rule OperationsChain
ruleOperationsChain returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOperationsChainAccess().getNameMethodChainCallParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleMethodChainCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationsChainRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"co.gruposaberes.model.Rails.MethodChainCall");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getOperationsChainAccess().getOperatorsOperatorRuleParserRuleCall_1_0_0()); 
	    }
		lv_operators_1_0=ruleOperatorRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationsChainRule());
	        }
       		add(
       			$current, 
       			"operators",
        		lv_operators_1_0, 
        		"co.gruposaberes.model.Rails.OperatorRule");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
(
		lv_operants_2_1=RULE_BRACKET_BLOCK
		{
			newLeafNode(lv_operants_2_1, grammarAccess.getOperationsChainAccess().getOperantsBRACKET_BLOCKTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationsChainRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"operants",
        		lv_operants_2_1, 
        		"co.gruposaberes.model.Rails.BRACKET_BLOCK");
	    }

    |		lv_operants_2_2=RULE_DECIMAL
		{
			newLeafNode(lv_operants_2_2, grammarAccess.getOperationsChainAccess().getOperantsDECIMALTerminalRuleCall_1_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationsChainRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"operants",
        		lv_operants_2_2, 
        		"co.gruposaberes.model.Rails.DECIMAL");
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getOperationsChainAccess().getOperantsMethodChainCallParserRuleCall_1_1_0_2()); 
	    }
		lv_operants_2_3=ruleMethodChainCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationsChainRule());
	        }
       		add(
       			$current, 
       			"operants",
        		lv_operants_2_3, 
        		"co.gruposaberes.model.Rails.MethodChainCall");
	        afterParserOrEnumRuleCall();
	    }

    |		lv_operants_2_4=RULE_REGEXP
		{
			newLeafNode(lv_operants_2_4, grammarAccess.getOperationsChainAccess().getOperantsREGEXPTerminalRuleCall_1_1_0_3()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationsChainRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"operants",
        		lv_operants_2_4, 
        		"co.gruposaberes.model.Rails.REGEXP");
	    }

)

)
))*)
;





// Entry rule entryRuleOperatorRule
entryRuleOperatorRule returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorRuleRule()); } 
	 iv_ruleOperatorRule=ruleOperatorRule 
	 { $current=$iv_ruleOperatorRule.current.getText(); }  
	 EOF 
;

// Rule OperatorRule
ruleOperatorRule returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw=': ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getColonSpaceKeyword_0_0()); 
    }

    |
	kw='?' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getQuestionMarkKeyword_0_1()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getLessThanSignEqualsSignKeyword_0_2()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getLessThanSignKeyword_0_3()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getPlusSignKeyword_0_4()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getHyphenMinusKeyword_0_5()); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getAsteriskKeyword_0_6()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getSolidusKeyword_0_7()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getPercentSignKeyword_0_8()); 
    }

    |
	kw='**' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getAsteriskAsteriskKeyword_0_9()); 
    }

    |
	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getEqualsSignKeyword_0_10()); 
    }

    |
	kw='~' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getTildeKeyword_0_11()); 
    }

    |
	kw='|' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getVerticalLineKeyword_0_12()); 
    }

    |
	kw='||' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getVerticalLineVerticalLineKeyword_0_13()); 
    }

    |
	kw='&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getAmpersandKeyword_0_14()); 
    }

    |
	kw='&&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getAmpersandAmpersandKeyword_0_15()); 
    }

    |
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getEqualsSignEqualsSignKeyword_0_16()); 
    }

    |
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getExclamationMarkKeyword_0_17()); 
    }

    |
	kw='<<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getLessThanSignLessThanSignKeyword_0_18()); 
    }

    |
	kw='<=>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_0_19()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getGreaterThanSignKeyword_0_20()); 
    }

    |
	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getFullStopFullStopKeyword_0_21()); 
    }

    |
	kw='...' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getFullStopFullStopFullStopKeyword_0_22()); 
    }
)(
	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorRuleAccess().getEqualsSignKeyword_1()); 
    }
)?)
    ;





RULE_COMMA : ',';

RULE_SPACE : (' '|'\t');

fragment RULE_NOT_BRACKET_SEQ : ~(('{'|'}'))*;

fragment RULE_FIRST_LEVEL_BRACKET_BLOCK : '{' RULE_NOT_BRACKET_SEQ '}' RULE_NOT_BRACKET_SEQ;

fragment RULE_SECOND_LEVEL_BRACKET_BLOCK : '{' RULE_NOT_BRACKET_SEQ RULE_FIRST_LEVEL_BRACKET_BLOCK* '}' RULE_NOT_BRACKET_SEQ;

fragment RULE_THIRD_LEVEL_BRACKET_BLOCK : '{' RULE_NOT_BRACKET_SEQ RULE_SECOND_LEVEL_BRACKET_BLOCK* '}' RULE_NOT_BRACKET_SEQ;

RULE_BRACKET_BLOCK : '{' RULE_NOT_BRACKET_SEQ RULE_THIRD_LEVEL_BRACKET_BLOCK* '}';

fragment RULE_NOT_ARRAY_SEQ : ~(('['|']'))*;

fragment RULE_FIRST_LEVEL_ARRAY_BLOCK : '[' RULE_NOT_ARRAY_SEQ ']' RULE_NOT_ARRAY_SEQ;

fragment RULE_SECOND_LEVEL_ARRAY_BLOCK : '[' RULE_NOT_ARRAY_SEQ RULE_FIRST_LEVEL_ARRAY_BLOCK* ']' RULE_NOT_ARRAY_SEQ;

fragment RULE_THIRD_LEVEL_ARRAY_BLOCK : '[' RULE_NOT_ARRAY_SEQ RULE_SECOND_LEVEL_ARRAY_BLOCK* ']' RULE_NOT_ARRAY_SEQ;

RULE_ARRAY_BLOCK : '[' RULE_NOT_ARRAY_SEQ RULE_THIRD_LEVEL_ARRAY_BLOCK* ']';

fragment RULE_NOT_PARENTHESIS_SEQ : ~(('('|')'))*;

fragment RULE_FIRST_LEVEL_PARENTHESIS_BLOCK : '(' RULE_NOT_PARENTHESIS_SEQ ')' RULE_NOT_PARENTHESIS_SEQ;

fragment RULE_SECOND_LEVEL_PARENTHESIS_BLOCK : '(' RULE_NOT_PARENTHESIS_SEQ RULE_FIRST_LEVEL_PARENTHESIS_BLOCK* ')' RULE_NOT_PARENTHESIS_SEQ;

fragment RULE_THIRD_LEVEL_PARENTHESIS_BLOCK : '(' RULE_NOT_PARENTHESIS_SEQ RULE_SECOND_LEVEL_PARENTHESIS_BLOCK* ')' RULE_NOT_PARENTHESIS_SEQ;

RULE_PARENTHESIS_BLOCK : '(' RULE_NOT_PARENTHESIS_SEQ RULE_THIRD_LEVEL_PARENTHESIS_BLOCK* ')';

RULE_DO_BLOCK_PARAMETERS : 'do' RULE_SPACE* '|' RULE_ID RULE_SPACE* (RULE_COMMA RULE_SPACE* RULE_ID)* '|';

RULE_BELONGS_TO_WORD : 'belongs_to';

RULE_HAS_MANY_WORD : 'has_many';

RULE_HAS_ONE_WORD : 'has_one';

RULE_HAS_AND_BELONGS_TO_MANY_WORD : 'has_and_belongs_to_many';

RULE_SET_TABLE_NAME : 'set_table_name';

RULE_MODULE_WORD : 'module';

RULE_CLASS_WORD : 'class ';

RULE_DEF_WORD : 'def';

RULE_SYMBOL : ':' RULE_ID;

RULE_ID : (RULE_CLASS_WORD|('a'..'z'|'A'..'Z'|'_'|'$'|'@') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'!'|'@'|'?')*);

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|'#' RULE_BRACKET_BLOCK|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '=begin' ( options {greedy=false;} : . )*'=end';

RULE_SL_COMMENT : '#' ( options {greedy=false;} : . )*'\n';

RULE_INT : ('0'..'9')+;

RULE_INT_METHOD : ('0'..'9')+ '.' RULE_ID;

RULE_DECIMAL : ('0'..'9')+ '.' ('0'..'9')+;

RULE_REGEXP : '/' ('\\/'|~(('\\/'|RULE_LF)))* '/' ('i'|'o'|'p')?;

RULE_LF : '\n';

RULE_CR : '\r';

RULE_REQUIRE : 'require' RULE_SPACE* RULE_STRING;

RULE_ANY_OTHER : .;


