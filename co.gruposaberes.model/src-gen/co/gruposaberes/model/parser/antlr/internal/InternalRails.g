/*
 * generated by Xtext
 */
grammar InternalRails;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package co.gruposaberes.model.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package co.gruposaberes.model.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import co.gruposaberes.model.services.RailsGrammarAccess;

}

@parser::members {

 	private RailsGrammarAccess grammarAccess;
 	
    public InternalRailsParser(TokenStream input, RailsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Class";	
   	}
   	
   	@Override
   	protected RailsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleClass
entryRuleClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassRule()); }
	 iv_ruleClass=ruleClass 
	 { $current=$iv_ruleClass.current; } 
	 EOF 
;

// Rule Class
ruleClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_CLASS_WORD_0=RULE_CLASS_WORD
    { 
    newLeafNode(this_CLASS_WORD_0, grammarAccess.getClassAccess().getCLASS_WORDTerminalRuleCall_0()); 
    }
(this_SPACE_1=RULE_SPACE
    { 
    newLeafNode(this_SPACE_1, grammarAccess.getClassAccess().getSPACETerminalRuleCall_1()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getNameNamespacedModuleNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleNamespacedModuleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"co.gruposaberes.model.Rails.NamespacedModuleName");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_SPACE_3=RULE_SPACE
    { 
    newLeafNode(this_SPACE_3, grammarAccess.getClassAccess().getSPACETerminalRuleCall_3_0()); 
    }
)*	otherlv_4='<' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getClassAccess().getLessThanSignKeyword_3_1());
    }
(this_SPACE_5=RULE_SPACE
    { 
    newLeafNode(this_SPACE_5, grammarAccess.getClassAccess().getSPACETerminalRuleCall_3_2()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getSuperTypeNamespacedModuleNameParserRuleCall_3_3_0()); 
	    }
		lv_superType_6_0=ruleNamespacedModuleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		set(
       			$current, 
       			"superType",
        		lv_superType_6_0, 
        		"co.gruposaberes.model.Rails.NamespacedModuleName");
	        afterParserOrEnumRuleCall();
	    }

)
))?(this_SPACE_7=RULE_SPACE
    { 
    newLeafNode(this_SPACE_7, grammarAccess.getClassAccess().getSPACETerminalRuleCall_4()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getClassElementsClassElementParserRuleCall_5_0()); 
	    }
		lv_classElements_8_0=ruleClassElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		add(
       			$current, 
       			"classElements",
        		lv_classElements_8_0, 
        		"co.gruposaberes.model.Rails.ClassElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleClassElement
entryRuleClassElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassElementRule()); }
	 iv_ruleClassElement=ruleClassElement 
	 { $current=$iv_ruleClassElement.current; } 
	 EOF 
;

// Rule ClassElement
ruleClassElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getClassElementAccess().getMethodParserRuleCall_0()); 
    }
    this_Method_0=ruleMethod
    { 
        $current = $this_Method_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getClassElementAccess().getRelationshipParserRuleCall_1()); 
    }
    this_Relationship_1=ruleRelationship
    { 
        $current = $this_Relationship_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getClassElementAccess().getOperationsChainParserRuleCall_2()); 
    }
ruleOperationsChain
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNamespacedModuleName
entryRuleNamespacedModuleName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamespacedModuleNameRule()); } 
	 iv_ruleNamespacedModuleName=ruleNamespacedModuleName 
	 { $current=$iv_ruleNamespacedModuleName.current.getText(); }  
	 EOF 
;

// Rule NamespacedModuleName
ruleNamespacedModuleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getNamespacedModuleNameAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw='::' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamespacedModuleNameAccess().getColonColonKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getNamespacedModuleNameAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleMethodChainCall
entryRuleMethodChainCall returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodChainCallRule()); } 
	 iv_ruleMethodChainCall=ruleMethodChainCall 
	 { $current=$iv_ruleMethodChainCall.current.getText(); }  
	 EOF 
;

// Rule MethodChainCall
ruleMethodChainCall returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMethodChainCallAccess().getNamespacedModuleNameParserRuleCall_0()); 
    }
    this_NamespacedModuleName_0=ruleNamespacedModuleName    {
		$current.merge(this_NamespacedModuleName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodChainCallAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getMethodChainCallAccess().getIDTerminalRuleCall_1_1()); 
    }
)*(    this_SPACE_3=RULE_SPACE    {
		$current.merge(this_SPACE_3);
    }

    { 
    newLeafNode(this_SPACE_3, grammarAccess.getMethodChainCallAccess().getSPACETerminalRuleCall_2()); 
    }
)*(
    { 
        newCompositeNode(grammarAccess.getMethodChainCallAccess().getMethodCallParametersParserRuleCall_3()); 
    }
    this_MethodCallParameters_4=ruleMethodCallParameters    {
		$current.merge(this_MethodCallParameters_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?(( RULE_SPACE)=>    this_SPACE_5=RULE_SPACE    {
		$current.merge(this_SPACE_5);
    }

    { 
    newLeafNode(this_SPACE_5, grammarAccess.getMethodChainCallAccess().getSPACETerminalRuleCall_4()); 
    }
)*(
    { 
        newCompositeNode(grammarAccess.getMethodChainCallAccess().getBracketBlockParserRuleCall_5()); 
    }
    this_BracketBlock_6=ruleBracketBlock    {
		$current.merge(this_BracketBlock_6);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?)
    ;





// Entry rule entryRuleMethodCallParameters
entryRuleMethodCallParameters returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodCallParametersRule()); } 
	 iv_ruleMethodCallParameters=ruleMethodCallParameters 
	 { $current=$iv_ruleMethodCallParameters.current.getText(); }  
	 EOF 
;

// Rule MethodCallParameters
ruleMethodCallParameters returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_PARENTHESIS_BLOCK_0=RULE_PARENTHESIS_BLOCK    {
		$current.merge(this_PARENTHESIS_BLOCK_0);
    }

    { 
    newLeafNode(this_PARENTHESIS_BLOCK_0, grammarAccess.getMethodCallParametersAccess().getPARENTHESIS_BLOCKTerminalRuleCall_0()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getMethodCallParametersAccess().getExpressionsSeparatedByCommasParserRuleCall_1()); 
    }
    this_ExpressionsSeparatedByCommas_1=ruleExpressionsSeparatedByCommas    {
		$current.merge(this_ExpressionsSeparatedByCommas_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleExpressionsSeparatedByCommas
entryRuleExpressionsSeparatedByCommas returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionsSeparatedByCommasRule()); } 
	 iv_ruleExpressionsSeparatedByCommas=ruleExpressionsSeparatedByCommas 
	 { $current=$iv_ruleExpressionsSeparatedByCommas.current.getText(); }  
	 EOF 
;

// Rule ExpressionsSeparatedByCommas
ruleExpressionsSeparatedByCommas returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionsSeparatedByCommasAccess().getExpressionWithOutBracketParserRuleCall_0()); 
    }
    this_ExpressionWithOutBracket_0=ruleExpressionWithOutBracket    {
		$current.merge(this_ExpressionWithOutBracket_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
((    this_SPACE_1=RULE_SPACE    {
		$current.merge(this_SPACE_1);
    }

    { 
    newLeafNode(this_SPACE_1, grammarAccess.getExpressionsSeparatedByCommasAccess().getSPACETerminalRuleCall_1_0()); 
    }
)*    this_COMMA_2=RULE_COMMA    {
		$current.merge(this_COMMA_2);
    }

    { 
    newLeafNode(this_COMMA_2, grammarAccess.getExpressionsSeparatedByCommasAccess().getCOMMATerminalRuleCall_1_1()); 
    }
(    this_SPACE_3=RULE_SPACE    {
		$current.merge(this_SPACE_3);
    }

    { 
    newLeafNode(this_SPACE_3, grammarAccess.getExpressionsSeparatedByCommasAccess().getSPACETerminalRuleCall_1_2()); 
    }
)*
    { 
        newCompositeNode(grammarAccess.getExpressionsSeparatedByCommasAccess().getExpressionParserRuleCall_1_3()); 
    }
    this_Expression_4=ruleExpression    {
		$current.merge(this_Expression_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleExpressionWithOutBracket
entryRuleExpressionWithOutBracket returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionWithOutBracketRule()); } 
	 iv_ruleExpressionWithOutBracket=ruleExpressionWithOutBracket 
	 { $current=$iv_ruleExpressionWithOutBracket.current.getText(); }  
	 EOF 
;

// Rule ExpressionWithOutBracket
ruleExpressionWithOutBracket returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_SYMBOL_0=RULE_SYMBOL    {
		$current.merge(this_SYMBOL_0);
    }

    { 
    newLeafNode(this_SYMBOL_0, grammarAccess.getExpressionWithOutBracketAccess().getSYMBOLTerminalRuleCall_0()); 
    }

    |    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    newLeafNode(this_STRING_1, grammarAccess.getExpressionWithOutBracketAccess().getSTRINGTerminalRuleCall_1()); 
    }

    |    this_ARRAY_BLOCK_2=RULE_ARRAY_BLOCK    {
		$current.merge(this_ARRAY_BLOCK_2);
    }

    { 
    newLeafNode(this_ARRAY_BLOCK_2, grammarAccess.getExpressionWithOutBracketAccess().getARRAY_BLOCKTerminalRuleCall_2()); 
    }

    |    this_PARENTHESIS_BLOCK_3=RULE_PARENTHESIS_BLOCK    {
		$current.merge(this_PARENTHESIS_BLOCK_3);
    }

    { 
    newLeafNode(this_PARENTHESIS_BLOCK_3, grammarAccess.getExpressionWithOutBracketAccess().getPARENTHESIS_BLOCKTerminalRuleCall_3()); 
    }

    |    this_DECIMAL_4=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_4);
    }

    { 
    newLeafNode(this_DECIMAL_4, grammarAccess.getExpressionWithOutBracketAccess().getDECIMALTerminalRuleCall_4()); 
    }

    |    this_INT_5=RULE_INT    {
		$current.merge(this_INT_5);
    }

    { 
    newLeafNode(this_INT_5, grammarAccess.getExpressionWithOutBracketAccess().getINTTerminalRuleCall_5()); 
    }

    |    this_REGEXP_6=RULE_REGEXP    {
		$current.merge(this_REGEXP_6);
    }

    { 
    newLeafNode(this_REGEXP_6, grammarAccess.getExpressionWithOutBracketAccess().getREGEXPTerminalRuleCall_6()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionWithOutBracketAccess().getMethodChainCallParserRuleCall_7()); 
    }
    this_MethodChainCall_7=ruleMethodChainCall    {
		$current.merge(this_MethodChainCall_7);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionWithOutBracketAccess().getIgnoredHashKeyValueParserRuleCall_8()); 
    }
    this_IgnoredHashKeyValue_8=ruleIgnoredHashKeyValue    {
		$current.merge(this_IgnoredHashKeyValue_8);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleExpression
entryRuleExpression returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); } 
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current.getText(); }  
	 EOF 
;

// Rule Expression
ruleExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getExpressionWithOutBracketParserRuleCall_0()); 
    }
    this_ExpressionWithOutBracket_0=ruleExpressionWithOutBracket    {
		$current.merge(this_ExpressionWithOutBracket_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getBracketBlockParserRuleCall_1()); 
    }
    this_BracketBlock_1=ruleBracketBlock    {
		$current.merge(this_BracketBlock_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleOperationsChain
entryRuleOperationsChain returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationsChainRule()); } 
	 iv_ruleOperationsChain=ruleOperationsChain 
	 { $current=$iv_ruleOperationsChain.current.getText(); }  
	 EOF 
;

// Rule OperationsChain
ruleOperationsChain returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOperationsChainAccess().getMethodChainCallParserRuleCall_0()); 
    }
    this_MethodChainCall_0=ruleMethodChainCall    {
		$current.merge(this_MethodChainCall_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
((    this_ASSIGN_OPERATOR_1=RULE_ASSIGN_OPERATOR    {
		$current.merge(this_ASSIGN_OPERATOR_1);
    }

    { 
    newLeafNode(this_ASSIGN_OPERATOR_1, grammarAccess.getOperationsChainAccess().getASSIGN_OPERATORTerminalRuleCall_1_0_0()); 
    }

    |    this_OPERATOR_2=RULE_OPERATOR    {
		$current.merge(this_OPERATOR_2);
    }

    { 
    newLeafNode(this_OPERATOR_2, grammarAccess.getOperationsChainAccess().getOPERATORTerminalRuleCall_1_0_1()); 
    }

    |
	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperationsChainAccess().getEqualsSignKeyword_1_0_2()); 
    }
)(    this_SYMBOL_4=RULE_SYMBOL    {
		$current.merge(this_SYMBOL_4);
    }

    { 
    newLeafNode(this_SYMBOL_4, grammarAccess.getOperationsChainAccess().getSYMBOLTerminalRuleCall_1_1_0()); 
    }

    |    this_STRING_5=RULE_STRING    {
		$current.merge(this_STRING_5);
    }

    { 
    newLeafNode(this_STRING_5, grammarAccess.getOperationsChainAccess().getSTRINGTerminalRuleCall_1_1_1()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationsChainAccess().getBracketBlockParserRuleCall_1_1_2()); 
    }
    this_BracketBlock_6=ruleBracketBlock    {
		$current.merge(this_BracketBlock_6);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_ARRAY_BLOCK_7=RULE_ARRAY_BLOCK    {
		$current.merge(this_ARRAY_BLOCK_7);
    }

    { 
    newLeafNode(this_ARRAY_BLOCK_7, grammarAccess.getOperationsChainAccess().getARRAY_BLOCKTerminalRuleCall_1_1_3()); 
    }

    |    this_DECIMAL_8=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_8);
    }

    { 
    newLeafNode(this_DECIMAL_8, grammarAccess.getOperationsChainAccess().getDECIMALTerminalRuleCall_1_1_4()); 
    }

    |    this_INT_9=RULE_INT    {
		$current.merge(this_INT_9);
    }

    { 
    newLeafNode(this_INT_9, grammarAccess.getOperationsChainAccess().getINTTerminalRuleCall_1_1_5()); 
    }

    |    this_INT_METHOD_10=RULE_INT_METHOD    {
		$current.merge(this_INT_METHOD_10);
    }

    { 
    newLeafNode(this_INT_METHOD_10, grammarAccess.getOperationsChainAccess().getINT_METHODTerminalRuleCall_1_1_6()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperationsChainAccess().getMethodChainCallParserRuleCall_1_1_7()); 
    }
    this_MethodChainCall_11=ruleMethodChainCall    {
		$current.merge(this_MethodChainCall_11);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_REGEXP_12=RULE_REGEXP    {
		$current.merge(this_REGEXP_12);
    }

    { 
    newLeafNode(this_REGEXP_12, grammarAccess.getOperationsChainAccess().getREGEXPTerminalRuleCall_1_1_8()); 
    }
))*)
    ;





// Entry rule entryRuleRelationship
entryRuleRelationship returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationshipRule()); }
	 iv_ruleRelationship=ruleRelationship 
	 { $current=$iv_ruleRelationship.current; } 
	 EOF 
;

// Rule Relationship
ruleRelationship returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRelationshipAccess().getHasManyParserRuleCall_0()); 
    }
    this_HasMany_0=ruleHasMany
    { 
        $current = $this_HasMany_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRelationshipAccess().getHasOneParserRuleCall_1()); 
    }
    this_HasOne_1=ruleHasOne
    { 
        $current = $this_HasOne_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRelationshipAccess().getHasAndBelongsToManyParserRuleCall_2()); 
    }
    this_HasAndBelongsToMany_2=ruleHasAndBelongsToMany
    { 
        $current = $this_HasAndBelongsToMany_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRelationshipAccess().getBelongsToParserRuleCall_3()); 
    }
    this_BelongsTo_3=ruleBelongsTo
    { 
        $current = $this_BelongsTo_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleHasMany
entryRuleHasMany returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHasManyRule()); }
	 iv_ruleHasMany=ruleHasMany 
	 { $current=$iv_ruleHasMany.current; } 
	 EOF 
;

// Rule HasMany
ruleHasMany returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_HAS_MANY_WORD_0=RULE_HAS_MANY_WORD
    { 
    newLeafNode(this_HAS_MANY_WORD_0, grammarAccess.getHasManyAccess().getHAS_MANY_WORDTerminalRuleCall_0()); 
    }
(this_SPACE_1=RULE_SPACE
    { 
    newLeafNode(this_SPACE_1, grammarAccess.getHasManyAccess().getSPACETerminalRuleCall_1()); 
    }
)*(
(
(
		lv_name_2_1=RULE_SYMBOL
		{
			newLeafNode(lv_name_2_1, grammarAccess.getHasManyAccess().getNameSYMBOLTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHasManyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_1, 
        		"co.gruposaberes.model.Rails.SYMBOL");
	    }

    |		lv_name_2_2=RULE_STRING
		{
			newLeafNode(lv_name_2_2, grammarAccess.getHasManyAccess().getNameSTRINGTerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHasManyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_2, 
        		"co.gruposaberes.model.Rails.STRING");
	    }

)

)
)(this_SPACE_3=RULE_SPACE
    { 
    newLeafNode(this_SPACE_3, grammarAccess.getHasManyAccess().getSPACETerminalRuleCall_3()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getHasManyAccess().getOptionsHashKeyValueParserRuleCall_4_0()); 
	    }
		lv_options_4_0=ruleHashKeyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasManyRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_4_0, 
        		"co.gruposaberes.model.Rails.HashKeyValue");
	        afterParserOrEnumRuleCall();
	    }

)
)*(this_SL_COMMENT_5=RULE_SL_COMMENT
    { 
    newLeafNode(this_SL_COMMENT_5, grammarAccess.getHasManyAccess().getSL_COMMENTTerminalRuleCall_5()); 
    }
)?)
;





// Entry rule entryRuleHasOne
entryRuleHasOne returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHasOneRule()); }
	 iv_ruleHasOne=ruleHasOne 
	 { $current=$iv_ruleHasOne.current; } 
	 EOF 
;

// Rule HasOne
ruleHasOne returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_HAS_ONE_WORD_0=RULE_HAS_ONE_WORD
    { 
    newLeafNode(this_HAS_ONE_WORD_0, grammarAccess.getHasOneAccess().getHAS_ONE_WORDTerminalRuleCall_0()); 
    }
(this_SPACE_1=RULE_SPACE
    { 
    newLeafNode(this_SPACE_1, grammarAccess.getHasOneAccess().getSPACETerminalRuleCall_1()); 
    }
)*(
(
(
		lv_name_2_1=RULE_SYMBOL
		{
			newLeafNode(lv_name_2_1, grammarAccess.getHasOneAccess().getNameSYMBOLTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHasOneRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_1, 
        		"co.gruposaberes.model.Rails.SYMBOL");
	    }

    |		lv_name_2_2=RULE_STRING
		{
			newLeafNode(lv_name_2_2, grammarAccess.getHasOneAccess().getNameSTRINGTerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHasOneRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_2, 
        		"co.gruposaberes.model.Rails.STRING");
	    }

)

)
)(this_SPACE_3=RULE_SPACE
    { 
    newLeafNode(this_SPACE_3, grammarAccess.getHasOneAccess().getSPACETerminalRuleCall_3()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getHasOneAccess().getOptionsHashKeyValueParserRuleCall_4_0()); 
	    }
		lv_options_4_0=ruleHashKeyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasOneRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_4_0, 
        		"co.gruposaberes.model.Rails.HashKeyValue");
	        afterParserOrEnumRuleCall();
	    }

)
)*(this_SL_COMMENT_5=RULE_SL_COMMENT
    { 
    newLeafNode(this_SL_COMMENT_5, grammarAccess.getHasOneAccess().getSL_COMMENTTerminalRuleCall_5()); 
    }
)?)
;





// Entry rule entryRuleHasAndBelongsToMany
entryRuleHasAndBelongsToMany returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHasAndBelongsToManyRule()); }
	 iv_ruleHasAndBelongsToMany=ruleHasAndBelongsToMany 
	 { $current=$iv_ruleHasAndBelongsToMany.current; } 
	 EOF 
;

// Rule HasAndBelongsToMany
ruleHasAndBelongsToMany returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_HAS_AND_BELONGS_TO_MANY_WORD_0=RULE_HAS_AND_BELONGS_TO_MANY_WORD
    { 
    newLeafNode(this_HAS_AND_BELONGS_TO_MANY_WORD_0, grammarAccess.getHasAndBelongsToManyAccess().getHAS_AND_BELONGS_TO_MANY_WORDTerminalRuleCall_0()); 
    }
(this_SPACE_1=RULE_SPACE
    { 
    newLeafNode(this_SPACE_1, grammarAccess.getHasAndBelongsToManyAccess().getSPACETerminalRuleCall_1()); 
    }
)*(
(
(
		lv_name_2_1=RULE_SYMBOL
		{
			newLeafNode(lv_name_2_1, grammarAccess.getHasAndBelongsToManyAccess().getNameSYMBOLTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHasAndBelongsToManyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_1, 
        		"co.gruposaberes.model.Rails.SYMBOL");
	    }

    |		lv_name_2_2=RULE_STRING
		{
			newLeafNode(lv_name_2_2, grammarAccess.getHasAndBelongsToManyAccess().getNameSTRINGTerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHasAndBelongsToManyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_2, 
        		"co.gruposaberes.model.Rails.STRING");
	    }

)

)
)(this_SPACE_3=RULE_SPACE
    { 
    newLeafNode(this_SPACE_3, grammarAccess.getHasAndBelongsToManyAccess().getSPACETerminalRuleCall_3()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getHasAndBelongsToManyAccess().getOptionsHashKeyValueParserRuleCall_4_0()); 
	    }
		lv_options_4_0=ruleHashKeyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasAndBelongsToManyRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_4_0, 
        		"co.gruposaberes.model.Rails.HashKeyValue");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleBelongsTo
entryRuleBelongsTo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBelongsToRule()); }
	 iv_ruleBelongsTo=ruleBelongsTo 
	 { $current=$iv_ruleBelongsTo.current; } 
	 EOF 
;

// Rule BelongsTo
ruleBelongsTo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_BELONGS_TO_WORD_0=RULE_BELONGS_TO_WORD
    { 
    newLeafNode(this_BELONGS_TO_WORD_0, grammarAccess.getBelongsToAccess().getBELONGS_TO_WORDTerminalRuleCall_0()); 
    }
(this_SPACE_1=RULE_SPACE
    { 
    newLeafNode(this_SPACE_1, grammarAccess.getBelongsToAccess().getSPACETerminalRuleCall_1()); 
    }
)*(
(
(
		lv_name_2_1=RULE_SYMBOL
		{
			newLeafNode(lv_name_2_1, grammarAccess.getBelongsToAccess().getNameSYMBOLTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBelongsToRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_1, 
        		"co.gruposaberes.model.Rails.SYMBOL");
	    }

    |		lv_name_2_2=RULE_STRING
		{
			newLeafNode(lv_name_2_2, grammarAccess.getBelongsToAccess().getNameSTRINGTerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBelongsToRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_2, 
        		"co.gruposaberes.model.Rails.STRING");
	    }

)

)
)(this_SPACE_3=RULE_SPACE
    { 
    newLeafNode(this_SPACE_3, grammarAccess.getBelongsToAccess().getSPACETerminalRuleCall_3()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getBelongsToAccess().getOptionsHashKeyValueParserRuleCall_4_0()); 
	    }
		lv_options_4_0=ruleHashKeyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBelongsToRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_4_0, 
        		"co.gruposaberes.model.Rails.HashKeyValue");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleHashKeyValue
entryRuleHashKeyValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHashKeyValueRule()); }
	 iv_ruleHashKeyValue=ruleHashKeyValue 
	 { $current=$iv_ruleHashKeyValue.current; } 
	 EOF 
;

// Rule HashKeyValue
ruleHashKeyValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_COMMA_0=RULE_COMMA
    { 
    newLeafNode(this_COMMA_0, grammarAccess.getHashKeyValueAccess().getCOMMATerminalRuleCall_0()); 
    }
(this_SPACE_1=RULE_SPACE
    { 
    newLeafNode(this_SPACE_1, grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_1()); 
    }
)*(((
(
		lv_key_2_0=RULE_ID
		{
			newLeafNode(lv_key_2_0, grammarAccess.getHashKeyValueAccess().getKeyIDTerminalRuleCall_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_2_0, 
        		"co.gruposaberes.model.Rails.ID");
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getHashKeyValueAccess().getColonKeyword_2_0_1());
    }
)
    |((
(
(
		lv_key_4_1=RULE_SYMBOL
		{
			newLeafNode(lv_key_4_1, grammarAccess.getHashKeyValueAccess().getKeySYMBOLTerminalRuleCall_2_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_4_1, 
        		"co.gruposaberes.model.Rails.SYMBOL");
	    }

    |		lv_key_4_2=RULE_STRING
		{
			newLeafNode(lv_key_4_2, grammarAccess.getHashKeyValueAccess().getKeySTRINGTerminalRuleCall_2_1_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_4_2, 
        		"co.gruposaberes.model.Rails.STRING");
	    }

)

)
)(this_SPACE_5=RULE_SPACE
    { 
    newLeafNode(this_SPACE_5, grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_2_1_1()); 
    }
)*	otherlv_6='=>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getHashKeyValueAccess().getEqualsSignGreaterThanSignKeyword_2_1_2());
    }
))(this_SPACE_7=RULE_SPACE
    { 
    newLeafNode(this_SPACE_7, grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_3()); 
    }
)*(
(
(
		lv_value_8_1=RULE_SYMBOL
		{
			newLeafNode(lv_value_8_1, grammarAccess.getHashKeyValueAccess().getValueSYMBOLTerminalRuleCall_4_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_8_1, 
        		"co.gruposaberes.model.Rails.SYMBOL");
	    }

    |		lv_value_8_2=RULE_STRING
		{
			newLeafNode(lv_value_8_2, grammarAccess.getHashKeyValueAccess().getValueSTRINGTerminalRuleCall_4_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_8_2, 
        		"co.gruposaberes.model.Rails.STRING");
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getHashKeyValueAccess().getValueBracketBlockParserRuleCall_4_0_2()); 
	    }
		lv_value_8_3=ruleBracketBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHashKeyValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_8_3, 
        		"co.gruposaberes.model.Rails.BracketBlock");
	        afterParserOrEnumRuleCall();
	    }

    |		lv_value_8_4=RULE_ARRAY_BLOCK
		{
			newLeafNode(lv_value_8_4, grammarAccess.getHashKeyValueAccess().getValueARRAY_BLOCKTerminalRuleCall_4_0_3()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_8_4, 
        		"co.gruposaberes.model.Rails.ARRAY_BLOCK");
	    }

    |		lv_value_8_5=RULE_DECIMAL
		{
			newLeafNode(lv_value_8_5, grammarAccess.getHashKeyValueAccess().getValueDECIMALTerminalRuleCall_4_0_4()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_8_5, 
        		"co.gruposaberes.model.Rails.DECIMAL");
	    }

    |		lv_value_8_6=RULE_INT
		{
			newLeafNode(lv_value_8_6, grammarAccess.getHashKeyValueAccess().getValueINTTerminalRuleCall_4_0_5()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_8_6, 
        		"co.gruposaberes.model.Rails.INT");
	    }

    |		lv_value_8_7=RULE_INT_METHOD
		{
			newLeafNode(lv_value_8_7, grammarAccess.getHashKeyValueAccess().getValueINT_METHODTerminalRuleCall_4_0_6()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHashKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_8_7, 
        		"co.gruposaberes.model.Rails.INT_METHOD");
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getHashKeyValueAccess().getValueMethodChainCallParserRuleCall_4_0_7()); 
	    }
		lv_value_8_8=ruleMethodChainCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHashKeyValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_8_8, 
        		"co.gruposaberes.model.Rails.MethodChainCall");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(this_SPACE_9=RULE_SPACE
    { 
    newLeafNode(this_SPACE_9, grammarAccess.getHashKeyValueAccess().getSPACETerminalRuleCall_5()); 
    }
)*)
;





// Entry rule entryRuleIgnoredHashKeyValue
entryRuleIgnoredHashKeyValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIgnoredHashKeyValueRule()); } 
	 iv_ruleIgnoredHashKeyValue=ruleIgnoredHashKeyValue 
	 { $current=$iv_ruleIgnoredHashKeyValue.current.getText(); }  
	 EOF 
;

// Rule IgnoredHashKeyValue
ruleIgnoredHashKeyValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_SPACE_0=RULE_SPACE    {
		$current.merge(this_SPACE_0);
    }

    { 
    newLeafNode(this_SPACE_0, grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_0()); 
    }
)*((    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getIgnoredHashKeyValueAccess().getIDTerminalRuleCall_1_0_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIgnoredHashKeyValueAccess().getColonKeyword_1_0_1()); 
    }
)
    |((    this_SYMBOL_3=RULE_SYMBOL    {
		$current.merge(this_SYMBOL_3);
    }

    { 
    newLeafNode(this_SYMBOL_3, grammarAccess.getIgnoredHashKeyValueAccess().getSYMBOLTerminalRuleCall_1_1_0_0()); 
    }

    |    this_STRING_4=RULE_STRING    {
		$current.merge(this_STRING_4);
    }

    { 
    newLeafNode(this_STRING_4, grammarAccess.getIgnoredHashKeyValueAccess().getSTRINGTerminalRuleCall_1_1_0_1()); 
    }
)(    this_SPACE_5=RULE_SPACE    {
		$current.merge(this_SPACE_5);
    }

    { 
    newLeafNode(this_SPACE_5, grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_1_1_1()); 
    }
)*
	kw='=>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIgnoredHashKeyValueAccess().getEqualsSignGreaterThanSignKeyword_1_1_2()); 
    }
))(    this_SPACE_7=RULE_SPACE    {
		$current.merge(this_SPACE_7);
    }

    { 
    newLeafNode(this_SPACE_7, grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_2()); 
    }
)*(    this_SYMBOL_8=RULE_SYMBOL    {
		$current.merge(this_SYMBOL_8);
    }

    { 
    newLeafNode(this_SYMBOL_8, grammarAccess.getIgnoredHashKeyValueAccess().getSYMBOLTerminalRuleCall_3_0()); 
    }

    |    this_STRING_9=RULE_STRING    {
		$current.merge(this_STRING_9);
    }

    { 
    newLeafNode(this_STRING_9, grammarAccess.getIgnoredHashKeyValueAccess().getSTRINGTerminalRuleCall_3_1()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getIgnoredHashKeyValueAccess().getBracketBlockParserRuleCall_3_2()); 
    }
    this_BracketBlock_10=ruleBracketBlock    {
		$current.merge(this_BracketBlock_10);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_ARRAY_BLOCK_11=RULE_ARRAY_BLOCK    {
		$current.merge(this_ARRAY_BLOCK_11);
    }

    { 
    newLeafNode(this_ARRAY_BLOCK_11, grammarAccess.getIgnoredHashKeyValueAccess().getARRAY_BLOCKTerminalRuleCall_3_3()); 
    }

    |    this_DECIMAL_12=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_12);
    }

    { 
    newLeafNode(this_DECIMAL_12, grammarAccess.getIgnoredHashKeyValueAccess().getDECIMALTerminalRuleCall_3_4()); 
    }

    |    this_INT_13=RULE_INT    {
		$current.merge(this_INT_13);
    }

    { 
    newLeafNode(this_INT_13, grammarAccess.getIgnoredHashKeyValueAccess().getINTTerminalRuleCall_3_5()); 
    }

    |    this_INT_METHOD_14=RULE_INT_METHOD    {
		$current.merge(this_INT_METHOD_14);
    }

    { 
    newLeafNode(this_INT_METHOD_14, grammarAccess.getIgnoredHashKeyValueAccess().getINT_METHODTerminalRuleCall_3_6()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getIgnoredHashKeyValueAccess().getMethodChainCallParserRuleCall_3_7()); 
    }
    this_MethodChainCall_15=ruleMethodChainCall    {
		$current.merge(this_MethodChainCall_15);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_REGEXP_16=RULE_REGEXP    {
		$current.merge(this_REGEXP_16);
    }

    { 
    newLeafNode(this_REGEXP_16, grammarAccess.getIgnoredHashKeyValueAccess().getREGEXPTerminalRuleCall_3_8()); 
    }
)(    this_SPACE_17=RULE_SPACE    {
		$current.merge(this_SPACE_17);
    }

    { 
    newLeafNode(this_SPACE_17, grammarAccess.getIgnoredHashKeyValueAccess().getSPACETerminalRuleCall_4()); 
    }
)*)
    ;





// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	 iv_ruleMethod=ruleMethod 
	 { $current=$iv_ruleMethod.current; } 
	 EOF 
;

// Rule Method
ruleMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_DEF_WORD_0=RULE_DEF_WORD
    { 
    newLeafNode(this_DEF_WORD_0, grammarAccess.getMethodAccess().getDEF_WORDTerminalRuleCall_0()); 
    }
(this_SPACE_1=RULE_SPACE
    { 
    newLeafNode(this_SPACE_1, grammarAccess.getMethodAccess().getSPACETerminalRuleCall_1()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getNameMethodNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleMethodName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"co.gruposaberes.model.Rails.MethodName");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_SPACE_3=RULE_SPACE
    { 
    newLeafNode(this_SPACE_3, grammarAccess.getMethodAccess().getSPACETerminalRuleCall_3()); 
    }
)*(this_PARENTHESIS_BLOCK_4=RULE_PARENTHESIS_BLOCK
    { 
    newLeafNode(this_PARENTHESIS_BLOCK_4, grammarAccess.getMethodAccess().getPARENTHESIS_BLOCKTerminalRuleCall_4()); 
    }
)?)
;





// Entry rule entryRuleMethodName
entryRuleMethodName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodNameRule()); } 
	 iv_ruleMethodName=ruleMethodName 
	 { $current=$iv_ruleMethodName.current.getText(); }  
	 EOF 
;

// Rule MethodName
ruleMethodName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getMethodNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='?' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodNameAccess().getQuestionMarkKeyword_1_0()); 
    }

    |
	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMethodNameAccess().getEqualsSignKeyword_1_1()); 
    }
)?)
    ;





// Entry rule entryRuleBracketBlock
entryRuleBracketBlock returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBracketBlockRule()); } 
	 iv_ruleBracketBlock=ruleBracketBlock 
	 { $current=$iv_ruleBracketBlock.current.getText(); }  
	 EOF 
;

// Rule BracketBlock
ruleBracketBlock returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_BRACKET_BLOCK_ALONE_0=RULE_BRACKET_BLOCK_ALONE    {
		$current.merge(this_BRACKET_BLOCK_ALONE_0);
    }

    { 
    newLeafNode(this_BRACKET_BLOCK_ALONE_0, grammarAccess.getBracketBlockAccess().getBRACKET_BLOCK_ALONETerminalRuleCall_0()); 
    }

    |(
	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBracketBlockAccess().getLeftCurlyBracketKeyword_1_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getBracketBlockAccess().getExpressionsSeparatedByCommasParserRuleCall_1_1()); 
    }
    this_ExpressionsSeparatedByCommas_2=ruleExpressionsSeparatedByCommas    {
		$current.merge(this_ExpressionsSeparatedByCommas_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*
	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBracketBlockAccess().getRightCurlyBracketKeyword_1_2()); 
    }
))
    ;





RULE_COMMA : ',';

RULE_SPACE : (' '|'\f');

RULE_BRACKET_BLOCK_ALONE : '{' ~(('{'|'}'))* '}';

RULE_ARRAY_BLOCK : '[' ~(']')* ']';

RULE_PARENTHESIS_BLOCK : '(' ~(')')* ')';

RULE_BELONGS_TO_WORD : 'belongs_to';

RULE_HAS_MANY_WORD : 'has_many';

RULE_HAS_ONE_WORD : 'has_one';

RULE_HAS_AND_BELONGS_TO_MANY_WORD : 'has_and_belongs_to_many';

RULE_CLASS_WORD : 'class';

RULE_MODULE_WORD : 'module';

RULE_DEF_WORD : 'def';

RULE_SYMBOL : ':' RULE_ID;

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ( options {greedy=false;} : . )*'"'|'\'' ( options {greedy=false;} : . )*'\'');

RULE_ML_COMMENT : '=begin' ( options {greedy=false;} : . )*'=end';

RULE_SL_COMMENT : '#' ( options {greedy=false;} : . )*'\n';

RULE_INT : ('0'..'9')+;

RULE_INT_METHOD : ('0'..'9')+ '.' RULE_ID;

RULE_DECIMAL : ('0'..'9')+ '.' ('0'..'9')+;

RULE_REGEXP : '/' ('\\/'|~(('\\/'|RULE_BS)))* '/' ('i'|'o'|'p')?;

RULE_BS : ('\t'|'\n');

RULE_OPERATOR : ('+'|'-'|'*'|'/'|'%'|'**'|'='|'~'|'|'|'||'|'&'|'&&'|'=='|'!'|'<<'|'<=>'|'>'|'<'|'..'|'...');

RULE_ASSIGN_OPERATOR : RULE_OPERATOR '=';

RULE_ANY_OTHER : .;


